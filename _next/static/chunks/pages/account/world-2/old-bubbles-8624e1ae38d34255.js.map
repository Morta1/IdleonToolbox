{"version":3,"file":"static/chunks/pages/account/world-2/old-bubbles-8624e1ae38d34255.js","mappings":"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","sources":["webpack://_N_E/?5d77","webpack://_N_E/./components/common/Tabber.jsx","webpack://_N_E/./components/common/styles.jsx","webpack://_N_E/./pages/account/world-2/old-bubbles.js","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/world-2/old-bubbles\",\n      function () {\n        return require(\"private-next-pages/account/world-2/old-bubbles.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/world-2/old-bubbles\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, useMediaQuery } from '@mui/material';\nimport { prefix } from '@utility/helpers';\nimport Box from '@mui/material/Box';\nimport { useRouter } from 'next/router';\nconst Tabber = ({\n  tabs,\n  components,\n  icons,\n  children,\n  onTabChange,\n  forceScroll,\n  orientation = 'horizontal',\n  iconsOnly,\n  queryKey = 't',\n  clearOnChange = [],\n  disableQuery = false\n}) => {\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const router = useRouter();\n\n  // State for managing active tab if `disableQuery` is enabled\n  const [activeTab, setActiveTab] = useState(0);\n  const queryValue = router.query[queryKey];\n  const activeTabIndex = tabs.findIndex(tab => tab === queryValue);\n  const selectedTab = disableQuery ? activeTab : activeTabIndex >= 0 ? activeTabIndex : 0;\n  useEffect(() => {\n    if (!disableQuery) {\n      // Set the default query parameter if missing\n      if (!queryValue) {\n        router.replace({\n          pathname: router.pathname,\n          query: {\n            ...router.query,\n            [queryKey]: tabs[selectedTab]\n          }\n        }, undefined, {\n          shallow: true\n        });\n      }\n    }\n  }, [queryValue, queryKey, tabs, selectedTab, router, disableQuery]);\n  const handleOnClick = (e, selected) => {\n    if (disableQuery) {\n      setActiveTab(selected);\n    } else {\n      const newQuery = {\n        ...router.query,\n        [queryKey]: tabs[selected]\n      };\n      // Remove specified query parameters\n      clearOnChange.forEach(key => delete newQuery[key]);\n      router.push({\n        pathname: router.pathname,\n        query: newQuery\n      }, undefined, {\n        shallow: true\n      });\n    }\n    onTabChange && onTabChange(selected);\n  };\n  const array = Array.isArray(children) ? children : [children];\n  return <Box sx={orientation === 'vertical' ? {\n    flexGrow: 1,\n    display: 'flex'\n  } : {}} data-sentry-element=\"Box\" data-sentry-component=\"Tabber\" data-sentry-source-file=\"Tabber.jsx\">\n    <Tabs centered={!isMd || isMd && tabs.length < 4} scrollButtons allowScrollButtonsMobile sx={{\n      marginBottom: 3\n    }} variant={isMd && tabs.length >= 4 || forceScroll ? 'scrollable' : 'standard'} value={selectedTab} onChange={handleOnClick} data-sentry-element=\"Tabs\" data-sentry-source-file=\"Tabber.jsx\">\n      {(components ?? tabs)?.map((tab, index) => {\n        return <Tab iconPosition=\"start\" icon={icons?.[index] ? <img src={`${prefix}${icons?.[index]}.png`} /> : null} wrapped label={iconsOnly ? '' : tab} sx={{\n          minWidth: 62\n        }} key={`${tab?.[index]}-${index}`} />;\n      })}\n    </Tabs>\n    {onTabChange ? children : array?.map((child, index) => {\n      return index === selectedTab ? child : null;\n    })}\n  </Box>;\n};\nexport default Tabber;","import React, { forwardRef } from 'react';\nimport { cleanUnderscore, growth, notateNumber, numberWithCommas, prefix } from 'utility/helpers';\nimport { Badge, Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport Tooltip from '../Tooltip';\nimport { calcCardBonus } from 'parsers/cards';\nexport const IconWithText = forwardRef((props, ref) => {\n  const {\n    stat,\n    icon,\n    img,\n    title = '',\n    ...rest\n  } = props;\n  return <Tooltip title={title}>\n    <Stack alignItems={'center'} {...rest} ref={ref} style={{\n      position: 'relative',\n      width: 'fit-content'\n    }}>\n      <img {...img} src={`${prefix}data/${icon}.png`} alt=\"\" />\n      <Typography variant={'body1'} component={'span'}>{stat}</Typography>\n    </Stack>\n  </Tooltip>;\n});\nIconWithText.displayName = 'IconWithText';\nexport const TitleAndValue = ({\n  title,\n  value,\n  boldTitle,\n  titleStyle = {},\n  valueStyle = {}\n}) => {\n  return <Stack direction={'row'} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"TitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    {title ? <Typography sx={titleStyle} fontWeight={boldTitle ? 'bold' : 500} component={'span'}>{title}:&nbsp;</Typography> : null}\n    <Typography fontSize={15} component={'span'} sx={valueStyle} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{value}</Typography>\n  </Stack>;\n};\nexport const StyledBadge = styled(Badge)`\n  & .MuiBadge-badge {\n    background-color: #d5d5dc;\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\nexport const CardAndBorder = cardProps => {\n  const {\n    cardName,\n    stars,\n    cardIndex,\n    name,\n    variant,\n    rawName,\n    amount,\n    nextLevelReq\n  } = cardProps;\n  const iconSrc = variant === 'cardSet' ? `${prefix}data/${rawName}.png` : `${prefix}data/2Cards${cardIndex}.png`;\n  const realCardName = variant === 'cardSet' ? name : cardName;\n  return <>\n    {stars > 0 ? <BorderIcon src={`${prefix}data/CardEquipBorder${stars}.png`} alt=\"\" /> : null}\n    <Tooltip title={<CardTooltip {...{\n      ...cardProps,\n      cardName: realCardName,\n      nextLevelReq,\n      amount\n    }} />} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"styles.jsx\">\n      <CardIcon isCardSet={variant === 'cardSet'} amount={amount} src={iconSrc} alt=\"\" data-sentry-element=\"CardIcon\" data-sentry-source-file=\"styles.jsx\" />\n    </Tooltip>\n  </>;\n};\nconst CardTooltip = ({\n  displayName,\n  effect,\n  bonus,\n  stars,\n  showInfo,\n  nextLevelReq,\n  amount\n}) => {\n  let realBonus = bonus;\n  if (showInfo) {\n    realBonus = calcCardBonus({\n      bonus,\n      stars\n    });\n  }\n  return <>\n    <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(displayName)}</Typography>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(effect.replace('{', realBonus))}</Typography>\n    {showInfo ? <Stack mt={1} direction={'row'} gap={1} flexWrap={'wrap'}>\n      {[1, 2, 3, 4, 5, 6].map((_, index) => {\n        return <Stack key={`${displayName}-${index}`} alignItems={'center'} justifyContent={'space-between'}>\n          {index === 0 ? <Typography>Base</Typography> : <StarIcon src={`${prefix}etc/Star${index}.png`} alt=\"\" />}\n          <Typography>{bonus * (index + 1)}</Typography>\n        </Stack>;\n      })}\n    </Stack> : null}\n    {amount >= nextLevelReq ? <Stack>You've collected {numberWithCommas(amount)} cards</Stack> : nextLevelReq > 0 ? <Stack>\n        Progress: {numberWithCommas(amount)} / {numberWithCommas(nextLevelReq)}\n      </Stack> : null}\n  </>;\n};\nconst StarIcon = styled.img`\n  height: 20px;\n  object-fit: contain;\n`;\nconst CardIcon = styled.img`\n  width: 56px;\n  height: 72px;\n  object-fit: contain;\n  opacity: ${({\n  amount,\n  isCardSet\n}) => !amount && !isCardSet ? .5 : 1};\n`;\nconst BorderIcon = styled.img`\n  position: absolute;\n  left: 50%;\n  top: -3px;\n  pointer-events: none;\n  transform: translateX(-50%);\n`;\nexport const TalentTooltip = ({\n  level,\n  funcX,\n  x1,\n  x2,\n  funcY,\n  y1,\n  y2,\n  description,\n  name,\n  talentId\n}) => {\n  const mainStat = level > 0 ? growth(funcX, level, x1, x2) : 0;\n  const secondaryStat = level > 0 ? growth(funcY, level, y1, y2) : 0;\n  return <>\n    <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n      <img src={`${prefix}data/UISkillIcon${talentId}.png`} alt=\"\" />\n      <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(name)}</Typography>\n    </Stack>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(description).replace('{', mainStat).replace('}', secondaryStat)}</Typography>\n  </>;\n};\nexport const PlayersList = ({\n  players,\n  characters\n}) => {\n  return <Stack gap={1} direction={'row'} data-sentry-element=\"Stack\" data-sentry-component=\"PlayersList\" data-sentry-source-file=\"styles.jsx\">\n    {players.map(({\n      index\n    }) => <Tooltip key={name + '-head-' + index} title={characters?.[index]?.name}>\n      <img style={{\n        width: 24,\n        height: 24\n      }} src={`${prefix}data/ClassIcons${characters?.[index]?.classIndex}.png`} alt=\"\" />\n    </Tooltip>)}\n  </Stack>;\n};\nexport const MissingData = ({\n  name\n}) => {\n  return <Typography variant={'h3'} data-sentry-element=\"Typography\" data-sentry-component=\"MissingData\" data-sentry-source-file=\"styles.jsx\">Your account is missing data for {name}</Typography>;\n};\nexport const CardTitleAndValue = ({\n  variant,\n  raised,\n  cardSx,\n  imgOnly,\n  imgStyle,\n  title,\n  value,\n  children,\n  icon,\n  tooltipTitle,\n  stackProps,\n  contentPadding\n}) => {\n  return <Tooltip title={tooltipTitle || ''} data-sentry-element=\"Tooltip\" data-sentry-component=\"CardTitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    <Card variant={variant} raised={raised} sx={{\n      my: {\n        xs: 0,\n        md: 3\n      },\n      mb: {\n        xs: 2\n      },\n      width: 'fit-content',\n      ...cardSx\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"styles.jsx\">\n      <CardContent sx={{\n        '&:last-child': contentPadding ? {\n          p: contentPadding\n        } : {}\n      }} data-sentry-element=\"CardContent\" data-sentry-source-file=\"styles.jsx\">\n        <Stack sx={{\n          display: stackProps ? 'flex' : 'block',\n          ...(stackProps || {})\n        }} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n          {title ? <Typography sx={{\n            fontSize: 14\n          }} color=\"text.secondary\" gutterBottom component={'span'}>{title}</Typography> : null}\n          {value || imgOnly ? icon ? <Stack direction={'row'} gap={2} alignItems={'center'}>\n            <img style={{\n              objectFit: 'contain',\n              ...imgStyle\n            }} src={`${prefix}${icon}`} alt=\"\" />\n            {value ? <Typography component={'div'}>{value}</Typography> : null}\n          </Stack> : <Typography component={'div'}>{value}</Typography> : children}\n        </Stack>\n      </CardContent>\n    </Card>\n  </Tooltip>;\n};\nexport const Breakdown = ({\n  breakdown,\n  titleStyle = {},\n  notation = 'Big'\n}) => {\n  return <>\n    {breakdown?.map(({\n      name,\n      value,\n      title\n    }, index) => title ? <Typography sx={{\n      fontWeight: 500\n    }} key={`${name}-${index}`}>{title}</Typography> : !name ? <Divider sx={{\n      my: 1,\n      bgcolor: 'black'\n    }} key={`${name}-${index}`} /> : <TitleAndValue key={`${name}-${index}`} titleStyle={{\n      width: 120,\n      ...titleStyle\n    }} title={name} value={!isNaN(value) ? notateNumber(value, notation) : value} />)}\n  </>;\n};\nexport const CenteredStack = ({\n  direction = 'row',\n  children\n}) => {\n  return <Stack gap={1} direction={direction} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CenteredStack\" data-sentry-source-file=\"styles.jsx\">\n    {children}\n  </Stack>;\n};","import {\n  Card,\n  CardContent,\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  Select,\n  Stack,\n  TextField,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { AppContext } from 'components/common/context/AppProvider';\nimport styled from '@emotion/styled';\nimport { cleanUnderscore, growth, notateNumber, pascalCase, prefix } from 'utility/helpers';\nimport HtmlTooltip from 'components/Tooltip';\nimport debounce from 'lodash.debounce';\nimport { NextSeo } from 'next-seo';\nimport {\n  getBubbleAtomCost,\n  getBubbleBonus,\n  getMaxCauldron,\n  getUpgradeableBubbles,\n  getVialsBonusByStat\n} from '@parsers/alchemy';\nimport Box from '@mui/material/Box';\nimport Tabber from '../../../components/common/Tabber';\nimport { CardTitleAndValue } from '@components/common/styles';\nimport InfoIcon from '@mui/icons-material/Info';\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\nimport Link from '@mui/material/Link';\nimport { useRouter } from 'next/router';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst bargainOptions = [0, 25, 43.75, 57.81, 68.36, 76.27, 82.20, 86.65, 90];\nconst Bubbles = () => {\n  const router = useRouter();\n  const { state } = useContext(AppContext);\n  const [classDiscount, setClassDiscount] = useState(false);\n  const [condenseView, setCondenseView] = useState(false);\n  const [bargainTag, setBargainTag] = useState('0');\n  const [effThreshold, setEffThreshold] = useState(75);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [hidePastThreshold, setHidePastThreshold] = useState(false);\n  const [bubbles, setBubbles] = useState();\n  const [bubblesGoals, setBubblesGoals] = useState();\n  const myFirstChemSet = useMemo(() => state?.account?.lab?.labBonuses?.find(bonus => bonus.name === 'My_1st_Chemistry_Set')?.active, [state?.account?.lab.vials]);\n\n  useEffect(() => {\n    const fromStorage = localStorage.getItem('effThreshold');\n    if (fromStorage) {\n      setEffThreshold(parseInt(fromStorage));\n    }\n    const bubblesPage = Object.keys(state?.account?.alchemy?.bubbles)?.[selectedTab];\n    setBubbles(state?.account?.alchemy?.bubbles?.[bubblesPage]);\n  }, []);\n\n  const handleOnClick = (selected) => {\n    setSelectedTab(selected);\n    const bubblesPage = Object.keys(state?.account?.alchemy?.bubbles)?.[selected];\n    setBubbles(state?.account?.alchemy?.bubbles?.[bubblesPage]);\n    if (selected === 3) {\n      setClassDiscount(false);\n    }\n  }\n\n  const handleGoalChange = debounce((e, cauldronName, index) => {\n    const { value } = e.target;\n    setBubblesGoals({\n      ...bubblesGoals,\n      [cauldronName]: {\n        ...(bubblesGoals?.[cauldronName] || {}),\n        [index]: !value ? 0 : parseInt(value)\n      }\n    });\n  }, 100);\n\n  const calcBubbleMatCost = (bubbleIndex, vialMultiplier = 1, bubbleLvl, baseCost, isLiquid, cauldronCostLvl,\n                             undevelopedBubbleLv, barleyBrewLvl, lastBubbleLvl, classMultiplierLvl,\n                             shopBargainBought, smrtAchievement, multiBubble) => {\n    if (isLiquid) {\n      return baseCost + Math.floor(bubbleLvl / 20);\n    }\n    else {\n      const first = bubbleIndex < 15 ?\n        baseCost * Math.pow(1.35 - (0.3 * bubbleLvl) / (50 + bubbleLvl), bubbleLvl) :\n        baseCost * Math.pow(1.37 - (0.28 * bubbleLvl) / (60 + bubbleLvl), bubbleLvl);\n      const cauldronCostReduxBoost = Math.max(0.1, 1 - ((Math.round(10 * growth('decay', cauldronCostLvl, 90, 100, false)) / 10)) / 100);\n      const barleyBrewVialBonus = getVialsBonusByStat(state?.account?.alchemy?.vials, 'AlchBubbleCost');\n      const undevelopedBubbleBonus = getBubbleBonus(state?.account?.alchemy?.bubbles, 'kazam', 'UNDEVELOPED_COSTS', false);\n      const bubbleBargainBoost = Math.max(0.05, 1 - (growth('decay', lastBubbleLvl, 40, 12, false) / 100) *\n        growth('decayMulti', classMultiplierLvl, 2, 50, false) *\n        growth('decayMulti', multiBubble, 1.4, 30, false));\n      const secondMath = Math.max(.05, 1 - (barleyBrewVialBonus + undevelopedBubbleBonus) / 100);\n      const shopBargainBoost = Math.max(0.1, Math.pow(0.75, shopBargainBought));\n      const smrtBoost = Math.max(.9, 1 - .1 * smrtAchievement)\n      const endResult = first * bubbleBargainBoost * cauldronCostReduxBoost * secondMath * shopBargainBoost * smrtBoost;\n      return Math.min(endResult, 1e9);\n    }\n  };\n\n  const calculateMaterialCost = (bubbleLv, baseCost, isLiquid, cauldronName, bubbleIndex) => {\n    const cauldronCostLvl = state?.account?.alchemy?.cauldrons?.[cauldronName]?.boosts?.cost?.level || 0;\n    const undevelopedBubbleLv = state?.account?.alchemy?.bubbles?.kazam?.[6].level || 0;\n    const barleyBrewLvl = state?.account?.alchemy?.vials?.[9]?.level || 0;\n    const multiBubble = cauldronName !== 'kazam'\n      ? state?.account?.alchemy?.bubbles?.[cauldronName]?.[16]?.level || 0\n      : 0;\n    const lastBubbleLvl = state?.account?.alchemy?.bubbles?.[cauldronName]?.[14]?.level || 0;\n    const classMultiplierLvl = classDiscount && cauldronName !== 'kazam'\n      ? (state?.account?.alchemy?.bubbles?.[cauldronName]?.[1]?.level || 0)\n      : 0;\n    const shopBargainBought = bargainTag || 0;\n    const smrtAchievement = state?.account?.achievements[108]?.completed;\n    return calcBubbleMatCost(bubbleIndex, myFirstChemSet ? 2 : 1, bubbleLv, baseCost, isLiquid, cauldronCostLvl,\n      undevelopedBubbleLv, barleyBrewLvl, lastBubbleLvl, classMultiplierLvl,\n      shopBargainBought, smrtAchievement, multiBubble);\n  }\n\n  const getAccumulatedBubbleCost = (index, level, baseCost, isLiquid, cauldronName) => {\n    const levelDiff = (bubblesGoals?.[cauldronName]?.[index] ?? 0) - level;\n    if (isNaN(levelDiff)) return { singleLevelCost: 0, total: 0 };\n    if (levelDiff <= 0) {\n      const cost = calculateMaterialCost(level, baseCost, isLiquid, cauldronName, index);\n      return { singleLevelCost: cost, total: cost };\n    }\n    const array = new Array(levelDiff || 0).fill(1);\n    let singleLevelCost = 0;\n    const total = array.reduce((res, _, levelInd) => {\n        const cost = calculateMaterialCost(level + (levelInd === 0\n          ? 1\n          : levelInd), baseCost, isLiquid, cauldronName, index);\n        if (!isLiquid) {\n          singleLevelCost = cost;\n        }\n        return res + cost;\n      },\n      calculateMaterialCost(level, baseCost, isLiquid, cauldronName, index)\n    );\n    return { total, singleLevelCost };\n  }\n\n  const accumulatedCost = useCallback((index, level, baseCost, isLiquid, cauldronName) => getAccumulatedBubbleCost(index, level, baseCost, isLiquid, cauldronName), [bubblesGoals,\n    bargainTag, classDiscount]);\n\n  const upgradeableBubbles = useMemo(() => getUpgradeableBubbles(state?.account), [state?.account]);\n\n  const getMaxBonus = (func, x1) => {\n    if (!func?.includes('decay')) return null;\n    let maxBonus = x1;\n    if (func === 'decayMulti') maxBonus += 1\n    return maxBonus;\n  }\n\n  return (\n    <>\n      <NextSeo\n        title=\"Bubbles | Idleon Toolbox\"\n        description=\"Keep track of your bubbles level and requirements with a handy calculator\"\n      />\n      <Box sx={{ width: 'fit-content', margin: '24px auto' }}>\n        <Nblb title={'Next bubble upgrades'} bubbles={upgradeableBubbles?.normal} accumulatedCost={accumulatedCost}\n              account={state?.account}/>\n        <Divider sx={{ my: 2 }}/>\n        <Nblb lithium bubbles={upgradeableBubbles?.atomBubbles} accumulatedCost={accumulatedCost}\n              account={state?.account}/>\n      </Box>\n      <Stack direction={'row'} justifyContent={'center'} mt={2} gap={2} flexWrap={'wrap'}>\n        <CardTitleAndValue cardSx={{ height: 'fit-content' }} title={'Efficiency Threshold'} stackProps>\n          <FormControlLabel\n            control={<Checkbox sx={{ my: 0 }} size={'small'} checked={hidePastThreshold}\n                               onChange={() => setHidePastThreshold(!hidePastThreshold)}/>}\n            name={'classDiscount'}\n            label=\"Hide past threshold\"/>\n          <TextField sx={{ width: 150 }}\n                     label={''}\n                     value={effThreshold}\n                     type={'number'}\n                     inputProps={{ min: 0, max: 100 }}\n                     onChange={({ target }) => {\n                       localStorage.setItem('effThreshold', target.value);\n                       setEffThreshold(target.value)\n                     }}\n          />\n        </CardTitleAndValue>\n        <CardTitleAndValue cardSx={{ height: 'fit-content' }} title={''} stackProps>\n          <FormControl>\n            <InputLabel id=\"bargain-tag-select-input\">Bargain Tag</InputLabel>\n            <Select\n              labelId=\"bargain-tag-select\"\n              id=\"bargain-tag-select\"\n              value={bargainTag}\n              label=\"Bargain Tag\"\n              onChange={(e) => setBargainTag(e.target.value)}\n            >\n              {bargainOptions.map((value, index) => <MenuItem key={'option' + value} value={index}>{value}%</MenuItem>)}\n            </Select>\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox checked={condenseView} onChange={() => setCondenseView(!condenseView)}/>}\n            name={'Condense view'}\n            label=\"Condense view\"/>\n          {Object.keys(state?.account?.alchemy?.bubbles)?.[selectedTab] !== 'kazam' ?\n            <FormControlLabel\n              control={<Checkbox checked={classDiscount} onChange={() => setClassDiscount(!classDiscount)}/>}\n              name={'classDiscount'}\n              label=\"Class Discount\"/> : null}\n        </CardTitleAndValue>\n        <CardTitleAndValue cardSx={{ height: 'fit-content' }} title={'Misc'} stackProps={{ gap: 1 }}>\n          <Link underline={'hover'}\n                sx={{ cursor: 'pointer' }}\n                onClick={() => router.push({ pathname: 'bubbles' })}>\n            <Stack direction={'row'} alignItems={'center'} gap={1}>\n              <ArrowRightAltIcon/>\n              <Typography>New Bubbles Page</Typography>\n            </Stack>\n          </Link>\n          <Typography>Particle Upgrades: {state?.account?.accountOptions?.[135] || '0'}</Typography>\n          <Stack direction={'row'} gap={1}>\n            <Typography>Future Bubbles</Typography>\n            {bubbles?.length}\n            <HtmlTooltip title={<FutureBubblesTooltip/>}>\n              <InfoIcon/>\n            </HtmlTooltip>\n          </Stack>\n        </CardTitleAndValue>\n      </Stack>\n      <Tabber tabs={Object.keys(state?.account?.alchemy?.bubbles)} onTabChange={handleOnClick}>\n        <Stack direction={'row'} flexWrap={'wrap'} gap={3} justifyContent={'center'}>\n          {bubbles?.map((bubble, index) => {\n            if (index > 29) return null;\n            const { level, itemReq, rawName, bubbleName, func, x1, x2, cauldron } = bubble;\n            const goalLevel = bubblesGoals?.[cauldron]?.[index] ? bubblesGoals?.[cauldron]?.[index] < level\n              ? level\n              : bubblesGoals?.[cauldron]?.[index] : level;\n            const goalBonus = growth(func, goalLevel, x1, x2, true);\n            const bubbleMaxBonus = getMaxBonus(func, x1);\n            const effectHardCapPercent = goalLevel / (goalLevel + x2) * 100;\n            let thresholdObj;\n            if (bubbleMaxBonus) {\n              const thresholdLevelNeeded = effThreshold / (100 - effThreshold) * x2;\n              thresholdObj = {\n                thresholdMissingLevels: thresholdLevelNeeded - goalLevel,\n                thresholdBonus: growth(func, thresholdLevelNeeded, x1, x2, true),\n                effectHardCapPercent: thresholdLevelNeeded / (thresholdLevelNeeded + x2) * 100\n              }\n            }\n            if ((!bubbleMaxBonus || thresholdObj?.thresholdMissingLevels <= 0) && hidePastThreshold) return null;\n            return <React.Fragment key={rawName + '' + bubbleName + '' + index}>\n              <Card sx={{\n                width: condenseView ? 100 : 330,\n                border: bubbleMaxBonus && ((effectHardCapPercent >= effThreshold) || (thresholdObj?.thresholdMissingLevels > 0))\n                  ? '1px solid'\n                  : '',\n                borderColor: effectHardCapPercent >= effThreshold ? 'info.light' : 'error.main'\n              }}>\n                <CardContent>\n                  <Stack direction={'row'} alignItems={'center'} justifyContent={'space-around'} gap={2}>\n                    <Stack alignItems={'center'}>\n                      <HtmlTooltip\n                        dark={condenseView}\n                        title={condenseView ? <AdditionalInfo tooltip bubbleMaxBonus={bubbleMaxBonus}\n                                                              goalBonus={goalBonus}\n                                                              cauldron={cauldron}\n                                                              effectHardCapPercent={effectHardCapPercent}\n                                                              itemReq={itemReq}\n                                                              thresholdObj={thresholdObj}\n                                                              accumulatedCost={accumulatedCost}\n                                                              account={state?.account}\n                                                              level={level}\n                                                              index={index}\n                                                              bubble={bubble}\n                                                              goalLevel={goalLevel}/> :\n                          <BubbleTooltip {...{ ...bubble, goalLevel }}/>}>\n                        <BubbleIcon width={48} height={48}\n                                    level={level}\n                                    src={`${prefix}data/${rawName}.png`}\n                                    alt=\"\"/>\n                      </HtmlTooltip>\n                      <Stack alignItems={'center'} justifyContent={'center'}>\n                        <Typography\n                          variant={'caption'}>Lv. {level}</Typography>\n                        {!condenseView\n                          ? <Typography variant={'caption'}>{cleanUnderscore(bubbleName)}</Typography>\n                          : null}\n                      </Stack>\n                    </Stack>\n                    {!condenseView\n                      ? <TextField type={'number'}\n                                   sx={{ width: 90 }}\n                                   defaultValue={goalLevel}\n                                   onChange={(e) => handleGoalChange(e, cauldron, index)}\n                                   label={'Goal'} variant={'outlined'} inputProps={{ min: level || 0 }}/>\n                      : null}\n                  </Stack>\n                  {!condenseView ? <AdditionalInfo bubbleMaxBonus={bubbleMaxBonus}\n                                                   goalBonus={goalBonus}\n                                                   cauldron={cauldron}\n                                                   thresholdObj={thresholdObj}\n                                                   effectHardCapPercent={effectHardCapPercent}\n                                                   itemReq={itemReq}\n                                                   accumulatedCost={accumulatedCost}\n                                                   account={state?.account}\n                                                   level={level}\n                                                   index={index}\n                  /> : null}\n                </CardContent>\n              </Card>\n            </React.Fragment>\n          })}\n        </Stack>\n      </Tabber>\n    </>\n  );\n};\n\nconst AdditionalInfo = ({\n                          tooltip,\n                          bubbleMaxBonus,\n                          goalBonus,\n                          effectHardCapPercent,\n                          itemReq,\n                          thresholdObj,\n                          accumulatedCost,\n                          index,\n                          level,\n                          cauldron,\n                          account,\n                          bubble,\n                          goalLevel\n                        }) => {\n  return <Stack mt={1.5} direction={'row'} justifyContent={'center'} gap={3}\n                flexWrap={'wrap'}>\n    {tooltip ? <BubbleTooltip {...{\n      ...bubble,\n      goalLevel\n    }}/> : null}\n    <Stack gap={bubbleMaxBonus && thresholdObj?.thresholdMissingLevels > 0 ? 0 : 2} justifyContent={'center'}\n           alignItems={'center'}>\n      <HtmlTooltip title={'Bubble\\'s effect'}>\n        <BonusIcon src={`${prefix}data/SignStar3b.png`} alt=\"\"/>\n      </HtmlTooltip>\n      <HtmlTooltip\n        title={bubbleMaxBonus\n          ? `${goalBonus} is ${notateNumber(effectHardCapPercent)}% of possible hard cap effect of ${bubbleMaxBonus}`\n          : ''}>\n        <Typography variant={bubbleMaxBonus && thresholdObj?.thresholdMissingLevels > 0\n          ? 'caption'\n          : ''}>{goalBonus} {bubbleMaxBonus\n          ? `(${notateNumber(effectHardCapPercent)}%)`\n          : ''}</Typography>\n      </HtmlTooltip>\n      {bubbleMaxBonus && thresholdObj?.thresholdMissingLevels > 0 ? <HtmlTooltip\n        title={bubbleMaxBonus\n          ? `You need ${thresholdObj?.thresholdMissingLevels} levels to reach your threshold`\n          : ''}>\n        <Typography variant={'caption'}>Missing {thresholdObj?.thresholdMissingLevels} levels</Typography>\n      </HtmlTooltip> : null}\n    </Stack>\n    {\n      itemReq?.map(({ rawName, name, baseCost }, itemIndex) => {\n        if (rawName === 'Blank' || rawName === 'ERROR') return null;\n        const {\n          singleLevelCost,\n          total\n        } = accumulatedCost(index, level, baseCost, name?.includes('Liquid'), cauldron);\n        const x1Extension = ['sail', 'bits', 'w6item'];\n        const itemName = x1Extension.find((str) => rawName.toLowerCase().includes(str))\n          ? `${rawName}_x1`\n          : rawName;\n        const atomCost = singleLevelCost > 1e8 && !name?.includes('Liquid') && !name?.includes('Bits') && getBubbleAtomCost(index, singleLevelCost);\n        let amount;\n        if (rawName.includes('Liquid')) {\n          const liquids = { 'Liquid1': 0, 'Liquid2': 1, 'Liquid3': 2, 'Liquid4': 3 };\n          amount = account?.alchemy?.liquids?.[liquids?.[rawName]];\n        } else if (rawName.includes('Bits')) {\n          amount = account?.gaming?.bits;\n        } else if (rawName.includes('Sail')) {\n          amount = account?.sailing?.lootPile?.find(({ rawName: lootPileName }) => lootPileName === rawName.replace('SailTr', 'SailT'))?.amount;\n        } else if (rawName.includes('W6item')) {\n          const crops = { 'W6item1': 4, 'W6item2': 30, 'W6item3': 46, 'W6item4': 72, 'W6item5': 99 };\n          const essences = { 'W6item6': 0, 'W6item7': 1, 'W6item8': 2, 'W6item9': 3, 'W6item10': 4 };\n          if (crops?.[rawName]) {\n            amount = account?.farming?.crop?.[crops?.[rawName]];\n          } else if (essences?.hasOwnProperty(rawName)) {\n            amount = account?.summoning?.essences?.[essences?.[rawName]];\n          }\n        } else {\n          amount = account?.storage?.find(({ rawName: storageRawName }) => (storageRawName === rawName))?.amount;\n        }\n        return <Stack direction={'row'} key={`${rawName}-${name}-${itemIndex}`} gap={3}>\n          {atomCost ? <Stack gap={2} alignItems={'center'}>\n              <Tooltip title={<Typography\n                color={account?.atoms?.particles > atomCost\n                  ? 'success.light'\n                  : ''}>{Math.floor(account?.atoms?.particles)} / {atomCost}</Typography>}>\n                <ItemIcon src={`${prefix}etc/Particle.png`} alt=\"\"/>\n              </Tooltip>\n              <HtmlTooltip title={atomCost}>\n                <Typography>{notateNumber(atomCost, 'Big')}</Typography>\n              </HtmlTooltip></Stack>\n            : null}\n          <Stack gap={2} justifyContent={'center'}\n                 alignItems={'center'}>\n            <HtmlTooltip title={cleanUnderscore(name)}>\n              <ItemIcon src={`${prefix}data/${itemName}.png`}\n                        alt=\"\"/>\n            </HtmlTooltip>\n            <Tooltip\n              title={<Typography color={amount >= total\n                ? 'success.light'\n                : ''}>{notateNumber(amount, 'Big')} / {notateNumber(total, 'Big')}</Typography>}>\n              <Typography>{notateNumber(total, 'Big')}</Typography>\n            </Tooltip>\n          </Stack>\n        </Stack>\n      })\n    }\n  </Stack>\n}\n\nconst Nblb = ({ title, bubbles, lithium, accumulatedCost, account }) => {\n  return <Stack justifyContent={'center'} alignItems={'center'}>\n    <Typography>{title}</Typography>\n    {lithium ? <Typography variant={'caption'}>* 15% chance to be upgraded by lithium (atom\n      collider)</Typography> : null}\n    <Stack direction={'row'} flexWrap={'wrap'} gap={1}>\n      {bubbles?.map(({ rawName, bubbleName, level, itemReq, index, cauldron }, tIndex) => {\n        const {\n          singleLevelCost,\n          total\n        } = accumulatedCost(index, level, itemReq?.[0]?.baseCost, itemReq?.[0]?.name?.includes('Liquid'), cauldron);\n        const atomCost = singleLevelCost > 1e8 && !itemReq?.[0]?.name?.includes('Liquid') && !itemReq?.[0]?.name?.includes('Bits') && getBubbleAtomCost(index, singleLevelCost);\n        return <Stack alignItems={'center'} key={`${rawName}-${tIndex}-${lithium}-nblb`}>\n          <HtmlTooltip title={<>\n            <Typography sx={{ fontWeight: 'bold' }}>{pascalCase(cleanUnderscore(bubbleName))}</Typography>\n            <Stack direction={'row'} justifyContent={'center'} gap={1}>\n              {itemReq?.map(({ rawName }, index) => {\n                if (rawName === 'Blank' || rawName === 'ERROR' || rawName.includes('Liquid')) return null;\n                const x1Extension = ['sail', 'bits'];\n                const itemName = x1Extension.find((str) => rawName.toLowerCase().includes(str))\n                  ? `${rawName}_x1`\n                  : rawName;\n                return <Stack alignItems={'center'} direction={'row'} gap={1} key={'req' + rawName + index}>\n                  <Stack alignItems={'center'} justifyContent={'space-between'}>\n                    <ItemIcon src={`${prefix}data/${itemName}.png`} alt=\"\"/>\n                    <Typography>{notateNumber(total, 'Big')}</Typography>\n                  </Stack>\n                  {atomCost > 0 ? <Stack alignItems={'center'} justifyContent={'space-between'}>\n                    <Stack sx={{ width: 32, height: 32 }} alignItems={'center'} justifyContent={'center'}>\n                      <img width={18} height={18}\n                           src={`${prefix}etc/Particle.png`} alt=\"\"/>\n                    </Stack>\n                    <Typography>{atomCost}</Typography>\n                  </Stack> : null}\n                </Stack>\n              })}\n            </Stack>\n          </>}>\n            <img\n              style={{ opacity: lithium ? 0.8 : 1 }}\n              width={42}\n              height={42}\n              src={`${prefix}data/${rawName}.png`} alt=\"\"/>\n          </HtmlTooltip>\n          <Stack direction={'row'} alignItems={'center'} gap={.5}>\n            {atomCost > 0 ?\n              <Tooltip title={<Typography\n                color={account?.atoms?.particles > atomCost\n                  ? 'success.light'\n                  : ''}>{Math.floor(account?.atoms?.particles)} / {atomCost}</Typography>}>\n                <img width={18} height={18}\n                     src={`${prefix}etc/Particle.png`} alt=\"\"/>\n              </Tooltip> : null}\n            <Typography variant={'body1'}>{level}</Typography>\n          </Stack>\n        </Stack>\n      })}\n    </Stack>\n  </Stack>\n}\n\nconst BonusIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n`\nconst ItemIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst BubbleIcon = styled.img`\n  opacity: ${({ level }) => level === 0 ? .5 : 1};\n`;\n\nconst BubbleTooltip = ({ goalLevel, bubbleName, desc, func, x1, x2, level }) => {\n  const bonus = growth(func, level, x1, x2, true);\n  const goalBonus = growth(func, goalLevel, x1, x2, true);\n  return <>\n    <Typography fontWeight={'bold'} variant={'h6'}>{cleanUnderscore(bubbleName)}</Typography>\n    <Typography variant={'body1'}>{cleanUnderscore(desc.replace(/{/, bonus))}</Typography>\n    {level !== goalLevel ? <Typography sx={{ color: level > 0 ? 'multi' : '' }}\n                                       variant={'body1'}>Goal:\n      +{goalBonus}</Typography> : null}\n  </>;\n}\n\nconst FutureBubblesTooltip = () => {\n  const arr = new Array(15).fill(25).map((bubbleIndex, index) => getMaxCauldron(bubbleIndex + index)).toChunks(5);\n  return <Stack gap={2}>\n    {arr.map((chunk, index) => {\n      return <Stack key={index}>\n        <Typography sx={{ fontWeight: 'bold' }}>World {6 + index}</Typography>\n        <Stack>\n          {chunk.map((i, bIndex) => {\n            const currentIndex = 26 + (index * 5) + bIndex;\n            return <Typography key={i}>{currentIndex} - {notateNumber(i)}</Typography>\n          })}\n        </Stack>\n      </Stack>\n    })}\n  </Stack>\n}\n\nexport default Bubbles;\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","components","tabs","icons","children","onTabChange","forceScroll","orientation","iconsOnly","queryKey","clearOnChange","disableQuery","param","isMd","useMediaQuery","theme","breakpoints","down","noSsr","router","useRouter","activeTab","setActiveTab","useState","queryValue","query","activeTabIndex","findIndex","tab","selectedTab","useEffect","replace","pathname","undefined","shallow","array","Array","isArray","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Box","sx","flexGrow","display","data-sentry-element","data-sentry-component","data-sentry-source-file","jsx","Tabs","centered","length","scrollButtons","allowScrollButtonsMobile","marginBottom","variant","value","onChange","e","selected","newQuery","forEach","key","_this","map","index","Tab","iconPosition","icon","img","src","concat","prefix","wrapped","label","minWidth","child","IconWithText","forwardRef","props","ref","stat","title","rest","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Tooltip","Stack","alignItems","style","position","width","alt","Typography","component","displayName","TitleAndValue","boldTitle","titleStyle","valueStyle","direction","flexWrap","fontWeight","fontSize","StyledBadge","styled","Badge","CardAndBorder","cardProps","cardName","stars","cardIndex","name","rawName","amount","nextLevelReq","iconSrc","Fragment","BorderIcon","CardTooltip","CardIcon","isCardSet","effect","bonus","showInfo","realBonus","calcCardBonus","cleanUnderscore","mt","gap","_","justifyContent","StarIcon","numberWithCommas","_templateObject1","_templateObject2","_templateObject3","TalentTooltip","level","funcX","x1","x2","funcY","y1","y2","description","talentId","mainStat","growth","secondaryStat","PlayersList","players","characters","height","classIndex","MissingData","CardTitleAndValue","raised","cardSx","imgOnly","imgStyle","tooltipTitle","stackProps","contentPadding","Card","my","xs","md","mb","CardContent","p","color","gutterBottom","objectFit","Breakdown","breakdown","notation","notateNumber","Divider","bgcolor","CenteredStack","bargainOptions","AdditionalInfo","tooltip","bubbleMaxBonus","goalBonus","effectHardCapPercent","itemReq","thresholdObj","accumulatedCost","cauldron","account","bubble","goalLevel","BubbleTooltip","thresholdMissingLevels","HtmlTooltip","BonusIcon","itemIndex","baseCost","singleLevelCost","total","includes","itemName","x1Extension","find","toLowerCase","str","atomCost","getBubbleAtomCost","liquids","alchemy","gaming","bits","sailing","lootPile","lootPileName","crops","essences","farming","crop","hasOwnProperty","summoning","storage","storageRawName","atoms","particles","Math","floor","ItemIcon","Nblb","bubbles","lithium","tIndex","bubbleName","pascalCase","opacity","_templateObject","BubbleIcon","desc","func","FutureBubblesTooltip","arr","fill","bubbleIndex","getMaxCauldron","toChunks","chunk","i","bIndex","currentIndex","state","Object","useContext","AppContext","classDiscount","setClassDiscount","condenseView","setCondenseView","bargainTag","setBargainTag","effThreshold","setEffThreshold","setSelectedTab","hidePastThreshold","setHidePastThreshold","setBubbles","bubblesGoals","setBubblesGoals","myFirstChemSet","useMemo","lab","labBonuses","active","vials","fromStorage","localStorage","getItem","parseInt","bubblesPage","keys","handleGoalChange","debounce","cauldronName","target","calcBubbleMatCost","vialMultiplier","bubbleLvl","isLiquid","cauldronCostLvl","lastBubbleLvl","undevelopedBubbleLv","barleyBrewLvl","classMultiplierLvl","shopBargainBought","smrtAchievement","multiBubble","cauldronCostReduxBoost","max","round","barleyBrewVialBonus","getVialsBonusByStat","undevelopedBubbleBonus","getBubbleBonus","bubbleBargainBoost","utility_helpers__WEBPACK_IMPORTED_MODULE_5__","min","first","pow","calculateMaterialCost","bubbleLv","cauldrons","boosts","cost","kazam","achievements","completed","getAccumulatedBubbleCost","levelDiff","isNaN","reduce","res","levelInd","useCallback","upgradeableBubbles","getUpgradeableBubbles","getMaxBonus","maxBonus","NextSeo","margin","normal","atomBubbles","FormControlLabel","control","Checkbox","size","checked","TextField","type","inputProps","setItem","FormControl","InputLabel","id","Select","labelId","MenuItem","Link","underline","cursor","onClick","ArrowRightAltIcon","accountOptions","InfoIcon","Tabber","thresholdLevelNeeded","thresholdBonus","React","border","borderColor","dark","defaultValue"],"sourceRoot":""}