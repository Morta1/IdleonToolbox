{"version":3,"file":"static/chunks/pages/account/world-3/construction-c31b0c7eec83b0f4.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/Info.js","webpack://_N_E/./node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js","webpack://_N_E/?bcaf","webpack://_N_E/./components/common/Tabber.jsx","webpack://_N_E/./components/common/styles.jsx","webpack://_N_E/./node_modules/@mui/icons-material/esm/Forward.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/South.js","webpack://_N_E/./components/account/Worlds/World3/construction/ConstructionBoard.jsx","webpack://_N_E/./components/account/Worlds/World3/construction/ConstructionMain.jsx","webpack://_N_E/./components/account/Worlds/World3/construction/CogStatCalculator.jsx","webpack://_N_E/./pages/account/world-3/construction.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/world-3/construction\",\n      function () {\n        return require(\"private-next-pages/account/world-3/construction.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/world-3/construction\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, useMediaQuery } from '@mui/material';\nimport { prefix } from '@utility/helpers';\nimport Box from '@mui/material/Box';\nimport { useRouter } from 'next/router';\nconst Tabber = ({\n  tabs,\n  components,\n  icons,\n  children,\n  onTabChange,\n  forceScroll,\n  orientation = 'horizontal',\n  iconsOnly,\n  queryKey = 't',\n  clearOnChange = [],\n  disableQuery = false\n}) => {\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const router = useRouter();\n\n  // State for managing active tab if `disableQuery` is enabled\n  const [activeTab, setActiveTab] = useState(0);\n  const queryValue = router.query[queryKey];\n  const activeTabIndex = tabs.findIndex(tab => tab === queryValue);\n  const selectedTab = disableQuery ? activeTab : activeTabIndex >= 0 ? activeTabIndex : 0;\n  useEffect(() => {\n    if (!disableQuery) {\n      // Set the default query parameter if missing\n      if (!queryValue) {\n        router.replace({\n          pathname: router.pathname,\n          query: {\n            ...router.query,\n            [queryKey]: tabs[selectedTab]\n          }\n        }, undefined, {\n          shallow: true\n        });\n      }\n    }\n  }, [queryValue, queryKey, tabs, selectedTab, router, disableQuery]);\n  const handleOnClick = (e, selected) => {\n    if (disableQuery) {\n      setActiveTab(selected);\n    } else {\n      const newQuery = {\n        ...router.query,\n        [queryKey]: tabs[selected]\n      };\n      // Remove specified query parameters\n      clearOnChange.forEach(key => delete newQuery[key]);\n      router.push({\n        pathname: router.pathname,\n        query: newQuery\n      }, undefined, {\n        shallow: true\n      });\n    }\n    onTabChange && onTabChange(selected);\n  };\n  const array = Array.isArray(children) ? children : [children];\n  return <Box sx={orientation === 'vertical' ? {\n    flexGrow: 1,\n    display: 'flex'\n  } : {}} data-sentry-element=\"Box\" data-sentry-component=\"Tabber\" data-sentry-source-file=\"Tabber.jsx\">\n    <Tabs centered={!isMd || isMd && tabs.length < 4} scrollButtons allowScrollButtonsMobile sx={{\n      marginBottom: 3\n    }} variant={isMd && tabs.length >= 4 || forceScroll ? 'scrollable' : 'standard'} value={selectedTab} onChange={handleOnClick} data-sentry-element=\"Tabs\" data-sentry-source-file=\"Tabber.jsx\">\n      {(components ?? tabs)?.map((tab, index) => {\n        return <Tab iconPosition=\"start\" icon={icons?.[index] ? <img src={`${prefix}${icons?.[index]}.png`} /> : null} wrapped label={iconsOnly ? '' : tab} sx={{\n          minWidth: 62\n        }} key={`${tab?.[index]}-${index}`} />;\n      })}\n    </Tabs>\n    {onTabChange ? children : array?.map((child, index) => {\n      return index === selectedTab ? child : null;\n    })}\n  </Box>;\n};\nexport default Tabber;","import React, { forwardRef } from 'react';\nimport { cleanUnderscore, growth, notateNumber, numberWithCommas, prefix } from 'utility/helpers';\nimport { Badge, Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport Tooltip from '../Tooltip';\nimport { calcCardBonus } from 'parsers/cards';\nexport const IconWithText = forwardRef((props, ref) => {\n  const {\n    stat,\n    icon,\n    img,\n    title = '',\n    ...rest\n  } = props;\n  return <Tooltip title={title}>\n    <Stack alignItems={'center'} {...rest} ref={ref} style={{\n      position: 'relative',\n      width: 'fit-content'\n    }}>\n      <img {...img} src={`${prefix}data/${icon}.png`} alt=\"\" />\n      <Typography variant={'body1'} component={'span'}>{stat}</Typography>\n    </Stack>\n  </Tooltip>;\n});\nIconWithText.displayName = 'IconWithText';\nexport const TitleAndValue = ({\n  title,\n  value,\n  boldTitle,\n  titleStyle = {},\n  valueStyle = {}\n}) => {\n  return <Stack direction={'row'} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"TitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    {title ? <Typography sx={titleStyle} fontWeight={boldTitle ? 'bold' : 500} component={'span'}>{title}:&nbsp;</Typography> : null}\n    <Typography fontSize={15} component={'span'} sx={valueStyle} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{value}</Typography>\n  </Stack>;\n};\nexport const StyledBadge = styled(Badge)`\n  & .MuiBadge-badge {\n    background-color: #d5d5dc;\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\nexport const CardAndBorder = cardProps => {\n  const {\n    cardName,\n    stars,\n    cardIndex,\n    name,\n    variant,\n    rawName,\n    amount,\n    nextLevelReq\n  } = cardProps;\n  const iconSrc = variant === 'cardSet' ? `${prefix}data/${rawName}.png` : `${prefix}data/2Cards${cardIndex}.png`;\n  const realCardName = variant === 'cardSet' ? name : cardName;\n  return <>\n    {stars > 0 ? <BorderIcon src={`${prefix}data/CardEquipBorder${stars}.png`} alt=\"\" /> : null}\n    <Tooltip title={<CardTooltip {...{\n      ...cardProps,\n      cardName: realCardName,\n      nextLevelReq,\n      amount\n    }} />} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"styles.jsx\">\n      <CardIcon isCardSet={variant === 'cardSet'} amount={amount} src={iconSrc} alt=\"\" data-sentry-element=\"CardIcon\" data-sentry-source-file=\"styles.jsx\" />\n    </Tooltip>\n  </>;\n};\nconst CardTooltip = ({\n  displayName,\n  effect,\n  bonus,\n  stars,\n  showInfo,\n  nextLevelReq,\n  amount\n}) => {\n  let realBonus = bonus;\n  if (showInfo) {\n    realBonus = calcCardBonus({\n      bonus,\n      stars\n    });\n  }\n  return <>\n    <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(displayName)}</Typography>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(effect.replace('{', realBonus))}</Typography>\n    {showInfo ? <Stack mt={1} direction={'row'} gap={1} flexWrap={'wrap'}>\n      {[1, 2, 3, 4, 5, 6].map((_, index) => {\n        return <Stack key={`${displayName}-${index}`} alignItems={'center'} justifyContent={'space-between'}>\n          {index === 0 ? <Typography>Base</Typography> : <StarIcon src={`${prefix}etc/Star${index}.png`} alt=\"\" />}\n          <Typography>{bonus * (index + 1)}</Typography>\n        </Stack>;\n      })}\n    </Stack> : null}\n    {amount >= nextLevelReq ? <Stack>You've collected {numberWithCommas(amount)} cards</Stack> : nextLevelReq > 0 ? <Stack>\n        Progress: {numberWithCommas(amount)} / {numberWithCommas(nextLevelReq)}\n      </Stack> : null}\n  </>;\n};\nconst StarIcon = styled.img`\n  height: 20px;\n  object-fit: contain;\n`;\nconst CardIcon = styled.img`\n  width: 56px;\n  height: 72px;\n  object-fit: contain;\n  opacity: ${({\n  amount,\n  isCardSet\n}) => !amount && !isCardSet ? .5 : 1};\n`;\nconst BorderIcon = styled.img`\n  position: absolute;\n  left: 50%;\n  top: -3px;\n  pointer-events: none;\n  transform: translateX(-50%);\n`;\nexport const TalentTooltip = ({\n  level,\n  funcX,\n  x1,\n  x2,\n  funcY,\n  y1,\n  y2,\n  description,\n  name,\n  talentId\n}) => {\n  const mainStat = level > 0 ? growth(funcX, level, x1, x2) : 0;\n  const secondaryStat = level > 0 ? growth(funcY, level, y1, y2) : 0;\n  return <>\n    <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n      <img src={`${prefix}data/UISkillIcon${talentId}.png`} alt=\"\" />\n      <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(name)}</Typography>\n    </Stack>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(description).replace('{', mainStat).replace('}', secondaryStat)}</Typography>\n  </>;\n};\nexport const PlayersList = ({\n  players,\n  characters\n}) => {\n  return <Stack gap={1} direction={'row'} data-sentry-element=\"Stack\" data-sentry-component=\"PlayersList\" data-sentry-source-file=\"styles.jsx\">\n    {players.map(({\n      index\n    }) => <Tooltip key={name + '-head-' + index} title={characters?.[index]?.name}>\n      <img style={{\n        width: 24,\n        height: 24\n      }} src={`${prefix}data/ClassIcons${characters?.[index]?.classIndex}.png`} alt=\"\" />\n    </Tooltip>)}\n  </Stack>;\n};\nexport const MissingData = ({\n  name\n}) => {\n  return <Typography variant={'h3'} data-sentry-element=\"Typography\" data-sentry-component=\"MissingData\" data-sentry-source-file=\"styles.jsx\">Your account is missing data for {name}</Typography>;\n};\nexport const CardTitleAndValue = ({\n  variant,\n  raised,\n  cardSx,\n  imgOnly,\n  imgStyle,\n  title,\n  value,\n  children,\n  icon,\n  tooltipTitle,\n  stackProps,\n  contentPadding\n}) => {\n  return <Tooltip title={tooltipTitle || ''} data-sentry-element=\"Tooltip\" data-sentry-component=\"CardTitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    <Card variant={variant} raised={raised} sx={{\n      my: {\n        xs: 0,\n        md: 3\n      },\n      mb: {\n        xs: 2\n      },\n      width: 'fit-content',\n      ...cardSx\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"styles.jsx\">\n      <CardContent sx={{\n        '&:last-child': contentPadding ? {\n          p: contentPadding\n        } : {}\n      }} data-sentry-element=\"CardContent\" data-sentry-source-file=\"styles.jsx\">\n        <Stack sx={{\n          display: stackProps ? 'flex' : 'block',\n          ...(stackProps || {})\n        }} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n          {title ? <Typography sx={{\n            fontSize: 14\n          }} color=\"text.secondary\" gutterBottom component={'span'}>{title}</Typography> : null}\n          {value || imgOnly ? icon ? <Stack direction={'row'} gap={2} alignItems={'center'}>\n            <img style={{\n              objectFit: 'contain',\n              ...imgStyle\n            }} src={`${prefix}${icon}`} alt=\"\" />\n            {value ? <Typography component={'div'}>{value}</Typography> : null}\n          </Stack> : <Typography component={'div'}>{value}</Typography> : children}\n        </Stack>\n      </CardContent>\n    </Card>\n  </Tooltip>;\n};\nexport const Breakdown = ({\n  breakdown,\n  titleStyle = {},\n  notation = 'Big'\n}) => {\n  return <>\n    {breakdown?.map(({\n      name,\n      value,\n      title\n    }, index) => title ? <Typography sx={{\n      fontWeight: 500\n    }} key={`${name}-${index}`}>{title}</Typography> : !name ? <Divider sx={{\n      my: 1,\n      bgcolor: 'black'\n    }} key={`${name}-${index}`} /> : <TitleAndValue key={`${name}-${index}`} titleStyle={{\n      width: 120,\n      ...titleStyle\n    }} title={name} value={!isNaN(value) ? notateNumber(value, notation) : value} />)}\n  </>;\n};\nexport const CenteredStack = ({\n  direction = 'row',\n  children\n}) => {\n  return <Stack gap={1} direction={direction} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CenteredStack\" data-sentry-source-file=\"styles.jsx\">\n    {children}\n  </Stack>;\n};","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8V4l8 8-8 8v-4H4V8z\"\n}), 'Forward');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m19 15-1.41-1.41L13 18.17V2h-2v16.17l-4.59-4.59L5 15l7 7z\"\n}), 'South');","import { Box, Stack, Typography } from '@mui/material';\nimport Tooltip from '../../../../Tooltip';\nimport { cleanUnderscore, isProd, kFormatter, notateNumber, prefix } from '../../../../../utility/helpers';\nimport React from 'react';\nimport styled from '@emotion/styled';\nconst bonusTextSx = {\n  fontSize: 12,\n  fontWeight: 400,\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  backgroundColor: 'black'\n};\nconst indexSx = {\n  fontSize: 12,\n  fontWeight: 400,\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  backgroundColor: 'blue'\n};\nconst ConstructionBoard = ({\n  view,\n  board,\n  showTooltip,\n  setOutsideHighlight,\n  outsideHighlight\n}) => {\n  return <Box mt={3} sx={{\n    display: 'grid',\n    gap: '8px',\n    gridTemplateColumns: {\n      xs: 'repeat(8, minmax(45px, 1fr))',\n      md: 'repeat(12, minmax(45px, 1fr))'\n    },\n    gridTemplateRows: {\n      xs: 'repeat(8, minmax(45px, 1fr))',\n      md: 'repeat(8, minmax(45px, 1fr))'\n    }\n  }} data-sentry-element=\"Box\" data-sentry-component=\"ConstructionBoard\" data-sentry-source-file=\"ConstructionBoard.jsx\">\n    {board?.map((slot, index) => {\n      const {\n        currentAmount,\n        requiredAmount,\n        flagPlaced,\n        cog\n      } = slot;\n      const {\n        a: buildRate,\n        e: buildPercent,\n        b: exp,\n        d: secondExp,\n        c: flaggyRate,\n        j: classExp,\n        f: playerExp\n      } = cog?.stats;\n      const filled = currentAmount / requiredAmount * 100;\n      const rest = 100 - filled;\n      return <Box key={index} sx={{\n        outline: cog?.originalIndex === outsideHighlight ? '1px solid red' : '',\n        opacity: !setOutsideHighlight && cog?.originalIndex === index ? .5 : 1\n      }} onMouseEnter={() => typeof setOutsideHighlight === 'function' && setOutsideHighlight(cog?.originalIndex)} onMouseLeave={() => typeof setOutsideHighlight === 'function' && setOutsideHighlight(null)}>\n          <Tooltip title={showTooltip ? <CogTooltip {...slot} index={index} character={cog?.name?.includes('Player') ? cog?.name?.split('Player_')[1] : ''} /> : ''}>\n            <SlotBackground filled={filled} rest={rest}>\n              {flagPlaced ? <FlagIcon src={`${prefix}data/CogFLflag.png`} alt=\"\" /> : null}\n              {cog?.name && !flagPlaced ? <SlotIcon src={`${prefix}data/${cog?.name?.includes('Player') ? 'headBIG' : cog?.name}.png`} alt=\"\" /> : null}\n              {!isProd ? <Typography sx={indexSx}>{index}</Typography> : null}\n              {view === 'build' && !flagPlaced && buildRate?.value ? <Typography sx={bonusTextSx}>{notateNumber(buildRate?.value, 'Big') || null}</Typography> : null}\n              {view === 'buildPercent' && !flagPlaced && buildPercent?.value ? <Typography sx={bonusTextSx}>{notateNumber(buildPercent?.value, 'Big') || null}</Typography> : null}\n              {view === 'exp' && !flagPlaced ? <Typography sx={bonusTextSx}>{exp?.value && notateNumber(exp?.value, 'Big') || secondExp?.value && notateNumber(secondExp?.value, 'Big') || null}</Typography> : null}\n              {view === 'playerExp' && !flagPlaced ? <Typography sx={bonusTextSx}>{playerExp?.value && notateNumber(playerExp?.value, 'Big') || null}</Typography> : null}\n              {view === 'flaggy' && !flagPlaced && flaggyRate?.value ? <Typography sx={bonusTextSx}>{notateNumber(flaggyRate?.value, 'Big') || null}</Typography> : null}\n              {view === 'classExp' && !flagPlaced && classExp?.value ? <Typography sx={bonusTextSx}>{notateNumber(classExp?.value, 'Big') || null}</Typography> : null}\n            </SlotBackground>\n          </Tooltip>\n        </Box>;\n    })}\n  </Box>;\n};\nconst CogTooltip = ({\n  character,\n  index,\n  currentAmount,\n  requiredAmount,\n  cog\n}) => {\n  return <>\n      {character ? <Typography sx={{\n      fontWeight: 'bold'\n    }}>{character}</Typography> : null}\n      {currentAmount < requiredAmount ? <Typography>\n          {kFormatter(currentAmount, 2)} / {kFormatter(requiredAmount, 2)} ({kFormatter(currentAmount / requiredAmount * 100, 2)}%)\n        </Typography> : null}\n      {Object.values(cog?.stats)?.map(({\n      name,\n      value\n    }, index) => name ? <div key={`${name}-${index}`}>\n            {notateNumber(value, 'Big')}\n            {cleanUnderscore(name)}\n          </div> : null)}\n      index: {index}\n    </>;\n};\nconst SlotBackground = styled(Stack)`\n  position: relative;\n  background-image: url(${() => `${prefix}data/CogSq0.png`});\n  background-repeat: no-repeat;\n  background-position: center;\n\n  width: 46px;\n  height: 46px;\n\n  &:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    z-index: -1;\n    ${({\n  filled\n}) => filled === 0 || filled === 100 ? '' : `background: linear-gradient(to top, #9de060 ${filled}%, transparent 0%);`}\n\n    width: 48px;\n    height: 47px;\n    top: 1px;\n    left: -1px;\n  }\n`;\nconst FlagIcon = styled.img`\n  width: 47px;\n  height: 47px;\n`;\nconst SlotIcon = styled.img`\n  width: 47px;\n  height: 47px;\n`;\nexport default ConstructionBoard;","import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../../../common/context/AppProvider';\nimport { optimizeArrayWithSwaps } from '../../../../../parsers/construction';\nimport { Checkbox, FormControl, FormControlLabel, Select, Stack, TextField, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport Tooltip from '../../../../Tooltip';\nimport Link from '@mui/material/Link';\nimport InfoIcon from '@mui/icons-material/Info';\nimport Button from '@mui/material/Button';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport { CardTitleAndValue } from '../../../../common/styles';\nimport { notateNumber } from '../../../../../utility/helpers';\nimport SouthIcon from '@mui/icons-material/South';\nimport MenuItem from '@mui/material/MenuItem';\nimport ConstructionBoard from './ConstructionBoard';\nconst ConstructionMain = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [view, setView] = useState('build');\n  const [showTooltip, setShowTooltip] = useState(true);\n  const [stat, setStat] = useState('totalBuildRate');\n  const [computeTime, setComputeTime] = useState(2500);\n  const [current, setCurrent] = useState(state?.account?.construction);\n  const [optimized, setOptimized] = useState(null);\n  const [outsideHighlight, setOutsideHighlight] = useState(null);\n  const [moves, setMoves] = useState({\n    list: [],\n    current: 0\n  });\n  const handleCopy = async data => {\n    try {\n      await navigator.clipboard.writeText(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    if (stat === 'totalBuildRate') {\n      setView('build');\n    } else if (stat === 'totalPlayerExpRate') {\n      setView('exp');\n    }\n  }, [stat]);\n\n  // function applyMove(board, from, to) {\n  //   const newBoard = [...board];\n  //   const tempCog = newBoard[from].cog;\n  //   newBoard[from].cog = newBoard[to].cog;\n  //   newBoard[to].cog = tempCog;\n  //   return newBoard;\n  // }\n\n  // const handleNextMove = () => {\n  //   if (moves.current >= moves.list.length - 1) return null;\n  //   setMoves({ ...moves, current: moves.current + 1 });\n  //   const { from, to } = moves.list[moves.current];\n  //   const temp = applyMove(current?.board, from, to);\n  //   setCurrent({ ...current, board: temp });\n  // }\n  //\n  // const handlePrevMove = () => {\n  //   if (moves.current <= 0) return null;\n  //   setMoves({ ...moves, current: moves.current - 1 });\n  //   const { from, to } = moves.list?.[moves.current - 1];\n  //   const temp = applyMove(current?.board, to, from);\n  //   setCurrent({ ...current, board: temp });\n  // }\n\n  const handleOptimize = () => {\n    setCurrent(state?.account?.construction);\n    const base = structuredClone(state?.account?.construction?.baseBoard);\n    const opt = optimizeArrayWithSwaps(base, stat, computeTime, state?.characters);\n    setMoves({\n      list: opt?.moves,\n      current: 0\n    });\n    setOptimized(opt);\n  };\n  return <>\n      <Stack alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n        <ToggleButtonGroup value={view} exclusive onChange={(e, value) => value?.length ? setView(value) : null} data-sentry-element=\"ToggleButtonGroup\" data-sentry-source-file=\"ConstructionMain.jsx\">\n          <ToggleButton value=\"build\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Build</ToggleButton>\n          <ToggleButton value=\"buildPercent\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Build %</ToggleButton>\n          <ToggleButton value=\"exp\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Exp</ToggleButton>\n          <ToggleButton value=\"playerExp\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Player Exp boost</ToggleButton>\n          <ToggleButton value=\"flaggy\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Flaggy</ToggleButton>\n        </ToggleButtonGroup>\n        <Stack my={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n          <Stack my={1} gap={1} direction={'row'} alignItems={'center'} justifyContent={'center'} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Typography variant={'h6'} textAlign={'center'} data-sentry-element=\"Typography\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              Cogstruction{' '}\n            </Typography>\n            <Tooltip followCursor={false} title={<>\n                  You can export your data and use it in{' '}\n                  <Link target={'_blank'} underline={'always'} color={'info.dark'} href=\"https://github.com/automorphis/Cogstruction\" rel=\"noreferrer\">\n                    Cogstruction\n                  </Link>\n                </>} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <InfoIcon data-sentry-element=\"InfoIcon\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n            </Tooltip>\n          </Stack>\n          <Stack direction={'row'} gap={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Button variant={'contained'} color={'primary'} sx={{\n            textTransform: 'unset'\n          }} onClick={() => handleCopy(state?.account?.construction?.cogstruction?.cogData)} startIcon={<FileCopyIcon />} data-sentry-element=\"Button\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              Cogstruction Data\n            </Button>\n            <Button variant={'contained'} color={'primary'} sx={{\n            textTransform: 'unset'\n          }} onClick={() => handleCopy(state?.account?.construction?.cogstruction?.empties)} startIcon={<FileCopyIcon />} data-sentry-element=\"Button\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              Cogstruction Empties\n            </Button>\n          </Stack>\n        </Stack>\n        <Stack direction={'row'} my={2} gap={2} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n          <CardTitleAndValue title={'Total Build Rate'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"ConstructionMain.jsx\">{notateNumber(state?.account?.construction?.totalBuildRate)}/HR</Typography>\n              {optimized ? <SouthIcon /> : null}\n              {optimized ? <Typography sx={{\n              color: 'info.light'\n            }}>{notateNumber(optimized?.totalBuildRate)}/HR\n                  ({notateNumber(optimized?.totalBuildRate - state?.account?.construction?.totalBuildRate)})</Typography> : null}\n            </Stack>\n          </CardTitleAndValue>\n          <CardTitleAndValue title={'Total Player XP rate'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"ConstructionMain.jsx\">{notateNumber(state?.account?.construction?.totalPlayerExpRate)}/HR</Typography>\n              {optimized ? <SouthIcon /> : null}\n              {optimized ? <Typography sx={{\n              color: 'info.light'\n            }}>{notateNumber(optimized?.totalPlayerExpRate)}/HR\n                  ({notateNumber(optimized?.totalPlayerExpRate - state?.account?.construction?.totalPlayerExpRate)})</Typography> : null}\n            </Stack>\n          </CardTitleAndValue>\n          <CardTitleAndValue title={'Player XP Bonus'} value={`${notateNumber(state?.account?.construction?.totalExpRate)}%`} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n          <CardTitleAndValue title={'Flaggy Rate'} value={`${notateNumber(state?.account?.construction?.totalFlaggyRate)}/HR`} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n          <CardTitleAndValue title={'Hover'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack sx={{\n            maxWidth: 200\n          }} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <FormControlLabel control={<Checkbox checked={showTooltip} onChange={() => setShowTooltip(!showTooltip)} />} name={'showTooltip'} label=\"Show tooltip\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n            </Stack>\n          </CardTitleAndValue>\n          <CardTitleAndValue title={'Optimize'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <TextField onChange={({\n              target\n            }) => setComputeTime(target.value)} type={'number'} inputProps={{\n              min: 0\n            }} variant={'standard'} label={'Compute time (in ms)'} value={computeTime} data-sentry-element=\"TextField\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n              <FormControl fullWidth size={'small'} variant=\"standard\" data-sentry-element=\"FormControl\" data-sentry-source-file=\"ConstructionMain.jsx\">\n                {/*<InputLabel id=\"stat\">Stat</InputLabel>*/}\n                <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" value={stat} label=\"Age\" onChange={e => setStat(e.target.value)} data-sentry-element=\"Select\" data-sentry-source-file=\"ConstructionMain.jsx\">\n                  <MenuItem value={'totalBuildRate'} data-sentry-element=\"MenuItem\" data-sentry-source-file=\"ConstructionMain.jsx\">Build speed</MenuItem>\n                  <MenuItem value={'totalPlayerExpRate'} data-sentry-element=\"MenuItem\" data-sentry-source-file=\"ConstructionMain.jsx\">Player XP rate</MenuItem>\n                  {/*<MenuItem value={'totalCharacterExp'}>Total character XP</MenuItem>*/}\n                </Select>\n              </FormControl>\n              <Button variant={'contained'} onClick={handleOptimize} data-sentry-element=\"Button\" data-sentry-source-file=\"ConstructionMain.jsx\">Optimize</Button>\n\n            </Stack>\n          </CardTitleAndValue>\n        </Stack>\n        <ConstructionBoard view={view} showTooltip={showTooltip} setOutsideHighlight={setOutsideHighlight} move={moves.list[moves.current]} board={current?.board} data-sentry-element=\"ConstructionBoard\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n        {/*{optimized ? <Stack direction={'row'} alignItems={'center'} justify-content={'space-between'}>*/}\n        {/*  <IconButton onClick={handlePrevMove}>*/}\n        {/*    <ReverseForwardIcon/>*/}\n        {/*  </IconButton>*/}\n        {/*  {moves.current + 1} / {moves.list.length}*/}\n        {/*  <IconButton onClick={handleNextMove}>*/}\n        {/*    <ForwardIcon/>*/}\n        {/*  </IconButton>*/}\n        {/*</Stack> : null}*/}\n        {optimized ? <Typography sx={{\n        mt: 3\n      }} variant={'caption'}>* Hovering over a cog in the upper board will reveal\n          where the same cog is placed on the lower board.</Typography> : null}\n        {optimized ? <ConstructionBoard view={view} outsideHighlight={outsideHighlight} showTooltip={showTooltip} board={optimized?.board} /> : null}\n\n      </Stack>\n    </>;\n};\nexport default ConstructionMain;","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, Stack, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { getCharacterByHighestSkillLevel } from '../../../../../parsers/misc';\nimport { AppContext } from '../../../../common/context/AppProvider';\nimport { CardTitleAndValue } from '../../../../common/styles';\nimport { notateNumber } from '../../../../../utility/helpers';\nconst CogStatCalculator = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [cogType, setCogType] = useState(5);\n  const highestDK = useMemo(() => getCharacterByHighestSkillLevel(state?.characters, '', 'construction'), [state?.characters]);\n  const highestConstruction = highestDK?.skillsInfo?.construction?.level;\n  const mainConstructionValue = Math.pow(highestConstruction / 3 + 0.7, 1.3 + 0.05 * cogType) / 4 + Math.pow(3, cogType - 2);\n  const constructionMin = mainConstructionValue * .4;\n  const constructionMax = mainConstructionValue * 3;\n  const handleChange = event => {\n    setCogType(event.target.value);\n  };\n  return <Stack alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CogStatCalculator\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n      <CardTitleAndValue title={'Highest Cons level'} value={highestDK?.skillsInfo?.construction?.level || 0} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n      <FormControl data-sentry-element=\"FormControl\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <FormLabel id=\"demo-row-radio-buttons-group-label\" data-sentry-element=\"FormLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\">Cog type</FormLabel>\n        <RadioGroup row aria-labelledby=\"demo-row-radio-buttons-group-label\" name=\"row-radio-buttons-group\" value={cogType} onChange={handleChange} data-sentry-element=\"RadioGroup\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n          <FormControlLabel value={2} control={<Radio />} label=\"Nooby\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n          <FormControlLabel value={3} control={<Radio />} label=\"Decent\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n          <FormControlLabel value={4} control={<Radio />} label=\"Superb\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n          <FormControlLabel value={5} control={<Radio />} label=\"Ultimate\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        </RadioGroup>\n      </FormControl>\n\n      <Stack direction={'row'} gap={3} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <Section title={'Construction Value'} main={mainConstructionValue} min={constructionMin} max={constructionMax} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        <Section title={'Build rate'} min={Math.floor(constructionMin)} max={Math.floor(constructionMax)} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        <Section title={'Flag rate'} min={Math.round(Math.pow(constructionMin, .8))} max={Math.round(Math.pow(constructionMax, .8))} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        <Section title={'Exp'} min={Math.max(Math.floor(Math.pow(constructionMin, 0.4) + Math.log10(constructionMin) * 10 - 5), 2)} max={Math.max(Math.floor(Math.pow(constructionMax, 0.4) + Math.log10(constructionMax) * 10 - 5), 2)} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n      </Stack>\n    </Stack>;\n};\nconst Section = ({\n  title,\n  main,\n  min,\n  max\n}) => {\n  return <CardTitleAndValue title={title} data-sentry-element=\"CardTitleAndValue\" data-sentry-component=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n    <Stack data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n      {main ? <Stack alignItems={'center'} direction={'row'} gap={1}>\n        <Typography sx={{\n          fontSize: 14\n        }} color=\"text.secondary\">main</Typography>\n        <Typography>{notateNumber(main, 'MultiplierInfo')}</Typography>\n      </Stack> : null}\n      <Stack alignItems={'center'} direction={'row'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <Typography sx={{\n          fontSize: 14\n        }} color=\"text.secondary\" data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">min</Typography>\n        <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">{notateNumber(min, 'MultiplierInfo')}</Typography>\n      </Stack>\n      <Stack alignItems={'center'} direction={'row'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <Typography sx={{\n          fontSize: 14\n        }} color=\"text.secondary\" data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">max</Typography>\n        <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">{notateNumber(max, 'MultiplierInfo')}</Typography>\n      </Stack>\n    </Stack>\n  </CardTitleAndValue>;\n};\nexport default CogStatCalculator;","import React from 'react';\nimport ForwardIcon from '@mui/icons-material/Forward';\nimport styled from '@emotion/styled';\nimport ConstructionMain from '../../../components/account/Worlds/World3/construction/ConstructionMain';\nimport Tabber from '../../../components/common/Tabber';\nimport { NextSeo } from 'next-seo';\nimport { Typography } from '@mui/material';\nimport CogStatCalculator from '../../../components/account/Worlds/World3/construction/CogStatCalculator';\nconst Construction = () => {\n  return <>\n    <NextSeo title=\"Construction | Idleon Toolbox\" description=\"Keep track of your construction board, cogs information and more\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"construction.jsx\" />\n    <Tabber tabs={['Main', 'Cog stat calculator']} data-sentry-element=\"Tabber\" data-sentry-source-file=\"construction.jsx\">\n      <ConstructionMain data-sentry-element=\"ConstructionMain\" data-sentry-source-file=\"construction.jsx\" />\n      <CogStatCalculator data-sentry-element=\"CogStatCalculator\" data-sentry-source-file=\"construction.jsx\" />\n    </Tabber>\n  </>;\n};\nconst ReverseForwardIcon = styled(ForwardIcon)`\n  transform: rotate(180deg);\n`;\nexport default Construction;"],"names":["__webpack_exports__","Z","_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","d","value","ref","react__WEBPACK_IMPORTED_MODULE_0__","useRef","useEffect","current","window","__NEXT_P","push","__webpack_require__","components","tabs","icons","children","onTabChange","forceScroll","orientation","iconsOnly","queryKey","clearOnChange","disableQuery","param","isMd","useMediaQuery","theme","breakpoints","down","noSsr","router","useRouter","activeTab","setActiveTab","useState","queryValue","query","activeTabIndex","findIndex","tab","selectedTab","replace","pathname","undefined","shallow","array","Array","isArray","jsxs","Box","sx","flexGrow","display","data-sentry-element","data-sentry-component","data-sentry-source-file","Tabs","centered","length","scrollButtons","allowScrollButtonsMobile","marginBottom","variant","onChange","e","selected","newQuery","forEach","key","_this","map","index","Tab","iconPosition","icon","img","src","concat","prefix","wrapped","label","minWidth","child","IconWithText","forwardRef","props","stat","title","rest","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Tooltip","Stack","alignItems","style","position","width","alt","Typography","component","displayName","TitleAndValue","boldTitle","titleStyle","valueStyle","direction","flexWrap","fontWeight","fontSize","StyledBadge","styled","Badge","CardAndBorder","cardProps","cardName","stars","cardIndex","name","rawName","amount","nextLevelReq","iconSrc","Fragment","BorderIcon","CardTooltip","CardIcon","isCardSet","effect","bonus","showInfo","realBonus","calcCardBonus","cleanUnderscore","mt","gap","_","justifyContent","StarIcon","numberWithCommas","_templateObject1","_templateObject2","_templateObject3","TalentTooltip","level","funcX","x1","x2","funcY","y1","y2","description","talentId","mainStat","growth","secondaryStat","PlayersList","players","characters","height","classIndex","MissingData","CardTitleAndValue","raised","cardSx","imgOnly","imgStyle","tooltipTitle","stackProps","contentPadding","Card","my","xs","md","mb","CardContent","p","color","gutterBottom","objectFit","Breakdown","breakdown","notation","notateNumber","Divider","bgcolor","CenteredStack","Forward","createSvgIcon","jsx_runtime","South","bonusTextSx","top","left","backgroundColor","indexSx","bottom","right","CogTooltip","Object","character","currentAmount","requiredAmount","cog","kFormatter","values","stats","div","SlotBackground","filled","FlagIcon","SlotIcon","construction_ConstructionBoard","view","board","showTooltip","setOutsideHighlight","outsideHighlight","gridTemplateColumns","gridTemplateRows","slot","flagPlaced","a","buildRate","buildPercent","b","exp","secondExp","c","flaggyRate","j","classExp","f","playerExp","outline","originalIndex","opacity","onMouseEnter","onMouseLeave","includes","split","isProd","construction_ConstructionMain","state","useContext","AppContext","setView","setShowTooltip","setStat","computeTime","setComputeTime","setCurrent","account","construction","optimized","setOptimized","moves","setMoves","list","handleCopy","data","navigator","clipboard","writeText","err","console","error","ToggleButtonGroup","exclusive","ToggleButton","textAlign","followCursor","Link","target","underline","href","rel","InfoIcon","Button","textTransform","onClick","cogstruction","cogData","startIcon","FileCopyIcon","empties","totalBuildRate","SouthIcon","totalPlayerExpRate","totalExpRate","totalFlaggyRate","maxWidth","FormControlLabel","control","Checkbox","checked","TextField","type","inputProps","min","FormControl","fullWidth","size","Select","labelId","id","MenuItem","base","structuredClone","baseBoard","opt","optimizeArrayWithSwaps","ConstructionBoard","move","Section","main","max","construction_CogStatCalculator","highestDK","cogType","setCogType","useMemo","getCharacterByHighestSkillLevel","highestConstruction","skillsInfo","mainConstructionValue","Math","pow","constructionMin","constructionMax","FormLabel","RadioGroup","row","aria-labelledby","event","Radio","floor","round","log10","ForwardIcon","world_3_construction","NextSeo","Tabber","ConstructionMain","CogStatCalculator"],"sourceRoot":""}