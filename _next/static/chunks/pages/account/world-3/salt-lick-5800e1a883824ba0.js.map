{"version":3,"file":"static/chunks/pages/account/world-3/salt-lick-5800e1a883824ba0.js","mappings":"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","sources":["webpack://_N_E/?85bc","webpack://_N_E/./pages/account/world-3/salt-lick.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/world-3/salt-lick\",\n      function () {\n        return require(\"private-next-pages/account/world-3/salt-lick.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/world-3/salt-lick\"])\n      });\n    }\n  ","import React, { useContext } from 'react';\nimport { AppContext } from 'components/common/context/AppProvider';\nimport { cleanUnderscore, kFormatter, prefix, round } from 'utility/helpers';\nimport { Card, CardContent, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { NextSeo } from 'next-seo';\nconst SaltLick = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const {\n    saltLick = []\n  } = state?.account || {};\n  const calcBonusCost = bonus => {\n    return Math.floor(bonus?.baseCost * Math.pow(bonus?.increment, bonus?.level ?? 0));\n  };\n  const calcCostToMax = bonus => {\n    let costToMax = 0;\n    for (let i = bonus?.level; i < bonus?.maxLevel; i++) {\n      costToMax += calcBonusCost({\n        ...bonus,\n        level: i\n      });\n    }\n    return costToMax ?? 0;\n  };\n  const calcBonus = bonus => {\n    return round(bonus.baseBonus * (bonus.level ?? 0));\n  };\n  return <>\n    <NextSeo title=\"Salt Lick | Idleon Toolbox\" description=\"Keep track of your salt lick levels and upgrades\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"salt-lick.jsx\" />\n    <Stack gap={3} data-sentry-element=\"Stack\" data-sentry-source-file=\"salt-lick.jsx\">\n      {saltLick?.map((bonus, index) => {\n        const {\n          desc,\n          name,\n          level,\n          maxLevel,\n          rawName,\n          totalAmount\n        } = bonus;\n        const calculatedBonusCost = calcBonusCost(bonus);\n        const costToMax = calcCostToMax(bonus);\n        const calculatedBonus = calcBonus(bonus);\n        return <Card key={name + ' ' + index} sx={{\n          width: {\n            xs: '100%',\n            md: 630\n          },\n          outline: level >= maxLevel ? '1px solid' : '',\n          outlineColor: theme => level >= maxLevel ? theme.palette.success.light : ''\n        }}>\n          <CardContent>\n            <Stack sx={{\n              flexDirection: {\n                xs: 'column',\n                md: 'row'\n              }\n            }} justifyContent={'space-between'} alignItems={'center'} flexWrap={'wrap'}>\n              <Stack gap={1} sx={{\n                width: {\n                  md: 350\n                }\n              }}>\n                <Typography>{cleanUnderscore(desc.replace('{', calculatedBonus))}</Typography>\n                <Typography>Lv. {level}/{maxLevel}</Typography>\n              </Stack>\n              <Stack justifyContent={'center'} alignItems={'center'}>\n                <ItemIcon src={`${prefix}data/${rawName}.png`} alt=\"\" />\n                {costToMax > 0 ? <Typography>{kFormatter(totalAmount, 2)} / {kFormatter(calculatedBonusCost, 2)}</Typography> : <Typography sx={{\n                  alignSelf: 'center',\n                  color: 'success.main'\n                }}>Maxed</Typography>}\n              </Stack>\n              {costToMax > 0 ? <Stack justifyContent={'center'} alignItems={'center'}>\n                <ItemIcon src={`${prefix}data/${rawName}.png`} alt=\"\" />\n                <Typography>{kFormatter(costToMax, 2)}</Typography>\n              </Stack> : null}\n            </Stack>\n          </CardContent>\n        </Card>;\n      })}\n    </Stack>\n  </>;\n};\nconst ItemIcon = styled.img`\n  width: 30px;\n`;\nexport default SaltLick;"],"names":["window","__NEXT_P","push","__webpack_require__","ItemIcon","styled","img","_templateObject","__webpack_exports__","state","useContext","AppContext","saltLick","account","calcBonusCost","bonus","Math","floor","baseCost","pow","increment","level","calcCostToMax","costToMax","i","maxLevel","calcBonus","round","baseBonus","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","Fragment","jsx","NextSeo","title","description","data-sentry-element","data-sentry-source-file","Stack","gap","map","index","desc","name","rawName","totalAmount","calculatedBonusCost","calculatedBonus","Card","sx","width","xs","md","outline","outlineColor","theme","palette","success","light","CardContent","flexDirection","justifyContent","alignItems","flexWrap","Typography","cleanUnderscore","replace","src","prefix","concat","alt","kFormatter","alignSelf","color"],"sourceRoot":""}