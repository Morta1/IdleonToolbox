{"version":3,"file":"static/chunks/pages/account/world-3/construction-041ed0338562536a.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/Info.js","webpack://_N_E/./node_modules/@mui/material/MenuItem/menuItemClasses.js","webpack://_N_E/./node_modules/@mui/material/MenuItem/MenuItem.js","webpack://_N_E/./node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js","webpack://_N_E/?bcaf","webpack://_N_E/./components/common/Tabber.jsx","webpack://_N_E/./components/common/styles.jsx","webpack://_N_E/./node_modules/@mui/icons-material/esm/Forward.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/South.js","webpack://_N_E/./components/account/Worlds/World3/construction/ConstructionBoard.jsx","webpack://_N_E/./components/account/Worlds/World3/construction/ConstructionMain.jsx","webpack://_N_E/./components/account/Worlds/World3/construction/CogStatCalculator.jsx","webpack://_N_E/./pages/account/world-3/construction.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { dividerClasses } from \"../Divider/index.js\";\nimport { listItemIconClasses } from \"../ListItemIcon/index.js\";\nimport { listItemTextClasses } from \"../ListItemText/index.js\";\nimport menuItemClasses, { getMenuItemUtilityClass } from \"./menuItemClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return {\n    ...classes,\n    ...composedClasses\n  };\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap',\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.divider,\n    style: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      backgroundClip: 'padding-box'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dense,\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.dense,\n    style: {\n      minHeight: 32,\n      // https://m2.material.io/components/menus#specs > Dense\n      paddingTop: 4,\n      paddingBottom: 4,\n      ...theme.typography.body2,\n      [`& .${listItemIconClasses.root} svg`]: {\n        fontSize: '1.25rem'\n      }\n    }\n  }]\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp,\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = {\n    ...props,\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  };\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, {\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className),\n      ...other,\n      ownerState: ownerState,\n      classes: classes\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/world-3/construction\",\n      function () {\n        return require(\"private-next-pages/account/world-3/construction.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/world-3/construction\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, useMediaQuery } from '@mui/material';\nimport { prefix } from '@utility/helpers';\nimport Box from '@mui/material/Box';\nimport { useRouter } from 'next/router';\nconst Tabber = ({\n  tabs,\n  components,\n  icons,\n  children,\n  onTabChange,\n  forceScroll,\n  orientation = 'horizontal',\n  iconsOnly,\n  queryKey = 't',\n  clearOnChange = [],\n  disableQuery = false\n}) => {\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const router = useRouter();\n\n  // State for managing active tab if `disableQuery` is enabled\n  const [activeTab, setActiveTab] = useState(0);\n  const queryValue = router.query[queryKey];\n  const activeTabIndex = tabs.findIndex(tab => tab === queryValue);\n  const selectedTab = disableQuery ? activeTab : activeTabIndex >= 0 ? activeTabIndex : 0;\n  useEffect(() => {\n    if (!disableQuery) {\n      // Set the default query parameter if missing\n      if (!queryValue) {\n        router.replace({\n          pathname: router.pathname,\n          query: {\n            ...router.query,\n            [queryKey]: tabs[selectedTab]\n          }\n        }, undefined, {\n          shallow: true\n        });\n      }\n    }\n  }, [queryValue, queryKey, tabs, selectedTab, router, disableQuery]);\n  const handleOnClick = (e, selected) => {\n    if (disableQuery) {\n      setActiveTab(selected);\n    } else {\n      const newQuery = {\n        ...router.query,\n        [queryKey]: tabs[selected]\n      };\n      // Remove specified query parameters\n      clearOnChange.forEach(key => delete newQuery[key]);\n      router.push({\n        pathname: router.pathname,\n        query: newQuery\n      }, undefined, {\n        shallow: true\n      });\n    }\n    onTabChange && onTabChange(selected);\n  };\n  const array = Array.isArray(children) ? children : [children];\n  return <Box sx={orientation === 'vertical' ? {\n    flexGrow: 1,\n    display: 'flex'\n  } : {}} data-sentry-element=\"Box\" data-sentry-component=\"Tabber\" data-sentry-source-file=\"Tabber.jsx\">\n    <Tabs centered={!isMd || isMd && tabs.length < 4} scrollButtons allowScrollButtonsMobile sx={{\n      marginBottom: 3\n    }} variant={isMd && tabs.length >= 4 || forceScroll ? 'scrollable' : 'standard'} value={selectedTab} onChange={handleOnClick} data-sentry-element=\"Tabs\" data-sentry-source-file=\"Tabber.jsx\">\n      {(components ?? tabs)?.map((tab, index) => {\n        return <Tab iconPosition=\"start\" icon={icons?.[index] ? <img src={`${prefix}${icons?.[index]}.png`} /> : null} wrapped label={iconsOnly ? '' : tab} sx={{\n          minWidth: 62\n        }} key={`${tab?.[index]}-${index}`} />;\n      })}\n    </Tabs>\n    {onTabChange ? children : array?.map((child, index) => {\n      return index === selectedTab ? child : null;\n    })}\n  </Box>;\n};\nexport default Tabber;","import React, { forwardRef } from 'react';\nimport { cleanUnderscore, growth, notateNumber, numberWithCommas, prefix } from 'utility/helpers';\nimport { Badge, Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport Tooltip from '../Tooltip';\nimport { calcCardBonus } from 'parsers/cards';\nexport const IconWithText = forwardRef((props, ref) => {\n  const {\n    stat,\n    icon,\n    img,\n    title = '',\n    ...rest\n  } = props;\n  return <Tooltip title={title}>\n    <Stack alignItems={'center'} {...rest} ref={ref} style={{\n      position: 'relative',\n      width: 'fit-content'\n    }}>\n      <img {...img} src={`${prefix}data/${icon}.png`} alt=\"\" />\n      <Typography variant={'body1'} component={'span'}>{stat}</Typography>\n    </Stack>\n  </Tooltip>;\n});\nIconWithText.displayName = 'IconWithText';\nexport const TitleAndValue = ({\n  title,\n  value,\n  boldTitle,\n  titleStyle = {},\n  valueStyle = {}\n}) => {\n  return <Stack direction={'row'} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"TitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    {title ? <Typography sx={titleStyle} fontWeight={boldTitle ? 'bold' : 500} component={'span'}>{title}:&nbsp;</Typography> : null}\n    <Typography fontSize={15} component={'span'} sx={valueStyle} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{value}</Typography>\n  </Stack>;\n};\nexport const StyledBadge = styled(Badge)`\n  & .MuiBadge-badge {\n    background-color: #d5d5dc;\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\nexport const CardAndBorder = cardProps => {\n  const {\n    cardName,\n    stars,\n    cardIndex,\n    name,\n    variant,\n    rawName,\n    amount,\n    nextLevelReq\n  } = cardProps;\n  const iconSrc = variant === 'cardSet' ? `${prefix}data/${rawName}.png` : `${prefix}data/2Cards${cardIndex}.png`;\n  const realCardName = variant === 'cardSet' ? name : cardName;\n  return <>\n    {stars > 0 ? <BorderIcon src={`${prefix}data/CardEquipBorder${stars}.png`} alt=\"\" /> : null}\n    <Tooltip title={<CardTooltip {...{\n      ...cardProps,\n      cardName: realCardName,\n      nextLevelReq,\n      amount\n    }} />} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"styles.jsx\">\n      <CardIcon isCardSet={variant === 'cardSet'} amount={amount} src={iconSrc} alt=\"\" data-sentry-element=\"CardIcon\" data-sentry-source-file=\"styles.jsx\" />\n    </Tooltip>\n  </>;\n};\nconst CardTooltip = ({\n  displayName,\n  effect,\n  bonus,\n  stars,\n  showInfo,\n  nextLevelReq,\n  amount\n}) => {\n  let realBonus = bonus;\n  if (showInfo) {\n    realBonus = calcCardBonus({\n      bonus,\n      stars\n    });\n  }\n  return <>\n    <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(displayName)}</Typography>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(effect.replace('{', realBonus))}</Typography>\n    {showInfo ? <Stack mt={1} direction={'row'} gap={1} flexWrap={'wrap'}>\n      {[1, 2, 3, 4, 5, 6].map((_, index) => {\n        return <Stack key={`${displayName}-${index}`} alignItems={'center'} justifyContent={'space-between'}>\n          {index === 0 ? <Typography>Base</Typography> : <StarIcon src={`${prefix}etc/Star${index}.png`} alt=\"\" />}\n          <Typography>{bonus * (index + 1)}</Typography>\n        </Stack>;\n      })}\n    </Stack> : null}\n    {amount >= nextLevelReq ? <Stack>You've collected {numberWithCommas(amount)} cards</Stack> : nextLevelReq > 0 ? <Stack>\n        Progress: {numberWithCommas(amount)} / {numberWithCommas(nextLevelReq)}\n      </Stack> : null}\n  </>;\n};\nconst StarIcon = styled.img`\n  height: 20px;\n  object-fit: contain;\n`;\nconst CardIcon = styled.img`\n  width: 56px;\n  height: 72px;\n  object-fit: contain;\n  opacity: ${({\n  amount,\n  isCardSet\n}) => !amount && !isCardSet ? .5 : 1};\n`;\nconst BorderIcon = styled.img`\n  position: absolute;\n  left: 50%;\n  top: -3px;\n  pointer-events: none;\n  transform: translateX(-50%);\n`;\nexport const TalentTooltip = ({\n  level,\n  funcX,\n  x1,\n  x2,\n  funcY,\n  y1,\n  y2,\n  description,\n  name,\n  talentId\n}) => {\n  const mainStat = level > 0 ? growth(funcX, level, x1, x2) : 0;\n  const secondaryStat = level > 0 ? growth(funcY, level, y1, y2) : 0;\n  return <>\n    <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n      <img src={`${prefix}data/UISkillIcon${talentId}.png`} alt=\"\" />\n      <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(name)}</Typography>\n    </Stack>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(description).replace('{', mainStat).replace('}', secondaryStat)}</Typography>\n  </>;\n};\nexport const PlayersList = ({\n  players,\n  characters\n}) => {\n  return <Stack gap={1} direction={'row'} data-sentry-element=\"Stack\" data-sentry-component=\"PlayersList\" data-sentry-source-file=\"styles.jsx\">\n    {players.map(({\n      index\n    }) => <Tooltip key={name + '-head-' + index} title={characters?.[index]?.name}>\n      <img style={{\n        width: 24,\n        height: 24\n      }} src={`${prefix}data/ClassIcons${characters?.[index]?.classIndex}.png`} alt=\"\" />\n    </Tooltip>)}\n  </Stack>;\n};\nexport const MissingData = ({\n  name\n}) => {\n  return <Typography variant={'h3'} data-sentry-element=\"Typography\" data-sentry-component=\"MissingData\" data-sentry-source-file=\"styles.jsx\">Your account is missing data for {name}</Typography>;\n};\nexport const CardTitleAndValue = ({\n  variant,\n  raised,\n  cardSx,\n  imgOnly,\n  imgStyle,\n  title,\n  value,\n  children,\n  icon,\n  tooltipTitle,\n  stackProps,\n  contentPadding\n}) => {\n  return <Tooltip title={tooltipTitle || ''} data-sentry-element=\"Tooltip\" data-sentry-component=\"CardTitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    <Card variant={variant} raised={raised} sx={{\n      my: {\n        xs: 0,\n        md: 3\n      },\n      mb: {\n        xs: 2\n      },\n      width: 'fit-content',\n      ...cardSx\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"styles.jsx\">\n      <CardContent sx={{\n        '&:last-child': contentPadding ? {\n          p: contentPadding\n        } : {}\n      }} data-sentry-element=\"CardContent\" data-sentry-source-file=\"styles.jsx\">\n        <Stack sx={{\n          display: stackProps ? 'flex' : 'block',\n          ...(stackProps || {})\n        }} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n          {title ? <Typography sx={{\n            fontSize: 14\n          }} color=\"text.secondary\" gutterBottom component={'span'}>{title}</Typography> : null}\n          {value || imgOnly ? icon ? <Stack direction={'row'} gap={2} alignItems={'center'}>\n            <img style={{\n              objectFit: 'contain',\n              ...imgStyle\n            }} src={`${prefix}${icon}`} alt=\"\" />\n            {value ? <Typography component={'div'}>{value}</Typography> : null}\n          </Stack> : <Typography component={'div'}>{value}</Typography> : children}\n        </Stack>\n      </CardContent>\n    </Card>\n  </Tooltip>;\n};\nexport const Breakdown = ({\n  breakdown,\n  titleStyle = {},\n  notation = 'Big'\n}) => {\n  return <>\n    {breakdown?.map(({\n      name,\n      value,\n      title\n    }, index) => title ? <Typography sx={{\n      fontWeight: 500\n    }} key={`${name}-${index}`}>{title}</Typography> : !name ? <Divider sx={{\n      my: 1,\n      bgcolor: 'black'\n    }} key={`${name}-${index}`} /> : <TitleAndValue key={`${name}-${index}`} titleStyle={{\n      width: 120,\n      ...titleStyle\n    }} title={name} value={!isNaN(value) ? notateNumber(value, notation) : value} />)}\n  </>;\n};\nexport const CenteredStack = ({\n  direction = 'row',\n  children\n}) => {\n  return <Stack gap={1} direction={direction} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CenteredStack\" data-sentry-source-file=\"styles.jsx\">\n    {children}\n  </Stack>;\n};","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8V4l8 8-8 8v-4H4V8z\"\n}), 'Forward');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m19 15-1.41-1.41L13 18.17V2h-2v16.17l-4.59-4.59L5 15l7 7z\"\n}), 'South');","import { Box, Stack, Typography } from '@mui/material';\nimport Tooltip from '../../../../Tooltip';\nimport { cleanUnderscore, isProd, kFormatter, notateNumber, prefix } from '../../../../../utility/helpers';\nimport React from 'react';\nimport styled from '@emotion/styled';\nconst bonusTextSx = {\n  fontSize: 12,\n  fontWeight: 400,\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  backgroundColor: 'black'\n};\nconst indexSx = {\n  fontSize: 12,\n  fontWeight: 400,\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  backgroundColor: 'blue'\n};\nconst ConstructionBoard = ({\n  view,\n  board,\n  showTooltip,\n  setOutsideHighlight,\n  outsideHighlight\n}) => {\n  return <Box mt={3} sx={{\n    display: 'grid',\n    gap: '8px',\n    gridTemplateColumns: {\n      xs: 'repeat(8, minmax(45px, 1fr))',\n      md: 'repeat(12, minmax(45px, 1fr))'\n    },\n    gridTemplateRows: {\n      xs: 'repeat(8, minmax(45px, 1fr))',\n      md: 'repeat(8, minmax(45px, 1fr))'\n    }\n  }} data-sentry-element=\"Box\" data-sentry-component=\"ConstructionBoard\" data-sentry-source-file=\"ConstructionBoard.jsx\">\n    {board?.map((slot, index) => {\n      const {\n        currentAmount,\n        requiredAmount,\n        flagPlaced,\n        cog\n      } = slot;\n      const {\n        a: buildRate,\n        e: buildPercent,\n        b: exp,\n        d: secondExp,\n        c: flaggyRate,\n        j: classExp,\n        f: playerExp\n      } = cog?.stats;\n      const filled = currentAmount / requiredAmount * 100;\n      const rest = 100 - filled;\n      return <Box key={index} sx={{\n        outline: cog?.originalIndex === outsideHighlight ? '1px solid red' : '',\n        opacity: !setOutsideHighlight && cog?.originalIndex === index ? .5 : 1\n      }} onMouseEnter={() => typeof setOutsideHighlight === 'function' && setOutsideHighlight(cog?.originalIndex)} onMouseLeave={() => typeof setOutsideHighlight === 'function' && setOutsideHighlight(null)}>\n          <Tooltip title={showTooltip ? <CogTooltip {...slot} index={index} character={cog?.name?.includes('Player') ? cog?.name?.split('Player_')[1] : ''} /> : ''}>\n            <SlotBackground filled={filled} rest={rest}>\n              {flagPlaced ? <FlagIcon src={`${prefix}data/CogFLflag.png`} alt=\"\" /> : null}\n              {cog?.name && !flagPlaced ? <SlotIcon src={`${prefix}data/${cog?.name?.includes('Player') ? 'headBIG' : cog?.name}.png`} alt=\"\" /> : null}\n              {!isProd ? <Typography sx={indexSx}>{index}</Typography> : null}\n              {view === 'build' && !flagPlaced && buildRate?.value ? <Typography sx={bonusTextSx}>{notateNumber(buildRate?.value, 'Big') || null}</Typography> : null}\n              {view === 'buildPercent' && !flagPlaced && buildPercent?.value ? <Typography sx={bonusTextSx}>{notateNumber(buildPercent?.value, 'Big') || null}</Typography> : null}\n              {view === 'exp' && !flagPlaced ? <Typography sx={bonusTextSx}>{exp?.value && notateNumber(exp?.value, 'Big') || secondExp?.value && notateNumber(secondExp?.value, 'Big') || null}</Typography> : null}\n              {view === 'playerExp' && !flagPlaced ? <Typography sx={bonusTextSx}>{playerExp?.value && notateNumber(playerExp?.value, 'Big') || null}</Typography> : null}\n              {view === 'flaggy' && !flagPlaced && flaggyRate?.value ? <Typography sx={bonusTextSx}>{notateNumber(flaggyRate?.value, 'Big') || null}</Typography> : null}\n              {view === 'classExp' && !flagPlaced && classExp?.value ? <Typography sx={bonusTextSx}>{notateNumber(classExp?.value, 'Big') || null}</Typography> : null}\n            </SlotBackground>\n          </Tooltip>\n        </Box>;\n    })}\n  </Box>;\n};\nconst CogTooltip = ({\n  character,\n  index,\n  currentAmount,\n  requiredAmount,\n  cog\n}) => {\n  return <>\n      {character ? <Typography sx={{\n      fontWeight: 'bold'\n    }}>{character}</Typography> : null}\n      {currentAmount < requiredAmount ? <Typography>\n          {kFormatter(currentAmount, 2)} / {kFormatter(requiredAmount, 2)} ({kFormatter(currentAmount / requiredAmount * 100, 2)}%)\n        </Typography> : null}\n      {Object.values(cog?.stats)?.map(({\n      name,\n      value\n    }, index) => name ? <div key={`${name}-${index}`}>\n            {notateNumber(value, 'Big')}\n            {cleanUnderscore(name)}\n          </div> : null)}\n      index: {index}\n    </>;\n};\nconst SlotBackground = styled(Stack)`\n  position: relative;\n  background-image: url(${() => `${prefix}data/CogSq0.png`});\n  background-repeat: no-repeat;\n  background-position: center;\n\n  width: 46px;\n  height: 46px;\n\n  &:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    z-index: -1;\n    ${({\n  filled\n}) => filled === 0 || filled === 100 ? '' : `background: linear-gradient(to top, #9de060 ${filled}%, transparent 0%);`}\n\n    width: 48px;\n    height: 47px;\n    top: 1px;\n    left: -1px;\n  }\n`;\nconst FlagIcon = styled.img`\n  width: 47px;\n  height: 47px;\n`;\nconst SlotIcon = styled.img`\n  width: 47px;\n  height: 47px;\n`;\nexport default ConstructionBoard;","import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../../../../common/context/AppProvider';\nimport { optimizeArrayWithSwaps } from '../../../../../parsers/construction';\nimport { Checkbox, FormControl, FormControlLabel, Select, Stack, TextField, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport Tooltip from '../../../../Tooltip';\nimport Link from '@mui/material/Link';\nimport InfoIcon from '@mui/icons-material/Info';\nimport Button from '@mui/material/Button';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport { CardTitleAndValue } from '../../../../common/styles';\nimport { notateNumber } from '../../../../../utility/helpers';\nimport SouthIcon from '@mui/icons-material/South';\nimport MenuItem from '@mui/material/MenuItem';\nimport ConstructionBoard from './ConstructionBoard';\nconst ConstructionMain = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [view, setView] = useState('build');\n  const [showTooltip, setShowTooltip] = useState(true);\n  const [stat, setStat] = useState('totalBuildRate');\n  const [computeTime, setComputeTime] = useState(2500);\n  const [current, setCurrent] = useState(state?.account?.construction);\n  const [optimized, setOptimized] = useState(null);\n  const [outsideHighlight, setOutsideHighlight] = useState(null);\n  const [moves, setMoves] = useState({\n    list: [],\n    current: 0\n  });\n  const handleCopy = async data => {\n    try {\n      await navigator.clipboard.writeText(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    if (stat === 'totalBuildRate') {\n      setView('build');\n    } else if (stat === 'totalPlayerExpRate') {\n      setView('exp');\n    }\n  }, [stat]);\n\n  // function applyMove(board, from, to) {\n  //   const newBoard = [...board];\n  //   const tempCog = newBoard[from].cog;\n  //   newBoard[from].cog = newBoard[to].cog;\n  //   newBoard[to].cog = tempCog;\n  //   return newBoard;\n  // }\n\n  // const handleNextMove = () => {\n  //   if (moves.current >= moves.list.length - 1) return null;\n  //   setMoves({ ...moves, current: moves.current + 1 });\n  //   const { from, to } = moves.list[moves.current];\n  //   const temp = applyMove(current?.board, from, to);\n  //   setCurrent({ ...current, board: temp });\n  // }\n  //\n  // const handlePrevMove = () => {\n  //   if (moves.current <= 0) return null;\n  //   setMoves({ ...moves, current: moves.current - 1 });\n  //   const { from, to } = moves.list?.[moves.current - 1];\n  //   const temp = applyMove(current?.board, to, from);\n  //   setCurrent({ ...current, board: temp });\n  // }\n\n  const handleOptimize = () => {\n    setCurrent(state?.account?.construction);\n    const base = structuredClone(state?.account?.construction?.baseBoard);\n    const opt = optimizeArrayWithSwaps(base, stat, computeTime, state?.characters);\n    setMoves({\n      list: opt?.moves,\n      current: 0\n    });\n    setOptimized(opt);\n  };\n  return <>\n      <Stack alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n        <ToggleButtonGroup value={view} exclusive onChange={(e, value) => value?.length ? setView(value) : null} data-sentry-element=\"ToggleButtonGroup\" data-sentry-source-file=\"ConstructionMain.jsx\">\n          <ToggleButton value=\"build\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Build</ToggleButton>\n          <ToggleButton value=\"buildPercent\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Build %</ToggleButton>\n          <ToggleButton value=\"exp\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Exp</ToggleButton>\n          <ToggleButton value=\"playerExp\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Player Exp boost</ToggleButton>\n          <ToggleButton value=\"flaggy\" data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"ConstructionMain.jsx\">Flaggy</ToggleButton>\n        </ToggleButtonGroup>\n        <Stack my={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n          <Stack my={1} gap={1} direction={'row'} alignItems={'center'} justifyContent={'center'} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Typography variant={'h6'} textAlign={'center'} data-sentry-element=\"Typography\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              Cogstruction{' '}\n            </Typography>\n            <Tooltip followCursor={false} title={<>\n                  You can export your data and use it in{' '}\n                  <Link target={'_blank'} underline={'always'} color={'info.dark'} href=\"https://github.com/automorphis/Cogstruction\" rel=\"noreferrer\">\n                    Cogstruction\n                  </Link>\n                </>} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <InfoIcon data-sentry-element=\"InfoIcon\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n            </Tooltip>\n          </Stack>\n          <Stack direction={'row'} gap={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Button variant={'contained'} color={'primary'} sx={{\n            textTransform: 'unset'\n          }} onClick={() => handleCopy(state?.account?.construction?.cogstruction?.cogData)} startIcon={<FileCopyIcon />} data-sentry-element=\"Button\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              Cogstruction Data\n            </Button>\n            <Button variant={'contained'} color={'primary'} sx={{\n            textTransform: 'unset'\n          }} onClick={() => handleCopy(state?.account?.construction?.cogstruction?.empties)} startIcon={<FileCopyIcon />} data-sentry-element=\"Button\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              Cogstruction Empties\n            </Button>\n          </Stack>\n        </Stack>\n        <Stack direction={'row'} my={2} gap={2} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n          <CardTitleAndValue title={'Total Build Rate'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"ConstructionMain.jsx\">{notateNumber(state?.account?.construction?.totalBuildRate)}/HR</Typography>\n              {optimized ? <SouthIcon /> : null}\n              {optimized ? <Typography sx={{\n              color: 'info.light'\n            }}>{notateNumber(optimized?.totalBuildRate)}/HR\n                  ({notateNumber(optimized?.totalBuildRate - state?.account?.construction?.totalBuildRate)})</Typography> : null}\n            </Stack>\n          </CardTitleAndValue>\n          <CardTitleAndValue title={'Total Player XP rate'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"ConstructionMain.jsx\">{notateNumber(state?.account?.construction?.totalPlayerExpRate)}/HR</Typography>\n              {optimized ? <SouthIcon /> : null}\n              {optimized ? <Typography sx={{\n              color: 'info.light'\n            }}>{notateNumber(optimized?.totalPlayerExpRate)}/HR\n                  ({notateNumber(optimized?.totalPlayerExpRate - state?.account?.construction?.totalPlayerExpRate)})</Typography> : null}\n            </Stack>\n          </CardTitleAndValue>\n          <CardTitleAndValue title={'Player XP Bonus'} value={`${notateNumber(state?.account?.construction?.totalExpRate)}%`} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n          <CardTitleAndValue title={'Flaggy Rate'} value={`${notateNumber(state?.account?.construction?.totalFlaggyRate)}/HR`} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n          <CardTitleAndValue title={'Hover'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack sx={{\n            maxWidth: 200\n          }} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <FormControlLabel control={<Checkbox checked={showTooltip} onChange={() => setShowTooltip(!showTooltip)} />} name={'showTooltip'} label=\"Show tooltip\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n            </Stack>\n          </CardTitleAndValue>\n          <CardTitleAndValue title={'Optimize'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"ConstructionMain.jsx\">\n            <Stack gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"ConstructionMain.jsx\">\n              <TextField onChange={({\n              target\n            }) => setComputeTime(target.value)} type={'number'} inputProps={{\n              min: 0\n            }} variant={'standard'} label={'Compute time (in ms)'} value={computeTime} data-sentry-element=\"TextField\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n              <FormControl fullWidth size={'small'} variant=\"standard\" data-sentry-element=\"FormControl\" data-sentry-source-file=\"ConstructionMain.jsx\">\n                {/*<InputLabel id=\"stat\">Stat</InputLabel>*/}\n                <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" value={stat} label=\"Age\" onChange={e => setStat(e.target.value)} data-sentry-element=\"Select\" data-sentry-source-file=\"ConstructionMain.jsx\">\n                  <MenuItem value={'totalBuildRate'} data-sentry-element=\"MenuItem\" data-sentry-source-file=\"ConstructionMain.jsx\">Build speed</MenuItem>\n                  <MenuItem value={'totalPlayerExpRate'} data-sentry-element=\"MenuItem\" data-sentry-source-file=\"ConstructionMain.jsx\">Player XP rate</MenuItem>\n                  {/*<MenuItem value={'totalCharacterExp'}>Total character XP</MenuItem>*/}\n                </Select>\n              </FormControl>\n              <Button variant={'contained'} onClick={handleOptimize} data-sentry-element=\"Button\" data-sentry-source-file=\"ConstructionMain.jsx\">Optimize</Button>\n\n            </Stack>\n          </CardTitleAndValue>\n        </Stack>\n        <ConstructionBoard view={view} showTooltip={showTooltip} setOutsideHighlight={setOutsideHighlight} move={moves.list[moves.current]} board={current?.board} data-sentry-element=\"ConstructionBoard\" data-sentry-source-file=\"ConstructionMain.jsx\" />\n        {/*{optimized ? <Stack direction={'row'} alignItems={'center'} justify-content={'space-between'}>*/}\n        {/*  <IconButton onClick={handlePrevMove}>*/}\n        {/*    <ReverseForwardIcon/>*/}\n        {/*  </IconButton>*/}\n        {/*  {moves.current + 1} / {moves.list.length}*/}\n        {/*  <IconButton onClick={handleNextMove}>*/}\n        {/*    <ForwardIcon/>*/}\n        {/*  </IconButton>*/}\n        {/*</Stack> : null}*/}\n        {optimized ? <Typography sx={{\n        mt: 3\n      }} variant={'caption'}>* Hovering over a cog in the upper board will reveal\n          where the same cog is placed on the lower board.</Typography> : null}\n        {optimized ? <ConstructionBoard view={view} outsideHighlight={outsideHighlight} showTooltip={showTooltip} board={optimized?.board} /> : null}\n\n      </Stack>\n    </>;\n};\nexport default ConstructionMain;","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, Stack, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { getCharacterByHighestSkillLevel } from '../../../../../parsers/misc';\nimport { AppContext } from '../../../../common/context/AppProvider';\nimport { CardTitleAndValue } from '../../../../common/styles';\nimport { notateNumber } from '../../../../../utility/helpers';\nconst CogStatCalculator = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [cogType, setCogType] = useState(5);\n  const highestDK = useMemo(() => getCharacterByHighestSkillLevel(state?.characters, '', 'construction'), [state?.characters]);\n  const highestConstruction = highestDK?.skillsInfo?.construction?.level;\n  const mainConstructionValue = Math.pow(highestConstruction / 3 + 0.7, 1.3 + 0.05 * cogType) / 4 + Math.pow(3, cogType - 2);\n  const constructionMin = mainConstructionValue * .4;\n  const constructionMax = mainConstructionValue * 3;\n  const handleChange = event => {\n    setCogType(event.target.value);\n  };\n  return <Stack alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CogStatCalculator\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n      <CardTitleAndValue title={'Highest Cons level'} value={highestDK?.skillsInfo?.construction?.level || 0} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n      <FormControl data-sentry-element=\"FormControl\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <FormLabel id=\"demo-row-radio-buttons-group-label\" data-sentry-element=\"FormLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\">Cog type</FormLabel>\n        <RadioGroup row aria-labelledby=\"demo-row-radio-buttons-group-label\" name=\"row-radio-buttons-group\" value={cogType} onChange={handleChange} data-sentry-element=\"RadioGroup\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n          <FormControlLabel value={2} control={<Radio />} label=\"Nooby\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n          <FormControlLabel value={3} control={<Radio />} label=\"Decent\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n          <FormControlLabel value={4} control={<Radio />} label=\"Superb\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n          <FormControlLabel value={5} control={<Radio />} label=\"Ultimate\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        </RadioGroup>\n      </FormControl>\n\n      <Stack direction={'row'} gap={3} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <Section title={'Construction Value'} main={mainConstructionValue} min={constructionMin} max={constructionMax} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        <Section title={'Build rate'} min={Math.floor(constructionMin)} max={Math.floor(constructionMax)} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        <Section title={'Flag rate'} min={Math.round(Math.pow(constructionMin, .8))} max={Math.round(Math.pow(constructionMax, .8))} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n        <Section title={'Exp'} min={Math.max(Math.floor(Math.pow(constructionMin, 0.4) + Math.log10(constructionMin) * 10 - 5), 2)} max={Math.max(Math.floor(Math.pow(constructionMax, 0.4) + Math.log10(constructionMax) * 10 - 5), 2)} data-sentry-element=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\" />\n      </Stack>\n    </Stack>;\n};\nconst Section = ({\n  title,\n  main,\n  min,\n  max\n}) => {\n  return <CardTitleAndValue title={title} data-sentry-element=\"CardTitleAndValue\" data-sentry-component=\"Section\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n    <Stack data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n      {main ? <Stack alignItems={'center'} direction={'row'} gap={1}>\n        <Typography sx={{\n          fontSize: 14\n        }} color=\"text.secondary\">main</Typography>\n        <Typography>{notateNumber(main, 'MultiplierInfo')}</Typography>\n      </Stack> : null}\n      <Stack alignItems={'center'} direction={'row'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <Typography sx={{\n          fontSize: 14\n        }} color=\"text.secondary\" data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">min</Typography>\n        <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">{notateNumber(min, 'MultiplierInfo')}</Typography>\n      </Stack>\n      <Stack alignItems={'center'} direction={'row'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"CogStatCalculator.jsx\">\n        <Typography sx={{\n          fontSize: 14\n        }} color=\"text.secondary\" data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">max</Typography>\n        <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"CogStatCalculator.jsx\">{notateNumber(max, 'MultiplierInfo')}</Typography>\n      </Stack>\n    </Stack>\n  </CardTitleAndValue>;\n};\nexport default CogStatCalculator;","import React from 'react';\nimport ForwardIcon from '@mui/icons-material/Forward';\nimport styled from '@emotion/styled';\nimport ConstructionMain from '../../../components/account/Worlds/World3/construction/ConstructionMain';\nimport Tabber from '../../../components/common/Tabber';\nimport { NextSeo } from 'next-seo';\nimport { Typography } from '@mui/material';\nimport CogStatCalculator from '../../../components/account/Worlds/World3/construction/CogStatCalculator';\nconst Construction = () => {\n  return <>\n    <NextSeo title=\"Construction | Idleon Toolbox\" description=\"Keep track of your construction board, cogs information and more\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"construction.jsx\" />\n    <Tabber tabs={['Main', 'Cog stat calculator']} data-sentry-element=\"Tabber\" data-sentry-source-file=\"construction.jsx\">\n      <ConstructionMain data-sentry-element=\"ConstructionMain\" data-sentry-source-file=\"construction.jsx\" />\n      <CogStatCalculator data-sentry-element=\"CogStatCalculator\" data-sentry-source-file=\"construction.jsx\" />\n    </Tabber>\n  </>;\n};\nconst ReverseForwardIcon = styled(ForwardIcon)`\n  transform: rotate(180deg);\n`;\nexport default Construction;"],"names":["__webpack_exports__","Z","_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","d","getMenuItemUtilityClass","slot","generateUtilityClass","ZP","menuItemClasses","generateUtilityClasses","useUtilityClasses","ownerState","disabled","dense","divider","disableGutters","selected","classes","composedClasses","composeClasses","root","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","gutters","memoTheme","theme","typography","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","backgroundColor","vars","palette","action","hover","MenuItem_menuItemClasses","primary","mainChannel","selectedOpacity","colorManipulator","Fq","main","focusVisible","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","paddingLeft","listItemIconClasses","minWidth","variants","style","paddingRight","borderBottom","backgroundClip","breakpoints","up","body2","fontSize","MenuItem","react","forwardRef","inProps","ref","tabIndex","DefaultPropsProvider","i","autoFocus","component","focusVisibleClassName","role","tabIndexProp","className","other","context","useContext","ListContext","childContext","useMemo","menuItemRef","useRef","useEnhancedEffect","current","handleRef","useForkRef","undefined","jsx_runtime","Provider","value","children","clsx","MenuItem_MenuItem","react__WEBPACK_IMPORTED_MODULE_0__","useEffect","window","__NEXT_P","push","__webpack_require__","components","tabs","icons","onTabChange","forceScroll","orientation","iconsOnly","queryKey","clearOnChange","disableQuery","param","isMd","useMediaQuery","down","noSsr","router","useRouter","activeTab","setActiveTab","useState","queryValue","query","activeTabIndex","findIndex","tab","selectedTab","replace","pathname","shallow","array","Array","isArray","jsxs","Box","sx","flexGrow","data-sentry-element","data-sentry-component","data-sentry-source-file","Tabs","centered","length","scrollButtons","allowScrollButtonsMobile","variant","onChange","e","newQuery","forEach","key","_this","map","index","Tab","iconPosition","icon","img","src","concat","prefix","wrapped","label","child","IconWithText","stat","title","rest","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Tooltip","Stack","width","alt","Typography","displayName","TitleAndValue","boldTitle","titleStyle","valueStyle","direction","flexWrap","fontWeight","StyledBadge","Badge","CardAndBorder","cardProps","cardName","stars","cardIndex","rawName","amount","nextLevelReq","iconSrc","Fragment","BorderIcon","CardTooltip","CardIcon","isCardSet","effect","bonus","showInfo","realBonus","calcCardBonus","cleanUnderscore","mt","gap","_","StarIcon","numberWithCommas","_templateObject1","_templateObject2","_templateObject3","TalentTooltip","level","funcX","x1","x2","funcY","y1","y2","description","talentId","mainStat","growth","secondaryStat","PlayersList","players","characters","height","classIndex","MissingData","CardTitleAndValue","raised","cardSx","imgOnly","imgStyle","tooltipTitle","stackProps","contentPadding","Card","my","xs","md","mb","CardContent","p","color","gutterBottom","objectFit","Breakdown","breakdown","notation","notateNumber","Divider","bgcolor","CenteredStack","Forward","createSvgIcon","South","bonusTextSx","top","left","indexSx","bottom","right","CogTooltip","Object","character","currentAmount","requiredAmount","cog","kFormatter","values","stats","div","SlotBackground","filled","FlagIcon","SlotIcon","construction_ConstructionBoard","view","board","showTooltip","setOutsideHighlight","outsideHighlight","gridTemplateColumns","gridTemplateRows","flagPlaced","a","buildRate","buildPercent","b","exp","secondExp","c","flaggyRate","j","classExp","f","playerExp","outline","originalIndex","onMouseEnter","onMouseLeave","includes","split","isProd","construction_ConstructionMain","state","AppContext","setView","setShowTooltip","setStat","computeTime","setComputeTime","setCurrent","account","construction","optimized","setOptimized","moves","setMoves","list","handleCopy","data","navigator","clipboard","writeText","err","console","error","ToggleButtonGroup","exclusive","ToggleButton","textAlign","followCursor","Link","target","underline","href","rel","InfoIcon","Button","textTransform","onClick","cogstruction","cogData","startIcon","FileCopyIcon","empties","totalBuildRate","SouthIcon","totalPlayerExpRate","totalExpRate","totalFlaggyRate","maxWidth","FormControlLabel","control","Checkbox","checked","TextField","type","inputProps","min","FormControl","fullWidth","size","Select","labelId","id","base","structuredClone","baseBoard","opt","optimizeArrayWithSwaps","ConstructionBoard","move","Section","max","construction_CogStatCalculator","highestDK","cogType","setCogType","getCharacterByHighestSkillLevel","highestConstruction","skillsInfo","mainConstructionValue","Math","pow","constructionMin","constructionMax","FormLabel","RadioGroup","row","aria-labelledby","event","Radio","floor","round","log10","ForwardIcon","world_3_construction","NextSeo","Tabber","ConstructionMain","CogStatCalculator"],"sourceRoot":""}