{"version":3,"file":"static/chunks/pages/account/misc/upgrade-vault-6d73c28bc16079b6.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/Info.js","webpack://_N_E/./node_modules/@mui/material/Badge/useBadge.js","webpack://_N_E/./node_modules/@mui/material/Badge/badgeClasses.js","webpack://_N_E/./node_modules/@mui/material/Badge/Badge.js","webpack://_N_E/./node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js","webpack://_N_E/?824a","webpack://_N_E/./components/common/CoinDisplay.jsx","webpack://_N_E/./components/common/styles.jsx","webpack://_N_E/./pages/account/misc/upgrade-vault.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/misc/upgrade-vault\",\n      function () {\n        return require(\"private-next-pages/account/misc/upgrade-vault.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/misc/upgrade-vault\"])\n      });\n    }\n  ","import { prefix } from 'utility/helpers';\nimport styled from '@emotion/styled';\nimport { Stack, Typography } from '@mui/material';\nconst CoinDisplay = ({\n  variant = 'vertical',\n  centered = true,\n  style = {},\n  money,\n  title = 'Total Money',\n  maxCoins = 5\n}) => {\n  return <div style={style} data-sentry-component=\"CoinDisplay\" data-sentry-source-file=\"CoinDisplay.jsx\">\n    {title ? <Typography style={{\n      textAlign: centered ? 'center' : 'left'\n    }}>{title}</Typography> : null}\n    <Stack flexWrap={'wrap'} justifyContent={centered ? 'center' : 'flex-start'} direction={'row'} gap={variant === 'vertical' ? 2.3 : 1} data-sentry-element=\"Stack\" data-sentry-source-file=\"CoinDisplay.jsx\">\n      {money?.map(([coinIndex, coin], index) => {\n        return index < maxCoins && Number(coin) >= 0 ? <Stack direction={variant === 'vertical' ? 'column' : 'row'} gap={variant === 'vertical' ? 0 : .5} justifyContent={'center'} alignItems={'center'} key={coin + '' + coinIndex}>\n            <CoinIcon src={`${prefix}data/Coins${coinIndex}.png`} alt=\"\" />\n            <Typography variant={'body1'} component={'span'} className={'coin-value'}>{Number(coin)}</Typography>\n          </Stack> : null;\n      })}\n    </Stack>\n  </div>;\n};\nconst CoinIcon = styled.img`\n  width: 23px;\n  height: 27px;\n  object-fit: contain;\n`;\nexport default CoinDisplay;","import React, { forwardRef } from 'react';\nimport { cleanUnderscore, growth, notateNumber, numberWithCommas, prefix } from 'utility/helpers';\nimport { Badge, Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport Tooltip from '../Tooltip';\nimport { calcCardBonus } from 'parsers/cards';\nexport const IconWithText = forwardRef((props, ref) => {\n  const {\n    stat,\n    icon,\n    img,\n    title = '',\n    ...rest\n  } = props;\n  return <Tooltip title={title}>\n    <Stack alignItems={'center'} {...rest} ref={ref} style={{\n      position: 'relative',\n      width: 'fit-content'\n    }}>\n      <img {...img} src={`${prefix}data/${icon}.png`} alt=\"\" />\n      <Typography variant={'body1'} component={'span'}>{stat}</Typography>\n    </Stack>\n  </Tooltip>;\n});\nIconWithText.displayName = 'IconWithText';\nexport const TitleAndValue = ({\n  title,\n  value,\n  boldTitle,\n  titleStyle = {},\n  valueStyle = {}\n}) => {\n  return <Stack direction={'row'} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"TitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    {title ? <Typography sx={titleStyle} fontWeight={boldTitle ? 'bold' : 500} component={'span'}>{title}:&nbsp;</Typography> : null}\n    <Typography fontSize={15} component={'span'} sx={valueStyle} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{value}</Typography>\n  </Stack>;\n};\nexport const StyledBadge = styled(Badge)`\n  & .MuiBadge-badge {\n    background-color: #d5d5dc;\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\nexport const CardAndBorder = cardProps => {\n  const {\n    cardName,\n    stars,\n    cardIndex,\n    name,\n    variant,\n    rawName,\n    amount,\n    nextLevelReq\n  } = cardProps;\n  const iconSrc = variant === 'cardSet' ? `${prefix}data/${rawName}.png` : `${prefix}data/2Cards${cardIndex}.png`;\n  const realCardName = variant === 'cardSet' ? name : cardName;\n  return <>\n    {stars > 0 ? <BorderIcon src={`${prefix}data/CardEquipBorder${stars}.png`} alt=\"\" /> : null}\n    <Tooltip title={<CardTooltip {...{\n      ...cardProps,\n      cardName: realCardName,\n      nextLevelReq,\n      amount\n    }} />} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"styles.jsx\">\n      <CardIcon isCardSet={variant === 'cardSet'} amount={amount} src={iconSrc} alt=\"\" data-sentry-element=\"CardIcon\" data-sentry-source-file=\"styles.jsx\" />\n    </Tooltip>\n  </>;\n};\nconst CardTooltip = ({\n  displayName,\n  effect,\n  bonus,\n  stars,\n  showInfo,\n  nextLevelReq,\n  amount\n}) => {\n  let realBonus = bonus;\n  if (showInfo) {\n    realBonus = calcCardBonus({\n      bonus,\n      stars\n    });\n  }\n  return <>\n    <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(displayName)}</Typography>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(effect.replace('{', realBonus))}</Typography>\n    {showInfo ? <Stack mt={1} direction={'row'} gap={1} flexWrap={'wrap'}>\n      {[1, 2, 3, 4, 5, 6].map((_, index) => {\n        return <Stack key={`${displayName}-${index}`} alignItems={'center'} justifyContent={'space-between'}>\n          {index === 0 ? <Typography>Base</Typography> : <StarIcon src={`${prefix}etc/Star${index}.png`} alt=\"\" />}\n          <Typography>{bonus * (index + 1)}</Typography>\n        </Stack>;\n      })}\n    </Stack> : null}\n    {amount >= nextLevelReq ? <Stack>You've collected {numberWithCommas(amount)} cards</Stack> : nextLevelReq > 0 ? <Stack>\n        Progress: {numberWithCommas(amount)} / {numberWithCommas(nextLevelReq)}\n      </Stack> : null}\n  </>;\n};\nconst StarIcon = styled.img`\n  height: 20px;\n  object-fit: contain;\n`;\nconst CardIcon = styled.img`\n  width: 56px;\n  height: 72px;\n  object-fit: contain;\n  opacity: ${({\n  amount,\n  isCardSet\n}) => !amount && !isCardSet ? .5 : 1};\n`;\nconst BorderIcon = styled.img`\n  position: absolute;\n  left: 50%;\n  top: -3px;\n  pointer-events: none;\n  transform: translateX(-50%);\n`;\nexport const TalentTooltip = ({\n  level,\n  funcX,\n  x1,\n  x2,\n  funcY,\n  y1,\n  y2,\n  description,\n  name,\n  talentId\n}) => {\n  const mainStat = level > 0 ? growth(funcX, level, x1, x2) : 0;\n  const secondaryStat = level > 0 ? growth(funcY, level, y1, y2) : 0;\n  return <>\n    <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n      <img src={`${prefix}data/UISkillIcon${talentId}.png`} alt=\"\" />\n      <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(name)}</Typography>\n    </Stack>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(description).replace('{', mainStat).replace('}', secondaryStat)}</Typography>\n  </>;\n};\nexport const PlayersList = ({\n  players,\n  characters\n}) => {\n  return <Stack gap={1} direction={'row'} data-sentry-element=\"Stack\" data-sentry-component=\"PlayersList\" data-sentry-source-file=\"styles.jsx\">\n    {players.map(({\n      index\n    }) => <Tooltip key={name + '-head-' + index} title={characters?.[index]?.name}>\n      <img style={{\n        width: 24,\n        height: 24\n      }} src={`${prefix}data/ClassIcons${characters?.[index]?.classIndex}.png`} alt=\"\" />\n    </Tooltip>)}\n  </Stack>;\n};\nexport const MissingData = ({\n  name\n}) => {\n  return <Typography variant={'h3'} data-sentry-element=\"Typography\" data-sentry-component=\"MissingData\" data-sentry-source-file=\"styles.jsx\">Your account is missing data for {name}</Typography>;\n};\nexport const CardTitleAndValue = ({\n  variant,\n  raised,\n  cardSx,\n  imgOnly,\n  imgStyle,\n  title,\n  value,\n  children,\n  icon,\n  tooltipTitle,\n  stackProps,\n  contentPadding\n}) => {\n  return <Tooltip title={tooltipTitle || ''} data-sentry-element=\"Tooltip\" data-sentry-component=\"CardTitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    <Card variant={variant} raised={raised} sx={{\n      my: {\n        xs: 0,\n        md: 3\n      },\n      mb: {\n        xs: 2\n      },\n      width: 'fit-content',\n      ...cardSx\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"styles.jsx\">\n      <CardContent sx={{\n        '&:last-child': contentPadding ? {\n          p: contentPadding\n        } : {}\n      }} data-sentry-element=\"CardContent\" data-sentry-source-file=\"styles.jsx\">\n        <Stack sx={{\n          display: stackProps ? 'flex' : 'block',\n          ...(stackProps || {})\n        }} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n          {title ? <Typography sx={{\n            fontSize: 14\n          }} color=\"text.secondary\" gutterBottom component={'span'}>{title}</Typography> : null}\n          {value || imgOnly ? icon ? <Stack direction={'row'} gap={2} alignItems={'center'}>\n            <img style={{\n              objectFit: 'contain',\n              ...imgStyle\n            }} src={`${prefix}${icon}`} alt=\"\" />\n            {value ? <Typography component={'div'}>{value}</Typography> : null}\n          </Stack> : <Typography component={'div'}>{value}</Typography> : children}\n        </Stack>\n      </CardContent>\n    </Card>\n  </Tooltip>;\n};\nexport const Breakdown = ({\n  breakdown,\n  titleStyle = {},\n  notation = 'Big'\n}) => {\n  return <>\n    {breakdown?.map(({\n      name,\n      value,\n      title\n    }, index) => title ? <Typography sx={{\n      fontWeight: 500\n    }} key={`${name}-${index}`}>{title}</Typography> : !name ? <Divider sx={{\n      my: 1,\n      bgcolor: 'black'\n    }} key={`${name}-${index}`} /> : <TitleAndValue key={`${name}-${index}`} titleStyle={{\n      width: 120,\n      ...titleStyle\n    }} title={name} value={!isNaN(value) ? notateNumber(value, notation) : value} />)}\n  </>;\n};\nexport const CenteredStack = ({\n  direction = 'row',\n  children\n}) => {\n  return <Stack gap={1} direction={direction} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CenteredStack\" data-sentry-source-file=\"styles.jsx\">\n    {children}\n  </Stack>;\n};","import { Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport { CardTitleAndValue } from '@components/common/styles';\nimport Tooltip from '@components/Tooltip';\nimport { cleanUnderscore, commaNotation, getCoinsArray, notateNumber, prefix } from '@utility/helpers';\nimport InfoIcon from '@mui/icons-material/Info';\nimport React, { useContext } from 'react';\nimport { AppContext } from '@components/common/context/AppProvider';\nimport CoinDisplay from '@components/common/CoinDisplay';\nconst UpgradeVault = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const {\n    upgrades,\n    totalUpgradeLevels,\n    nextUnlock\n  } = state?.account?.upgradeVault;\n  return <>\n    <Stack direction={'row'} gap={{\n      xs: 1,\n      md: 3\n    }} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"upgrade-vault.jsx\">\n      <CardTitleAndValue title={'Total Levels'} value={totalUpgradeLevels} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"upgrade-vault.jsx\" />\n      {nextUnlock?.unlockLevel ? <CardTitleAndValue title={'Next upgrade'} value={<Tooltip title={<Stack gap={1}>\n        <Typography sx={{\n          fontWeight: 'bold'\n        }}>{cleanUnderscore(nextUnlock?.name)}</Typography>\n        <Typography>{cleanUnderscore(nextUnlock?.description)}</Typography>\n      </Stack>}>\n        <Stack direction={'row'} gap={1}>\n          {nextUnlock?.unlockLevel}\n          <InfoIcon />\n        </Stack>\n      </Tooltip>} /> : null}\n    </Stack>\n    <Stack direction={'row'} gap={2} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-source-file=\"upgrade-vault.jsx\">\n      {upgrades?.map(({\n        name,\n        cost,\n        description,\n        bonus,\n        monsterProgress,\n        boneType,\n        unlockLevel,\n        maxLevel,\n        level,\n        costToMax,\n        unlocked\n      }, index) => {\n        const desc = description.replace('{', commaNotation(bonus)).replace('}', notateNumber(1 + bonus / 100, 'MultiplierInfo'));\n        const maxed = level >= maxLevel;\n        return <Card key={name + index}>\n            <CardContent sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: 370,\n            minHeight: 300,\n            height: '100%',\n            opacity: unlocked ? 1 : .5\n          }}>\n              <Stack direction={'row'} gap={2} flexWrap={'wrap'} alignItems={'center'}>\n                <img style={{\n                width: 32,\n                height: 32\n              }} src={`${prefix}data/VaultUpg${index}.png`} />\n                <Typography>{cleanUnderscore(name.replace(/[船般航舞製]/, '').replace('(Tap_for_more_info)', '').replace('(Tap_for_Info)', '').replace('(#)', ''))} ({maxed ? 'Maxed' : `${level} / ${maxLevel}`})</Typography>\n              </Stack>\n              <Divider sx={{\n              my: 1\n            }} />\n              <Typography>{cleanUnderscore(desc.replace('$', ` ${cleanUnderscore(monsterProgress)}`).replace('.00', ''))}</Typography>\n              {level >= maxLevel ? null : <>\n                <Divider sx={{\n                my: 1\n              }} />\n                <Typography variant={'caption'}>Cost</Typography>\n                <CoinDisplay title={''} noShadow variant={'no'} money={getCoinsArray(cost)} />\n                <Typography variant={'caption'}>Cost to max</Typography>\n                <CoinDisplay title={''} noShadow variant={'no'} money={getCoinsArray(costToMax)} />\n              </>}\n              <Divider sx={{\n              my: 1\n            }} />\n              <Typography>Unlocks at: {commaNotation(unlockLevel)} levels</Typography>\n            </CardContent>\n          </Card>;\n      })}\n    </Stack>\n  </>;\n};\nexport default UpgradeVault;"],"names":["__webpack_exports__","Z","_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","d","Badge_useBadge","parameters","badgeContent","badgeContentProp","invisible","invisibleProp","max","maxProp","showZero","prevProps","usePreviousProps","displayValue","Number","getBadgeUtilityClass","slot","generateUtilityClass","ZP","badgeClasses","generateUtilityClasses","useUtilityClasses","ownerState","color","anchorOrigin","overlap","variant","classes","slots","root","badge","capitalize","vertical","horizontal","composeClasses","BadgeRoot","styled","name","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","memoTheme","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","entries","palette","filter","createSimplePaletteValueFilter","map","style","backgroundColor","vars","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","Badge_badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","Badge","react","forwardRef","inProps","ref","DefaultPropsProvider","i","anchorOriginProp","className","classesProp","component","components","componentsProps","children","overlapProp","colorProp","slotProps","variantProp","other","invisibleFromHook","displayValueFromHook","anchorOriginPropProp","undefined","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","jsx_runtime","jsxs","Badge_Badge","value","react__WEBPACK_IMPORTED_MODULE_0__","useRef","useEffect","current","window","__NEXT_P","push","__webpack_require__","CoinIcon","img","_templateObject","centered","money","title","maxCoins","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","div","data-sentry-component","data-sentry-source-file","Typography","textAlign","Stack","direction","gap","data-sentry-element","index","coinIndex","coin","src","prefix","concat","alt","IconWithText","stat","icon","rest","Tooltip","width","displayName","TitleAndValue","boldTitle","titleStyle","valueStyle","sx","StyledBadge","CardAndBorder","cardProps","cardName","stars","cardIndex","rawName","amount","nextLevelReq","iconSrc","Fragment","BorderIcon","CardTooltip","CardIcon","isCardSet","effect","bonus","showInfo","realBonus","calcCardBonus","cleanUnderscore","replace","mt","_","StarIcon","numberWithCommas","_templateObject1","_templateObject2","_templateObject3","TalentTooltip","level","funcX","x1","x2","funcY","y1","y2","description","talentId","mainStat","growth","secondaryStat","PlayersList","players","characters","classIndex","MissingData","CardTitleAndValue","raised","cardSx","imgOnly","imgStyle","tooltipTitle","stackProps","contentPadding","Card","my","xs","md","mb","CardContent","p","gutterBottom","objectFit","Breakdown","breakdown","notation","notateNumber","Divider","bgcolor","CenteredStack","state","useContext","AppContext","upgrades","totalUpgradeLevels","nextUnlock","account","upgradeVault","unlockLevel","InfoIcon","cost","monsterProgress","boneType","maxLevel","costToMax","unlocked","desc","commaNotation","maxed","minHeight","opacity","CoinDisplay","noShadow","getCoinsArray"],"sourceRoot":""}