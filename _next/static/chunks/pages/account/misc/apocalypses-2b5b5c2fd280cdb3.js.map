{"version":3,"file":"static/chunks/pages/account/misc/apocalypses-2b5b5c2fd280cdb3.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/FormatAlignCenter.js","webpack://_N_E/./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://_N_E/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js","webpack://_N_E/?4156","webpack://_N_E/./pages/account/misc/apocalypses.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M7 15v2h10v-2zm-4 6h18v-2H3zm0-8h18v-2H3zm4-6v2h10V7zM3 3v2h18V3z\"\n}), 'FormatAlignCenter');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/misc/apocalypses\",\n      function () {\n        return require(\"private-next-pages/account/misc/apocalypses.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/misc/apocalypses\"])\n      });\n    }\n  ","import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '@components/common/context/AppProvider';\nimport { talentPagesMap } from '@parsers/talents';\nimport { Card, CardContent, Checkbox, Divider, FormControlLabel, Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { cleanUnderscore, notateNumber, numberWithCommas, prefix, tryToParse } from '@utility/helpers';\nimport styled from '@emotion/styled';\nimport { NextSeo } from 'next-seo';\nimport Tooltip from '../../../components/Tooltip';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nconst Apocalypses = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [filteredCharacters, setFilteredCharacters] = useState([0]);\n  const handleFilteredCharacters = (event, newCharacters) => {\n    newCharacters?.length > 0 && setFilteredCharacters(newCharacters);\n    localStorage.setItem('apocalypseCharacters', JSON.stringify(newCharacters));\n  };\n  const handleSelectAll = () => {\n    const allSelected = filteredCharacters?.length === state?.characters?.length;\n    const chars = Array.from(Array(allSelected ? 1 : state?.characters?.length).keys());\n    setFilteredCharacters(chars);\n  };\n  useEffect(() => {\n    const chars = tryToParse(localStorage.getItem('apocalypseCharacters'));\n    if (chars) {\n      setFilteredCharacters(tryToParse(localStorage.getItem('apocalypseCharacters')));\n    } else {\n      if (state?.characters) {\n        const localManiacs = state?.characters?.filter(character => {\n          const isBarbarian = talentPagesMap[character?.class]?.includes('Barbarian');\n          const isBloodBerserker = talentPagesMap[character?.class]?.includes('Blood_Berserker');\n          return isBarbarian || isBloodBerserker;\n        });\n        setFilteredCharacters(localManiacs?.map(({\n          playerId\n        }) => playerId));\n      }\n    }\n  }, []);\n  return <>\n      <NextSeo title=\"Apocalypses | Idleon Toolbox\" description=\"Dedicated to the barbarian/blood berserker class to keep track of Zow and Chow talents\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"apocalypses.jsx\" />\n      <Stack direction={'row'} my={2} justifyContent={'center'} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"apocalypses.jsx\">\n        <ToggleButtonGroup size={'small'} sx={{\n        display: 'flex',\n        flexWrap: 'wrap'\n      }} value={filteredCharacters} onChange={handleFilteredCharacters} data-sentry-element=\"ToggleButtonGroup\" data-sentry-source-file=\"apocalypses.jsx\">\n          {state?.characters?.map((character, index) => {\n          return <ToggleButton title={character?.name} value={index} key={character?.name + '' + index}>\n                <img src={`${prefix}data/ClassIcons${character?.classIndex}.png`} alt=\"\" />\n              </ToggleButton>;\n        })}\n        </ToggleButtonGroup>\n        <ToggleButtonGroup sx={{\n        display: 'flex',\n        flexWrap: 'wrap'\n      }} size={'small'} data-sentry-element=\"ToggleButtonGroup\" data-sentry-source-file=\"apocalypses.jsx\">\n          <ToggleButton onClick={handleSelectAll} title=\"Select all\" value={'all'} data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"apocalypses.jsx\">\n            <FormatAlignCenterIcon data-sentry-element=\"FormatAlignCenterIcon\" data-sentry-source-file=\"apocalypses.jsx\" />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Stack>\n      <Typography mb={3} component={'div'} variant={'caption'} data-sentry-element=\"Typography\" data-sentry-source-file=\"apocalypses.jsx\">* Listed monsters are the ones you haven't\n        zowed/chowed and how many you've already killed</Typography>\n      <Stack gap={4} data-sentry-element=\"Stack\" data-sentry-source-file=\"apocalypses.jsx\">\n        {filteredCharacters.length === 0 ? <Typography variant={'h3'} sx={{\n        textAlign: 'center'\n      }}>Please select at\n          least one character</Typography> : null}\n        {state?.characters?.map(({\n        name,\n        zow,\n        chow,\n        wow,\n        playerId\n      }, index) => {\n        if (filteredCharacters?.indexOf(playerId) === -1) return null;\n        return <Stack key={`${name}-zow-chow`} gap={4}>\n            <ApocDisplay apocName={'zow'} charName={name} key={`${name}-zow`} monsters={zow} />\n            <ApocDisplay apocName={'chow'} charName={name} key={`${name}-chow`} monsters={chow} />\n            <ApocDisplay apocName={'wow'} charName={name} key={`${name}-wow`} monsters={wow} />\n            {index < filteredCharacters.length - 1 ? <Divider my={5} /> : null}\n          </Stack>;\n      })}\n      </Stack>\n    </>;\n};\nconst ApocDisplay = ({\n  apocName,\n  charName,\n  monsters\n}) => {\n  const [onlySuperChows, setOnlySuperChows] = useState(false);\n  const allDone = monsters?.list?.every(({\n    done\n  }) => done.every(done => done));\n  return <Stack gap={2} data-sentry-element=\"Stack\" data-sentry-component=\"ApocDisplay\" data-sentry-source-file=\"apocalypses.jsx\">\n    <Typography variant={'h4'} data-sentry-element=\"Typography\" data-sentry-source-file=\"apocalypses.jsx\">{charName} {apocName}ed {apocName === 'zow' || apocName === 'wow' ? monsters.finished.at(0) : monsters?.finished?.join('/') ?? 0} monsters</Typography>\n    {apocName === 'chow' ? <Typography component={'div'} variant={'caption'}>* Normal Chow requires 1M kills / Super Chow requires 100M\n        kills</Typography> : null}\n    {apocName === 'wow' ? <Typography component={'div'} variant={'caption'}>* Wow requires 1 billion kills</Typography> : null}\n    {apocName === 'chow' ? <FormControlLabel control={<Checkbox checked={onlySuperChows} onChange={() => setOnlySuperChows(!onlySuperChows)} />} name={'onlySuperChows'} label=\"Hide super chow\" /> : null}\n    <Card data-sentry-element=\"Card\" data-sentry-source-file=\"apocalypses.jsx\">\n      <CardContent data-sentry-element=\"CardContent\" data-sentry-source-file=\"apocalypses.jsx\">\n        {allDone ? <Typography>You're Done</Typography> : monsters ? <Stack gap={3} direction={'row'} flexWrap={'wrap'}>\n          {monsters?.list?.map(({\n            mapName,\n            name,\n            monsterFace,\n            kills,\n            done,\n            thresholds\n          }, index) => {\n            if (onlySuperChows && kills > 1e6) return;\n            return !done.every(done => done) ? <Tooltip title={`${cleanUnderscore(mapName)} - ${numberWithCommas(kills)}`} key={`${charName}-${name}-${index}`}>\n                <Card sx={{\n                width: 120\n              }} variant={'outlined'}>\n                  <CardContent>\n                    <Stack alignItems={'center'} gap={1}>\n                      <MonsterIcon src={`${prefix}data/Mface${monsterFace}.png`} alt=\"\" />\n                      <Typography>{notateNumber(kills, 'Big')}</Typography>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Tooltip> : null;\n          })}\n        </Stack> : <Typography>{apocName} talent is still locked !</Typography>}\n      </CardContent>\n    </Card>\n  </Stack>;\n};\nconst MonsterIcon = styled.img`\n  width: 35px;\n  height: 41px;\n`;\nexport default Apocalypses;"],"names":["__webpack_exports__","Z","_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","d","getFormControlLabelUtilityClasses","slot","generateUtilityClass","ZP","formControlLabelClasses","generateUtilityClasses","useUtilityClasses","ownerState","classes","disabled","labelPlacement","error","required","slots","root","capitalize","label","asterisk","composeClasses","FormControlLabelRoot","styled","name","overridesResolver","props","styles","FormControlLabel_formControlLabelClasses","memoTheme","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","color","vars","palette","text","variants","style","flexDirection","AsteriskComponent","main","FormControlLabel","react","forwardRef","inProps","ref","DefaultPropsProvider","i","checked","className","componentsProps","control","disabledProp","disableTypography","inputRef","labelProp","onChange","requiredProp","slotProps","value","other","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","externalForwardedProps","TypographySlot","typographySlotProps","useSlot","elementType","Typography","type","jsx_runtime","component","clsx","children","jsxs","cloneElement","FormControlLabel_FormControlLabel","window","__NEXT_P","push","__webpack_require__","ApocDisplay","monsters","apocName","charName","param","onlySuperChows","setOnlySuperChows","useState","allDone","list","every","done","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Stack","gap","data-sentry-element","data-sentry-component","data-sentry-source-file","variant","finished","at","join","Checkbox","Card","CardContent","direction","flexWrap","map","index","mapName","monsterFace","kills","thresholds","Tooltip","title","numberWithCommas","cleanUnderscore","concat","sx","width","MonsterIcon","src","prefix","alt","notateNumber","img","_templateObject","state","useContext","AppContext","filteredCharacters","setFilteredCharacters","useEffect","chars","tryToParse","localStorage","getItem","characters","localManiacs","filter","character","talentPagesMap","isBarbarian","class","includes","isBloodBerserker","playerId","Fragment","NextSeo","description","my","justifyContent","ToggleButtonGroup","size","event","newCharacters","length","setItem","JSON","stringify","ToggleButton","classIndex","onClick","allSelected","Array","from","keys","FormatAlignCenterIcon","mb","textAlign","zow","chow","wow","indexOf","Divider"],"sourceRoot":""}