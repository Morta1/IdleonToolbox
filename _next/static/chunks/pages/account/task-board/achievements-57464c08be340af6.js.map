{"version":3,"file":"static/chunks/pages/account/task-board/achievements-57464c08be340af6.js","mappings":"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","sources":["webpack://_N_E/?302f","webpack://_N_E/./components/common/Tabber.jsx","webpack://_N_E/./pages/account/task-board/achievements.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/task-board/achievements\",\n      function () {\n        return require(\"private-next-pages/account/task-board/achievements.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/task-board/achievements\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, useMediaQuery } from '@mui/material';\nimport { prefix } from '@utility/helpers';\nimport Box from '@mui/material/Box';\nimport { useRouter } from 'next/router';\nconst Tabber = ({\n  tabs,\n  components,\n  icons,\n  children,\n  onTabChange,\n  forceScroll,\n  orientation = 'horizontal',\n  iconsOnly,\n  queryKey = 't',\n  clearOnChange = [],\n  disableQuery = false\n}) => {\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const router = useRouter();\n\n  // State for managing active tab if `disableQuery` is enabled\n  const [activeTab, setActiveTab] = useState(0);\n  const queryValue = router.query[queryKey];\n  const activeTabIndex = tabs.findIndex(tab => tab === queryValue);\n  const selectedTab = disableQuery ? activeTab : activeTabIndex >= 0 ? activeTabIndex : 0;\n  useEffect(() => {\n    if (!disableQuery) {\n      // Set the default query parameter if missing\n      if (!queryValue) {\n        router.replace({\n          pathname: router.pathname,\n          query: {\n            ...router.query,\n            [queryKey]: tabs[selectedTab]\n          }\n        }, undefined, {\n          shallow: true\n        });\n      }\n    }\n  }, [queryValue, queryKey, tabs, selectedTab, router, disableQuery]);\n  const handleOnClick = (e, selected) => {\n    if (disableQuery) {\n      setActiveTab(selected);\n    } else {\n      const newQuery = {\n        ...router.query,\n        [queryKey]: tabs[selected]\n      };\n      // Remove specified query parameters\n      clearOnChange.forEach(key => delete newQuery[key]);\n      router.push({\n        pathname: router.pathname,\n        query: newQuery\n      }, undefined, {\n        shallow: true\n      });\n    }\n    onTabChange && onTabChange(selected);\n  };\n  const array = Array.isArray(children) ? children : [children];\n  return <Box sx={orientation === 'vertical' ? {\n    flexGrow: 1,\n    display: 'flex'\n  } : {}} data-sentry-element=\"Box\" data-sentry-component=\"Tabber\" data-sentry-source-file=\"Tabber.jsx\">\n    <Tabs centered={!isMd || isMd && tabs.length < 4} scrollButtons allowScrollButtonsMobile sx={{\n      marginBottom: 3\n    }} variant={isMd && tabs.length >= 4 || forceScroll ? 'scrollable' : 'standard'} value={selectedTab} onChange={handleOnClick} data-sentry-element=\"Tabs\" data-sentry-source-file=\"Tabber.jsx\">\n      {(components ?? tabs)?.map((tab, index) => {\n        return <Tab iconPosition=\"start\" icon={icons?.[index] ? <img src={`${prefix}${icons?.[index]}.png`} /> : null} wrapped label={iconsOnly ? '' : tab} sx={{\n          minWidth: 62\n        }} key={`${tab?.[index]}-${index}`} />;\n      })}\n    </Tabs>\n    {onTabChange ? children : array?.map((child, index) => {\n      return index === selectedTab ? child : null;\n    })}\n  </Box>;\n};\nexport default Tabber;","import { useContext, useEffect, useState } from 'react';\nimport { Box, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport HtmlTooltip from 'components/Tooltip';\nimport { AppContext } from 'components/common/context/AppProvider';\nimport { cleanUnderscore, notateNumber, prefix, worldsArray } from 'utility/helpers';\nimport { NextSeo } from 'next-seo';\nimport Tabber from '../../../components/common/Tabber';\nconst achievementsPerWorld = 70;\nconst Achievements = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [localAchievements, setLocalAchievements] = useState(state?.account?.achievements);\n  const [world, setWorld] = useState(0);\n  useEffect(() => {\n    setLocalAchievements(getWorldAchievements(world * achievementsPerWorld, world * achievementsPerWorld + achievementsPerWorld));\n  }, [state]);\n  const handleWorldChange = world => {\n    setLocalAchievements(getWorldAchievements(world * achievementsPerWorld, world * achievementsPerWorld + achievementsPerWorld));\n    setWorld(world);\n  };\n  const getWorldAchievements = (start, end) => {\n    const achievements = state?.account?.achievements?.slice(start, end);\n    achievements?.sort((a, b) => a?.visualIndex - b?.visualIndex);\n    return achievements;\n  };\n  return <Box data-sentry-element=\"Box\" data-sentry-component=\"Achievements\" data-sentry-source-file=\"achievements.jsx\">\n      <NextSeo title=\"Achievements | Idleon Toolbox\" description=\"Keep track of your achievements progression\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"achievements.jsx\" />\n      <Tabber tabs={worldsArray} onTabChange={handleWorldChange} data-sentry-element=\"Tabber\" data-sentry-source-file=\"achievements.jsx\">\n        <Box display={'flex'} justifyContent={'center'} data-sentry-element=\"Box\" data-sentry-source-file=\"achievements.jsx\">\n          {localAchievements?.length > 0 ? <Stack sx={{\n          width: {\n            lg: 900\n          }\n        }} justifyContent={'center'} mt={3} flexWrap={'wrap'} direction={'row'} gap={3}>\n              {localAchievements?.map((achievement, index) => {\n            const {\n              name,\n              rawName,\n              completed,\n              visualIndex,\n              currentQuantity,\n              quantity\n            } = achievement;\n            return visualIndex !== -1 && !name.includes('FILLER') ? <Stack sx={{\n              position: 'relative'\n            }} key={`${name}-${index}`}>\n                    <HtmlTooltip title={<AchievementTooltip {...achievement} />}>\n                      <Achievement completed={completed} src={`${prefix}data/${rawName}.png`} alt=\"\" />\n                    </HtmlTooltip>\n                    {currentQuantity ? <Quantity>\n                      {notateNumber(currentQuantity)} {quantity > 1 ? <span> / {notateNumber(quantity, 'Big')}</span> : null}\n                    </Quantity> : null}\n                  </Stack> : null;\n          })}\n            </Stack> : <Typography mt={2} variant={'h4'}>No achievements yet</Typography>}\n        </Box>\n      </Tabber>\n    </Box>;\n};\nconst Quantity = styled.span`\n  position: absolute;\n  font-size: 14px;\n  z-index: 1;\n  bottom: -24px;\n  pointer-events: none;\n  width: 80px;\n  left: -4px;\n`;\nconst Achievement = styled.img`\n  filter: ${({\n  completed\n}) => completed ? 'grayscale(0)' : 'grayscale(.8)'};\n  opacity: ${({\n  completed\n}) => completed ? '1' : '0.3'};\n  margin-left: -4px;\n  object-fit: contain;\n  width: 60px;\n`;\nconst AchievementTooltip = ({\n  name,\n  desc,\n  rewards,\n  currentQuantity,\n  quantity\n}) => {\n  return <>\n    <Typography variant={'h5'} fontWeight={500} data-sentry-element=\"Typography\" data-sentry-source-file=\"achievements.jsx\">{cleanUnderscore(name)}</Typography>\n    <Typography variant={'body1'} data-sentry-element=\"Typography\" data-sentry-source-file=\"achievements.jsx\">{cleanUnderscore(desc)}</Typography>\n    {currentQuantity ? <Box mt={1} mb={1}>\n      <Typography variant={'body1'}>Progress: {currentQuantity} {quantity > 1 ? <span> / {quantity}</span> : null}</Typography>\n    </Box> : null}\n    <Box mt={1} data-sentry-element=\"Box\" data-sentry-source-file=\"achievements.jsx\">\n      <Typography variant={'body1'} fontWeight={'bold'} data-sentry-element=\"Typography\" data-sentry-source-file=\"achievements.jsx\">Rewards:</Typography>\n      <Typography variant={'body1'} data-sentry-element=\"Typography\" data-sentry-source-file=\"achievements.jsx\">{cleanUnderscore(rewards.join(', '))}</Typography>\n    </Box>\n  </>;\n};\nexport default Achievements;"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","Z","components","tabs","icons","children","onTabChange","forceScroll","orientation","iconsOnly","queryKey","clearOnChange","disableQuery","param","isMd","useMediaQuery","theme","breakpoints","down","noSsr","router","useRouter","activeTab","setActiveTab","useState","queryValue","query","activeTabIndex","findIndex","tab","selectedTab","useEffect","replace","pathname","undefined","shallow","array","Array","isArray","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Box","sx","flexGrow","display","data-sentry-element","data-sentry-component","data-sentry-source-file","jsx","Tabs","centered","length","scrollButtons","allowScrollButtonsMobile","marginBottom","variant","value","onChange","e","selected","newQuery","forEach","key","_this","map","index","Tab","iconPosition","icon","img","src","concat","prefix","wrapped","label","minWidth","child","Quantity","styled","span","_templateObject","Achievement","_templateObject1","completed","AchievementTooltip","name","desc","rewards","currentQuantity","quantity","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Fragment","Typography","fontWeight","cleanUnderscore","mt","mb","join","state","useContext","AppContext","localAchievements","setLocalAchievements","account","achievements","world","setWorld","getWorldAchievements","start","end","slice","sort","a","b","visualIndex","NextSeo","title","description","Tabber","worldsArray","justifyContent","Stack","width","lg","flexWrap","direction","gap","achievement","rawName","includes","position","HtmlTooltip","alt","notateNumber"],"sourceRoot":""}