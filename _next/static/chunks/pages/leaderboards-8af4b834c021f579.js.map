{"version":3,"file":"static/chunks/pages/leaderboards-8af4b834c021f579.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/system/esm/Grid/traverseBreakpoints.js","webpack://_N_E/./node_modules/@mui/system/esm/Grid/gridGenerator.js","webpack://_N_E/./node_modules/@mui/system/esm/Grid/createGrid.js","webpack://_N_E/./node_modules/@mui/material/Grid2/Grid2.js","webpack://_N_E/?885a","webpack://_N_E/./components/common/Tabber.jsx","webpack://_N_E/./components/Leaderboard.jsx","webpack://_N_E/./pages/leaderboards.jsx","webpack://_N_E/<anon>"],"sourcesContent":["export const filterBreakpointKeys = (breakpointsKeys, responsiveKeys) => breakpointsKeys.filter(key => responsiveKeys.includes(key));\nexport const traverseBreakpoints = (breakpoints, responsive, iterator) => {\n  const smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.\n\n  if (Array.isArray(responsive)) {\n    responsive.forEach((breakpointValue, index) => {\n      iterator((responsiveStyles, style) => {\n        if (index <= breakpoints.keys.length - 1) {\n          if (index === 0) {\n            Object.assign(responsiveStyles, style);\n          } else {\n            responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style;\n          }\n        }\n      }, breakpointValue);\n    });\n  } else if (responsive && typeof responsive === 'object') {\n    // prevent null\n    // responsive could be a very big object, pick the smallest responsive values\n\n    const keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));\n    keys.forEach(key => {\n      if (breakpoints.keys.includes(key)) {\n        // @ts-ignore already checked that responsive is an object\n        const breakpointValue = responsive[key];\n        if (breakpointValue !== undefined) {\n          iterator((responsiveStyles, style) => {\n            if (smallestBreakpoint === key) {\n              Object.assign(responsiveStyles, style);\n            } else {\n              responsiveStyles[breakpoints.up(key)] = style;\n            }\n          }, breakpointValue);\n        }\n      }\n    });\n  } else if (typeof responsive === 'number' || typeof responsive === 'string') {\n    iterator((responsiveStyles, style) => {\n      Object.assign(responsiveStyles, style);\n    }, responsive);\n  }\n};","import { traverseBreakpoints } from \"./traverseBreakpoints.js\";\nfunction getSelfSpacingVar(axis) {\n  return `--Grid-${axis}Spacing`;\n}\nfunction getParentSpacingVar(axis) {\n  return `--Grid-parent-${axis}Spacing`;\n}\nconst selfColumnsVar = '--Grid-columns';\nconst parentColumnsVar = '--Grid-parent-columns';\nexport const generateGridSizeStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.size, (appendStyle, value) => {\n    let style = {};\n    if (value === 'grow') {\n      style = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    }\n    if (value === 'auto') {\n      style = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        flexGrow: 0,\n        flexBasis: 'auto',\n        width: `calc(100% * ${value} / var(${parentColumnsVar}) - (var(${parentColumnsVar}) - ${value}) * (var(${getParentSpacingVar('column')}) / var(${parentColumnsVar})))`\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridOffsetStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.offset, (appendStyle, value) => {\n    let style = {};\n    if (value === 'auto') {\n      style = {\n        marginLeft: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        marginLeft: value === 0 ? '0px' : `calc(100% * ${value} / var(${parentColumnsVar}) + var(${getParentSpacingVar('column')}) * ${value} / var(${parentColumnsVar}))`\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridColumnsStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {\n    [selfColumnsVar]: 12\n  };\n  traverseBreakpoints(theme.breakpoints, ownerState.columns, (appendStyle, value) => {\n    const columns = value ?? 12;\n    appendStyle(styles, {\n      [selfColumnsVar]: columns,\n      '> *': {\n        [parentColumnsVar]: columns\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridRowSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value) => {\n    const spacing = typeof value === 'string' ? value : theme.spacing?.(value);\n    appendStyle(styles, {\n      [getSelfSpacingVar('row')]: spacing,\n      '> *': {\n        [getParentSpacingVar('row')]: spacing\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridColumnSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value) => {\n    const spacing = typeof value === 'string' ? value : theme.spacing?.(value);\n    appendStyle(styles, {\n      [getSelfSpacingVar('column')]: spacing,\n      '> *': {\n        [getParentSpacingVar('column')]: spacing\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridDirectionStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.direction, (appendStyle, value) => {\n    appendStyle(styles, {\n      flexDirection: value\n    });\n  });\n  return styles;\n};\nexport const generateGridStyles = ({\n  ownerState\n}) => {\n  return {\n    minWidth: 0,\n    boxSizing: 'border-box',\n    ...(ownerState.container && {\n      display: 'flex',\n      flexWrap: 'wrap',\n      ...(ownerState.wrap && ownerState.wrap !== 'wrap' && {\n        flexWrap: ownerState.wrap\n      }),\n      gap: `var(${getSelfSpacingVar('row')}) var(${getSelfSpacingVar('column')})`\n    })\n  };\n};\nexport const generateSizeClassNames = size => {\n  const classNames = [];\n  Object.entries(size).forEach(([key, value]) => {\n    if (value !== false && value !== undefined) {\n      classNames.push(`grid-${key}-${String(value)}`);\n    }\n  });\n  return classNames;\n};\nexport const generateSpacingClassNames = (spacing, smallestBreakpoint = 'xs') => {\n  function isValidSpacing(val) {\n    if (val === undefined) {\n      return false;\n    }\n    return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;\n  }\n  if (isValidSpacing(spacing)) {\n    return [`spacing-${smallestBreakpoint}-${String(spacing)}`];\n  }\n  if (typeof spacing === 'object' && !Array.isArray(spacing)) {\n    const classNames = [];\n    Object.entries(spacing).forEach(([key, value]) => {\n      if (isValidSpacing(value)) {\n        classNames.push(`spacing-${key}-${String(value)}`);\n      }\n    });\n    return classNames;\n  }\n  return [];\n};\nexport const generateDirectionClasses = direction => {\n  if (direction === undefined) {\n    return [];\n  }\n  if (typeof direction === 'object') {\n    return Object.entries(direction).map(([key, value]) => `direction-${key}-${value}`);\n  }\n  return [`direction-xs-${String(direction)}`];\n};","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isMuiElement from '@mui/utils/isMuiElement';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport useThemeSystem from \"../useTheme/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { generateGridStyles, generateGridSizeStyles, generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridDirectionStyles, generateGridOffsetStyles, generateSizeClassNames, generateSpacingClassNames, generateDirectionClasses } from \"./gridGenerator.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiGrid',\n    defaultTheme\n  });\n}\nexport default function createGrid(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    useTheme = useThemeSystem,\n    componentName = 'MuiGrid'\n  } = options;\n  const useUtilityClasses = (ownerState, theme) => {\n    const {\n      container,\n      direction,\n      spacing,\n      wrap,\n      size\n    } = ownerState;\n    const slots = {\n      root: ['root', container && 'container', wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...generateDirectionClasses(direction), ...generateSizeClassNames(size), ...(container ? generateSpacingClassNames(spacing, theme.breakpoints.keys[0]) : [])]\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  function parseResponsiveProp(propValue, breakpoints, shouldUseValue = () => true) {\n    const parsedProp = {};\n    if (propValue === null) {\n      return parsedProp;\n    }\n    if (Array.isArray(propValue)) {\n      propValue.forEach((value, index) => {\n        if (value !== null && shouldUseValue(value) && breakpoints.keys[index]) {\n          parsedProp[breakpoints.keys[index]] = value;\n        }\n      });\n    } else if (typeof propValue === 'object') {\n      Object.keys(propValue).forEach(key => {\n        const value = propValue[key];\n        if (value !== null && value !== undefined && shouldUseValue(value)) {\n          parsedProp[key] = value;\n        }\n      });\n    } else {\n      parsedProp[breakpoints.keys[0]] = propValue;\n    }\n    return parsedProp;\n  }\n  const GridRoot = createStyledComponent(generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridSizeStyles, generateGridDirectionStyles, generateGridStyles, generateGridOffsetStyles);\n  const Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const theme = useTheme();\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      className,\n      children,\n      columns: columnsProp = 12,\n      container = false,\n      component = 'div',\n      direction = 'row',\n      wrap = 'wrap',\n      size: sizeProp = {},\n      offset: offsetProp = {},\n      spacing: spacingProp = 0,\n      rowSpacing: rowSpacingProp = spacingProp,\n      columnSpacing: columnSpacingProp = spacingProp,\n      unstable_level: level = 0,\n      ...other\n    } = props;\n    const size = parseResponsiveProp(sizeProp, theme.breakpoints, val => val !== false);\n    const offset = parseResponsiveProp(offsetProp, theme.breakpoints);\n    const columns = inProps.columns ?? (level ? undefined : columnsProp);\n    const spacing = inProps.spacing ?? (level ? undefined : spacingProp);\n    const rowSpacing = inProps.rowSpacing ?? inProps.spacing ?? (level ? undefined : rowSpacingProp);\n    const columnSpacing = inProps.columnSpacing ?? inProps.spacing ?? (level ? undefined : columnSpacingProp);\n    const ownerState = {\n      ...props,\n      level,\n      columns,\n      container,\n      direction,\n      wrap,\n      spacing,\n      rowSpacing,\n      columnSpacing,\n      size,\n      offset\n    };\n    const classes = useUtilityClasses(ownerState, theme);\n    return /*#__PURE__*/_jsx(GridRoot, {\n      ref: ref,\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ...other,\n      children: React.Children.map(children, child => {\n        if (/*#__PURE__*/React.isValidElement(child) && isMuiElement(child, ['Grid']) && container && child.props.container) {\n          return /*#__PURE__*/React.cloneElement(child, {\n            unstable_level: child.props?.unstable_level ?? level + 1\n          });\n        }\n        return child;\n      })\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n    columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    component: PropTypes.elementType,\n    container: PropTypes.bool,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n    rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])), PropTypes.object]),\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n    wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap'])\n  } : void 0;\n\n  // @ts-ignore internal logic for nested grid\n  Grid.muiName = 'Grid';\n  return Grid;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createGrid as createGrid2 } from '@mui/system/Grid';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport { styled } from \"../styles/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\n/**\n *\n * Demos:\n *\n * - [Grid version 2](https://mui.com/material-ui/react-grid2/)\n *\n * API:\n *\n * - [Grid2 API](https://mui.com/material-ui/api/grid-2/)\n */\nconst Grid2 = createGrid2({\n  createStyledComponent: styled('div', {\n    name: 'MuiGrid2',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, ownerState.container && styles.container];\n    }\n  }),\n  componentName: 'MuiGrid2',\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid2'\n  }),\n  useTheme\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid2.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Defines the offset value for the type `item` components.\n   */\n  offset: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Defines the size of the the type `item` components.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @internal\n   * The level of the grid starts from `0` and increases when the grid nests\n   * inside another grid. Nesting is defined as a container Grid being a direct\n   * child of a container Grid.\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <Grid container> // level 1\n   *     <Grid container> // level 2\n   * ```\n   *\n   * Only consecutive grid is considered nesting. A grid container will start at\n   * `0` if there are non-Grid container element above it.\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <div>\n   *     <Grid container> // level 0\n   * ```\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <Grid>\n   *     <Grid container> // level 0\n   * ```\n   */\n  unstable_level: PropTypes.number,\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap'])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const Component = Grid2;\n  const requireProp = requirePropFactory('Grid2', Component);\n  // eslint-disable-next-line no-useless-concat\n  Component['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Component.propTypes,\n    direction: requireProp('container'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container')\n  };\n}\nexport default Grid2;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/leaderboards\",\n      function () {\n        return require(\"private-next-pages/leaderboards.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/leaderboards\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, useMediaQuery } from '@mui/material';\nimport { prefix } from '@utility/helpers';\nimport Box from '@mui/material/Box';\nimport { useRouter } from 'next/router';\nconst Tabber = ({\n  tabs,\n  components,\n  icons,\n  children,\n  onTabChange,\n  forceScroll,\n  orientation = 'horizontal',\n  iconsOnly,\n  queryKey = 't',\n  clearOnChange = [],\n  disableQuery = false\n}) => {\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const router = useRouter();\n\n  // State for managing active tab if `disableQuery` is enabled\n  const [activeTab, setActiveTab] = useState(0);\n  const queryValue = router.query[queryKey];\n  const activeTabIndex = tabs.findIndex(tab => tab === queryValue);\n  const selectedTab = disableQuery ? activeTab : activeTabIndex >= 0 ? activeTabIndex : 0;\n  useEffect(() => {\n    if (!disableQuery) {\n      // Set the default query parameter if missing\n      if (!queryValue) {\n        router.replace({\n          pathname: router.pathname,\n          query: {\n            ...router.query,\n            [queryKey]: tabs[selectedTab]\n          }\n        }, undefined, {\n          shallow: true\n        });\n      }\n    }\n  }, [queryValue, queryKey, tabs, selectedTab, router, disableQuery]);\n  const handleOnClick = (e, selected) => {\n    if (disableQuery) {\n      setActiveTab(selected);\n    } else {\n      const newQuery = {\n        ...router.query,\n        [queryKey]: tabs[selected]\n      };\n      // Remove specified query parameters\n      clearOnChange.forEach(key => delete newQuery[key]);\n      router.push({\n        pathname: router.pathname,\n        query: newQuery\n      }, undefined, {\n        shallow: true\n      });\n    }\n    onTabChange && onTabChange(selected);\n  };\n  const array = Array.isArray(children) ? children : [children];\n  return <Box sx={orientation === 'vertical' ? {\n    flexGrow: 1,\n    display: 'flex'\n  } : {}} data-sentry-element=\"Box\" data-sentry-component=\"Tabber\" data-sentry-source-file=\"Tabber.jsx\">\n    <Tabs centered={!isMd || isMd && tabs.length < 4} scrollButtons allowScrollButtonsMobile sx={{\n      marginBottom: 3\n    }} variant={isMd && tabs.length >= 4 || forceScroll ? 'scrollable' : 'standard'} value={selectedTab} onChange={handleOnClick} data-sentry-element=\"Tabs\" data-sentry-source-file=\"Tabber.jsx\">\n      {(components ?? tabs)?.map((tab, index) => {\n        return <Tab iconPosition=\"start\" icon={icons?.[index] ? <img src={`${prefix}${icons?.[index]}.png`} /> : null} wrapped label={iconsOnly ? '' : tab} sx={{\n          minWidth: 62\n        }} key={`${tab?.[index]}-${index}`} />;\n      })}\n    </Tabs>\n    {onTabChange ? children : array?.map((child, index) => {\n      return index === selectedTab ? child : null;\n    })}\n  </Box>;\n};\nexport default Tabber;","import React from 'react';\nimport { Link, List, ListItem, ListItemText, Paper, Stack, Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid2';\nimport { notateNumber, prefix } from '../utility/helpers';\nimport Box from '@mui/material/Box';\nimport styled from '@emotion/styled'; // Grid version 2\n\nconst HIGHLIGHTED_OUTLINED_COLOR = '#007E85';\nconst SECONDARY_HIGHLIGHTED_OUTLINED_COLOR = '#cd861b';\nconst HIGHLIGHTED_BG_COLOR = '#12141c';\nconst CARD_BASE_HEIGHT = 125;\nconst specialNotation = (sectionName, value) => {\n  if (sectionName === 'bits') {\n    return notateNumber(value, 'bits');\n  } else if (sectionName === 'dropRate') {\n    return notateNumber(value, 'MultiplierInfo');\n  }\n  return notateNumber(value);\n};\nconst LeaderboardSection = ({\n  leaderboards,\n  loggedMainChar,\n  searchedChar\n}) => {\n  return <Grid sx={{\n    width: '100%',\n    margin: '0 auto'\n  }} justifySelf={'center'} container rowSpacing={3} columnSpacing={{\n    lg: 4,\n    xl: 12\n  }} data-sentry-element=\"Grid\" data-sentry-component=\"LeaderboardSection\" data-sentry-source-file=\"Leaderboard.jsx\">\n      {Object.entries(leaderboards || {}).map(([sectionName, list], sectionIndex) => {\n      const positions = {};\n      const players = list.map((entry, index) => {\n        const char = entry.mainChar;\n        const isLoggedMainChar = char === loggedMainChar;\n        const isSearchedChar = char === searchedChar;\n        if ((isLoggedMainChar || isSearchedChar) && index >= 10) {\n          positions[char] = index + 1;\n        }\n        return {\n          ...entry,\n          ...(isLoggedMainChar && {\n            loggedMainChar: true\n          }),\n          ...(isSearchedChar && {\n            searchedChar: true\n          }),\n          index: index + 1\n        };\n      });\n      const additional = Object.entries(positions)?.map(([name, position]) => {\n        const entry = list?.find(entry => entry?.mainChar === name);\n        const key = entry.mainChar === loggedMainChar ? 'loggedMainChar' : 'searchedChar';\n        return {\n          ...entry,\n          [key]: true,\n          index: position\n        };\n      }, []);\n      const topThree = players?.toSpliced(3);\n      const rest = players?.slice(3, 10).concat(additional);\n      const isEmpty = list?.length === 0;\n      return <Grid key={`${sectionName}-${sectionIndex}`} size={{\n        xs: 12,\n        lg: 6,\n        xl: 4\n      }}>\n            <Typography textAlign={'center'} variant={'h4'} mt={{\n          xs: 3,\n          lg: 0\n        }} mb={{\n          xs: 3,\n          lg: 1\n        }}>{sectionName.camelToTitleCase()}</Typography>\n            {!isEmpty ? <>\n              <TopThree sectionName={sectionName} topThree={topThree} />\n              <List>\n                {rest.map((entry, index) => {\n              const value = entry?.[sectionName] || 0;\n              return <ListItem sx={{\n                mb: entry?.loggedMainChar || entry?.searchedChar ? .8 : 0,\n                backgroundColor: entry?.loggedMainChar || entry?.searchedChar ? HIGHLIGHTED_BG_COLOR : '#1a1d2a',\n                outline: entry?.loggedMainChar || entry?.searchedChar ? '2px solid' : 'none',\n                outlineColor: entry?.loggedMainChar ? HIGHLIGHTED_OUTLINED_COLOR : entry?.searchedChar ? SECONDARY_HIGHLIGHTED_OUTLINED_COLOR : ''\n              }} secondaryAction={<Typography>{specialNotation(sectionName, value)}</Typography>} key={`${sectionName}-${index}`}>\n                    <ListItemText><PositionCircle inline sx={{\n                    mr: 2\n                  }}>{entry?.index ? entry?.index : index + 4}</PositionCircle> <Link color={'inherit'} underline={'hover'} target={'_blank'} href={`https://idleontoolbox.com?profile=${entry?.mainChar}`}>{entry?.mainChar}</Link></ListItemText>\n                  </ListItem>;\n            })}\n              </List>\n            </> : <>\n              <Typography textAlign={'center'} mt={5} variant={'h6'}>Nothing here yet</Typography>\n            </>}\n          </Grid>;\n    })}\n    </Grid>;\n};\nconst TopThree = ({\n  sectionName,\n  topThree\n}) => {\n  return <Grid container spacing={4} data-sentry-element=\"Grid\" data-sentry-component=\"TopThree\" data-sentry-source-file=\"Leaderboard.jsx\">\n      {topThree.map((entry, index) => {\n      const order = index === 0 ? 2 : index === 1 ? 1 : 3;\n      const height = index === 0 ? CARD_BASE_HEIGHT : index === 1 ? CARD_BASE_HEIGHT - 10 : CARD_BASE_HEIGHT - 20;\n      const img = index === 0 ? 'data/Trophie.png' : index === 1 ? 'data/G2icon40.png' : 'data/G2icon39.png';\n      const value = entry?.[sectionName] || 0;\n      return <Grid order={order} alignSelf={'flex-end'} key={`top-three-${sectionName}-${entry?.mainChar}`} size={topThree?.length === 1 ? 12 : 4}>\n            <Wrapper height={height}>\n              <Stack sx={{\n            height: '100%'\n          }} gap={1} alignItems={'center'} justifyContent={'center'} direction={'row'}>\n                <Typography>{index + 1}</Typography>\n                <Box sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}>\n                  <img width={index === 2 ? 20 : 24} height={index === 2 ? 20 : 24} style={{\n                objectFit: 'contain'\n              }} src={`${prefix}${img}`} alt={''} />\n                </Box>\n              </Stack>\n              <TextWrapper loggedMainChar={entry?.loggedMainChar} searchedChar={entry?.searchedChar}>\n                <Stack justifyContent={'center'}>\n                  <Typography textAlign={'center'} sx={{\n                mt: 'auto'\n              }}>\n                    <Link color={'inherit'} underline={'hover'} target={'_blank'} href={`https://idleontoolbox.com?profile=${entry?.mainChar}`}>{entry?.mainChar}</Link>\n                  </Typography>\n                  <Typography textAlign={'center'}>{specialNotation(sectionName, value)}</Typography>\n                </Stack>\n              </TextWrapper>\n            </Wrapper>\n          </Grid>;\n    })}\n    </Grid>;\n};\nconst PositionCircle = styled(Box, {\n  shouldForwardProp: prop => prop !== 'inline'\n})`\n  display: ${({\n  inline\n}) => inline ? 'inline-flex' : 'flex'};\n  align-items: center;\n  justify-content: center;\n  background-color: ${({\n  bgColor\n}) => bgColor ? bgColor : '#ffffff21'};\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n`;\nconst Wrapper = styled(Paper, {\n  shouldForwardProp: prop => prop !== 'bgColor' && prop !== 'order' && prop !== 'inline'\n})`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border-radius: 12px;\n  box-shadow: none;\n  height: ${({\n  height\n}) => height}px;\n  order: ${({\n  order\n}) => order};\n`;\nconst TextWrapper = styled(Paper, {\n  shouldForwardProp: prop => prop !== 'searchedChar' && prop !== 'loggedMainChar'\n})`\n  display: flex;\n  padding: 8px;\n  margin: auto auto 0 auto;\n  justify-content: center;\n  border-radius: 12px 12px 0 0;\n  box-shadow: none;\n  width: 100%;\n  background-color: ${({\n  outline\n}) => outline ? HIGHLIGHTED_BG_COLOR : '#161826'};\n  outline: ${({\n  loggedMainChar,\n  searchedChar\n}) => loggedMainChar || searchedChar ? '3px solid' : 'none'};\n  outline-color: ${({\n  loggedMainChar,\n  searchedChar\n}) => loggedMainChar ? HIGHLIGHTED_OUTLINED_COLOR : searchedChar ? SECONDARY_HIGHLIGHTED_OUTLINED_COLOR : ''}\n`;\nexport default LeaderboardSection;","import { Autocomplete, Card, CardContent, CircularProgress, createFilterOptions, Stack, TextField, Typography } from '@mui/material';\nimport Tabber from '../components/common/Tabber';\nimport LeaderboardSection from '../components/Leaderboard';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '@components/common/context/AppProvider';\nimport { NextSeo } from 'next-seo';\nimport { fetchLeaderboard } from '../services/profiles';\nimport Box from '@mui/material/Box';\nconst filterOptions = createFilterOptions({\n  trim: true,\n  limit: 50\n});\nconst tabs = ['general', 'tasks', 'skills', 'character', 'misc'];\nconst Leaderboards = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const loggedMainChar = state?.characters?.[0]?.name;\n  const [leaderboards, setLeaderboards] = useState(null);\n  const [error, setError] = React.useState('');\n  const [searchedChar, setSearchChar] = useState('');\n  const [selectedTab, setSelectedTab] = useState('general');\n  useEffect(() => {\n    const getLeaderboards = async () => {\n      try {\n        const tempLeaderboards = await fetchLeaderboard(selectedTab);\n        setLeaderboards(tempLeaderboards);\n        setError('');\n      } catch (e) {\n        setError('Error has occurred while getting leaderboards');\n      }\n    };\n    getLeaderboards();\n  }, [selectedTab]);\n  return <>\n    <NextSeo title=\"Leaderboards | Idleon Toolbox\" description=\"Leaderboards for Idleon MMO\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"leaderboards.jsx\" />\n    <Typography textAlign={'center'} variant={'h2'} data-sentry-element=\"Typography\" data-sentry-source-file=\"leaderboards.jsx\">Leaderboards</Typography>\n    <Typography textAlign={'center'} sx={{\n      fontSize: 14\n    }} component={'div'} variant={'caption'} data-sentry-element=\"Typography\" data-sentry-source-file=\"leaderboards.jsx\">* To participate\n      in the\n      leaderboards, please upload your profile with leaderboard consent.</Typography>\n    <Typography mb={3} textAlign={'center'} sx={{\n      fontSize: 14\n    }} component={'div'} variant={'caption'} data-sentry-element=\"Typography\" data-sentry-source-file=\"leaderboards.jsx\">* Leaderboards\n      contains the top 100 players of each category</Typography>\n    {leaderboards?.totalUsers ? <Card variant={'outlined'} sx={{\n      width: 'fit-content',\n      margin: '16px auto',\n      borderColor: 'success.light'\n    }}>\n      <CardContent sx={{\n        '&:last-child': {\n          p: 1\n        }\n      }}>\n        <Typography textAlign={'center'} sx={{\n          fontSize: 14\n        }} component={'div'} variant={'caption'}>Uploaded\n          accounts: {leaderboards?.totalUsers}</Typography>\n      </CardContent>\n    </Card> : null}\n    {leaderboards?.totalUsers ? <Box sx={{\n      width: 'fit-content',\n      margin: '16px auto',\n      border: 'none'\n    }}>\n      <Autocomplete options={Object.values(leaderboards?.[selectedTab] || {})?.[0] || []} getOptionLabel={option => option.mainChar} id=\"user-search\" filterOptions={filterOptions} sx={{\n        width: 230\n      }} value={searchedChar || null} onChange={(event, newValue) => setSearchChar(newValue)} renderInput={params => <TextField {...params} label=\"Search by character name\" variant=\"standard\" />} />\n    </Box> : null}\n    <Tabber tabs={['General', 'Tasks', 'Skills', 'Character', 'Misc']} onTabChange={selected => {\n      setSelectedTab(tabs?.[selected]);\n      setLeaderboards(null);\n      setError('');\n    }} data-sentry-element=\"Tabber\" data-sentry-source-file=\"leaderboards.jsx\">\n      <LeaderboardSection leaderboards={leaderboards?.general} loggedMainChar={loggedMainChar} searchedChar={searchedChar?.mainChar} data-sentry-element=\"LeaderboardSection\" data-sentry-source-file=\"leaderboards.jsx\" />\n      <LeaderboardSection leaderboards={leaderboards?.tasks} loggedMainChar={loggedMainChar} searchedChar={searchedChar?.mainChar} data-sentry-element=\"LeaderboardSection\" data-sentry-source-file=\"leaderboards.jsx\" />\n      <LeaderboardSection leaderboards={leaderboards?.skills} loggedMainChar={loggedMainChar} searchedChar={searchedChar?.mainChar} data-sentry-element=\"LeaderboardSection\" data-sentry-source-file=\"leaderboards.jsx\" />\n      <LeaderboardSection leaderboards={leaderboards?.character} loggedMainChar={loggedMainChar} searchedChar={searchedChar?.mainChar} data-sentry-element=\"LeaderboardSection\" data-sentry-source-file=\"leaderboards.jsx\" />\n      <LeaderboardSection leaderboards={leaderboards?.misc} loggedMainChar={loggedMainChar} searchedChar={searchedChar?.mainChar} data-sentry-element=\"LeaderboardSection\" data-sentry-source-file=\"leaderboards.jsx\" />\n    </Tabber>\n    {!leaderboards && !error ? <Stack alignItems={'center'} justifyContent={'center'} mt={3}><CircularProgress /></Stack> : error ? <Typography color={'error.light'} textAlign={'center'} variant={'h6'}>{error}</Typography> : null}\n  </>;\n};\nexport default Leaderboards;"],"names":["filterBreakpointKeys","breakpointsKeys","responsiveKeys","filter","key","includes","traverseBreakpoints","breakpoints","responsive","iterator","smallestBreakpoint","keys","Array","isArray","forEach","breakpointValue","index","responsiveStyles","style","length","Object","assign","up","undefined","getSelfSpacingVar","axis","getParentSpacingVar","selfColumnsVar","parentColumnsVar","generateGridSizeStyles","theme","ownerState","styles","size","appendStyle","value","flexBasis","flexGrow","maxWidth","flexShrink","width","generateGridOffsetStyles","offset","marginLeft","generateGridColumnsStyles","container","columns","generateGridRowSpacingStyles","rowSpacing","spacing","generateGridColumnSpacingStyles","columnSpacing","generateGridDirectionStyles","direction","flexDirection","generateGridStyles","minWidth","boxSizing","display","flexWrap","wrap","gap","generateSizeClassNames","classNames","entries","push","String","generateSpacingClassNames","isValidSpacing","val","Number","isNaN","generateDirectionClasses","map","defaultTheme","createTheme","Z","defaultCreateStyledComponent","styled","name","slot","overridesResolver","props","root","useThemePropsDefault","useThemeProps","createGrid","options","createStyledComponent","useTheme","useTheme_useTheme","componentName","useUtilityClasses","slots","composeClasses","generateUtilityClass","ZP","parseResponsiveProp","propValue","shouldUseValue","parsedProp","GridRoot","Grid","react","forwardRef","inProps","ref","themeProps","extendSxProp","className","children","columnsProp","component","sizeProp","offsetProp","spacingProp","rowSpacingProp","columnSpacingProp","unstable_level","level","other","classes","jsx_runtime","jsx","as","clsx","Children","child","isValidElement","isMuiElement","cloneElement","muiName","Grid2","styles_styled","DefaultPropsProvider","i","Grid2_Grid2","window","__NEXT_P","__webpack_require__","__webpack_exports__","components","tabs","icons","onTabChange","forceScroll","orientation","iconsOnly","queryKey","clearOnChange","disableQuery","param","isMd","useMediaQuery","down","noSsr","router","useRouter","activeTab","setActiveTab","useState","queryValue","query","activeTabIndex","findIndex","tab","selectedTab","useEffect","replace","pathname","shallow","array","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Box","sx","data-sentry-element","data-sentry-component","data-sentry-source-file","Tabs","centered","scrollButtons","allowScrollButtonsMobile","marginBottom","variant","onChange","e","selected","newQuery","_this","Tab","iconPosition","icon","img","src","concat","prefix","wrapped","label","HIGHLIGHTED_OUTLINED_COLOR","SECONDARY_HIGHLIGHTED_OUTLINED_COLOR","HIGHLIGHTED_BG_COLOR","specialNotation","sectionName","notateNumber","TopThree","topThree","entry","order","alignSelf","Wrapper","height","CARD_BASE_HEIGHT","Stack","alignItems","justifyContent","Typography","objectFit","alt","TextWrapper","loggedMainChar","searchedChar","textAlign","mt","Link","color","underline","target","href","mainChar","PositionCircle","shouldForwardProp","prop","_templateObject","inline","bgColor","Paper","_templateObject1","_templateObject2","outline","Leaderboard","leaderboards","margin","justifySelf","lg","xl","sectionIndex","list","positions","players","char","isLoggedMainChar","isSearchedChar","additional","position","find","toSpliced","rest","slice","isEmpty","xs","mb","camelToTitleCase","Fragment","List","ListItem","backgroundColor","outlineColor","secondaryAction","ListItemText","mr","filterOptions","createFilterOptions","trim","limit","state","useContext","AppContext","characters","setLeaderboards","error","setError","React","setSearchChar","setSelectedTab","getLeaderboards","tempLeaderboards","fetchLeaderboard","NextSeo","title","description","fontSize","totalUsers","Card","borderColor","CardContent","p","border","Autocomplete","values","getOptionLabel","option","id","event","newValue","renderInput","params","TextField","Tabber","LeaderboardSection","general","tasks","skills","character","misc","CircularProgress"],"sourceRoot":""}