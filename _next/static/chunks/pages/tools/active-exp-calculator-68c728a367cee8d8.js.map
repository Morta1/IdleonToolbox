{"version":3,"file":"static/chunks/pages/tools/active-exp-calculator-68c728a367cee8d8.js","mappings":"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","sources":["webpack://_N_E/?8129","webpack://_N_E/./node_modules/@mui/icons-material/esm/PlayCircleOutline.js","webpack://_N_E/./node_modules/react-countdown-circle-timer/lib/index.module.js","webpack://_N_E/./pages/tools/active-exp-calculator.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tools/active-exp-calculator\",\n      function () {\n        return require(\"private-next-pages/tools/active-exp-calculator.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tools/active-exp-calculator\"])\n      });\n    }\n  ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m10 16.5 6-4.5-6-4.5zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'PlayCircleOutline');","import S from\"react\";import{useRef as U}from\"react\";import{useState as E,useRef as C,useCallback as q}from\"react\";import{useEffect as M,useLayoutEffect as L}from\"react\";var v=typeof window==\"undefined\"?M:L,I=({isPlaying:o,duration:t,startAt:n=0,updateInterval:e=0,onComplete:s,onUpdate:r})=>{let[i,m]=E(n),l=C(0),p=C(n),d=C(n*-1e3),u=C(null),c=C(null),w=C(null),h=f=>{let a=f/1e3;if(c.current===null){c.current=a,u.current=requestAnimationFrame(h);return}let R=a-c.current,g=l.current+R;c.current=a,l.current=g;let k=p.current+(e===0?g:(g/e|0)*e),D=p.current+g,B=typeof t==\"number\"&&D>=t;m(B?t:k),B||(u.current=requestAnimationFrame(h))},y=()=>{u.current&&cancelAnimationFrame(u.current),w.current&&clearTimeout(w.current),c.current=null},b=q(f=>{y(),l.current=0;let a=typeof f==\"number\"?f:n;p.current=a,m(a),o&&(u.current=requestAnimationFrame(h))},[o,n]);return v(()=>{if(r==null||r(i),t&&i>=t){d.current+=t*1e3;let{shouldRepeat:f=!1,delay:a=0,newStartAt:R}=(s==null?void 0:s(d.current/1e3))||{};f&&(w.current=setTimeout(()=>b(R),a*1e3))}},[i,t]),v(()=>(o&&(u.current=requestAnimationFrame(h)),y),[o,t,e]),{elapsedTime:i,reset:b}};var A=(o,t,n)=>{let e=o/2,s=t/2,r=e-s,i=2*r,m=n===\"clockwise\"?\"1,0\":\"0,1\",l=2*Math.PI*r;return{path:`m ${e},${s} a ${r},${r} 0 ${m} 0,${i} a ${r},${r} 0 ${m} 0,-${i}`,pathLength:l}},$=(o,t)=>o===0||o===t?0:typeof t==\"number\"?o-t:0,T=o=>({position:\"relative\",width:o,height:o}),P={display:\"flex\",justifyContent:\"center\",alignItems:\"center\",position:\"absolute\",left:0,top:0,width:\"100%\",height:\"100%\"};var G=(o,t,n,e)=>{if(e===0)return t;let s=o/e;return t+n*s},F=o=>{var t,n;return(n=(t=o.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,(e,s,r,i)=>`#${s}${s}${r}${r}${i}${i}`).substring(1).match(/.{2}/g))==null?void 0:t.map(e=>parseInt(e,16)))!=null?n:[]},j=(o,t)=>{var d;let{colors:n,colorsTime:e,isSmoothColorTransition:s=!0}=o;if(typeof n==\"string\")return n;let r=(d=e==null?void 0:e.findIndex((u,c)=>u>=t&&t>=e[c+1]))!=null?d:-1;if(!e||r===-1)return n[0];if(!s)return n[r];let i=e[r]-t,m=e[r]-e[r+1],l=F(n[r]),p=F(n[r+1]);return`rgb(${l.map((u,c)=>G(i,u,p[c]-u,m)|0).join(\",\")})`},x=o=>{let{duration:t,initialRemainingTime:n,updateInterval:e,size:s=180,strokeWidth:r=12,trailStrokeWidth:i,isPlaying:m=!1,rotation:l=\"clockwise\",onComplete:p,onUpdate:d}=o,u=U(),c=Math.max(r,i!=null?i:0),{path:w,pathLength:h}=A(s,c,l),{elapsedTime:y}=I({isPlaying:m,duration:t,startAt:$(t,n),updateInterval:e,onUpdate:typeof d==\"function\"?f=>{let a=Math.ceil(t-f);a!==u.current&&(u.current=a,d(a))}:void 0,onComplete:typeof p==\"function\"?f=>{var k;let{shouldRepeat:a,delay:R,newInitialRemainingTime:g}=(k=p(f))!=null?k:{};if(a)return{shouldRepeat:a,delay:R,newStartAt:$(t,g)}}:void 0}),b=t-y;return{elapsedTime:y,path:w,pathLength:h,remainingTime:Math.ceil(b),rotation:l,size:s,stroke:j(o,b),strokeDashoffset:G(y,0,h,t),strokeWidth:r}};var W=o=>{let{children:t,strokeLinecap:n,trailColor:e,trailStrokeWidth:s}=o,{path:r,pathLength:i,stroke:m,strokeDashoffset:l,remainingTime:p,elapsedTime:d,size:u,strokeWidth:c}=x(o);return S.createElement(\"div\",{style:T(u)},S.createElement(\"svg\",{width:u,height:u,xmlns:\"http://www.w3.org/2000/svg\"},S.createElement(\"path\",{d:r,fill:\"none\",stroke:e!=null?e:\"#d9d9d9\",strokeWidth:s!=null?s:c}),S.createElement(\"path\",{d:r,fill:\"none\",stroke:m,strokeLinecap:n!=null?n:\"round\",strokeWidth:c,strokeDasharray:i,strokeDashoffset:l})),typeof t==\"function\"&&S.createElement(\"div\",{style:P},t({remainingTime:p,elapsedTime:d,color:m})))};W.displayName=\"CountdownCircleTimer\";export{W as CountdownCircleTimer,x as useCountdown};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { kFormatter, prefix, splitTime } from '@utility/helpers';\nimport styled from '@emotion/styled';\nimport { Stack, TextField, Typography } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport IconButton from '@mui/material/IconButton';\nimport { AppContext } from 'components/common/context/AppProvider';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport { NextSeo } from 'next-seo';\nimport Box from '@mui/material/Box';\nconst getExpToLevel = (character, targetLevel) => {\n  let exp = 0;\n  for (let i = character?.level; i < targetLevel; i++) {\n    exp += (15 + Math.pow(i, 1.9) + 11 * i) * Math.pow(1.208 - Math.min(0.164, 0.215 * i / (i + 100)), i) - 15;\n  }\n  exp -= character?.exp;\n  return exp;\n};\nconst countdown = 10;\nconst ActiveXpCalculator = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [charactersList, setCharactersList] = useState([]);\n  const [selectedChar, setSelectedChar] = useState(null);\n  const [endExp, setEndExp] = useState(0);\n  const [startExp, setStartExp] = useState(0);\n  const [goalLevel, setGoalLevel] = useState(0);\n  const [targetExp, setTargetExp] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [start, setStart] = useState(0);\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    const chars = state?.characters?.map(({\n      name,\n      skillsInfo,\n      classIndex\n    }) => ({\n      name,\n      classIndex,\n      ...skillsInfo?.character\n    }));\n    const selected = chars?.[0];\n    setSelectedChar(selected);\n    setStartExp((selected?.exp / selected?.expReq * 100).toFixed(2));\n    setEndExp((selected?.exp / selected?.expReq * 100).toFixed(2));\n    setGoalLevel(selectedChar?.level + 1);\n    setTargetExp(getExpToLevel(selected, goalLevel));\n    setCharactersList(chars);\n  }, []);\n  useEffect(() => {\n    if (selectedChar) {\n      setGoalLevel(selectedChar?.level + 1);\n    }\n  }, [selectedChar]);\n  useEffect(() => {\n    setStartExp((selectedChar?.exp / selectedChar?.expReq * 100).toFixed(2));\n    setEndExp((selectedChar?.exp / selectedChar?.expReq * 100).toFixed(2));\n    if (selectedChar) {\n      setTargetExp(getExpToLevel(selectedChar, goalLevel));\n    }\n    setResult(null);\n  }, [selectedChar, goalLevel]);\n  const calcTimeToLevelUp = (startExp, endPercentage) => {\n    const rawStartExp = targetExp * (parseInt(parseFloat(startExp).toFixed(2).replace('.', '')) / 10000);\n    const currentExp = targetExp * (parseInt(parseFloat(endPercentage).toFixed(2).replace('.', '')) / 10000);\n    const expNeeded = targetExp;\n    const expFarmed = currentExp - rawStartExp;\n    const expPerMinute = expFarmed / countdown;\n    const timeLeft = expNeeded / expPerMinute / 60;\n    return {\n      expFarmed,\n      expPerMinute,\n      expPerHour: expPerMinute * 60,\n      timeLeft: splitTime(timeLeft)\n    };\n  };\n  const renderTime = ({\n    remainingTime\n  }) => {\n    if (remainingTime === 0) {\n      return <div className=\"timer\">Done!</div>;\n    }\n    return <div className=\"timer\" data-sentry-component=\"renderTime\" data-sentry-source-file=\"active-exp-calculator.jsx\">\n        <div className=\"text\">Remaining</div>\n        <div className=\"value\">{remainingTime}</div>\n        <div className=\"text\">seconds</div>\n      </div>;\n  };\n  const onEndPercentageChange = value => {\n    setEndExp(value);\n    const res = calcTimeToLevelUp(startExp, value);\n    setResult(res?.expFarmed > 0 ? res : null);\n    if (res?.expFarmed > 0) {\n      setResult(res);\n    }\n  };\n  const onStartPercentageChange = value => {\n    setStartExp(value);\n    const res = calcTimeToLevelUp(value, endExp);\n    setResult(res?.expFarmed > 0 ? res : null);\n    if (res?.expFarmed > 0) {\n      setResult(res);\n    }\n  };\n  const onStart = () => {\n    setResult(null);\n    if (isPlaying) {\n      setStart(start => start + 1);\n    } else {\n      setIsPlaying(true);\n    }\n  };\n  return <ActiveXpCalculatorStyle data-sentry-element=\"ActiveXpCalculatorStyle\" data-sentry-component=\"ActiveXpCalculator\" data-sentry-source-file=\"active-exp-calculator.jsx\">\n      <NextSeo title=\"Active Exp Calculator | Idleon Toolbox\" description=\"Calculate how much experience you get when playing actively\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"active-exp-calculator.jsx\" />\n      {selectedChar ? <Stack gap={5} flexWrap={'wrap'} sx={{\n      flexDirection: {\n        xs: 'column-reverse',\n        sm: 'row'\n      }\n    }}>\n        <div className={'character-wrapper'}>\n          <Stack direction={'row'} alignItems={'center'} flexWrap={'wrap'}>\n            <StyledTextField id=\"select\" label=\"Character\" value={selectedChar || {}} onChange={e => setSelectedChar(e.target.value)} select>\n              {charactersList?.map((character, index) => {\n              return <StyledMenuItem key={character?.name + index} value={character}>\n                  <img src={`${prefix}data/ClassIcons${character?.classIndex}.png`} alt=\"\" />\n                  {character?.name}\n                </StyledMenuItem>;\n            })}\n            </StyledTextField>\n            <IconButton aria-label=\"start\" onClick={onStart}>\n              <PlayCircleOutlineIcon />\n            </IconButton>\n          </Stack>\n          <StyledTextField label={'Start Percentage'} value={startExp || 0} type={'number'} onChange={e => onStartPercentageChange(e.target.value)} />\n          <StyledTextField label={'End Percentage'} value={endExp || 0} type={'number'} onChange={e => onEndPercentageChange(e.target.value)} />\n          <StyledTextField label={'Goal Level'} value={goalLevel || 0} type={'number'} helperText={`Remaining exp to level: ${kFormatter(targetExp)}`} inputProps={{\n          min: selectedChar?.level + 1 || 0\n        }} onChange={e => setGoalLevel(e.target.value)} />\n          <div className={'details'}>\n            <div>Level: {selectedChar?.level}</div>\n            <div>Exp: {kFormatter(selectedChar?.exp)} / {kFormatter(selectedChar?.expReq)} ({(selectedChar?.exp / selectedChar?.expReq * 100).toFixed(2)}%)</div>\n            {result ? <div>\n              <h3>Results</h3>\n              <div>Exp farmed: {kFormatter(result?.expFarmed)}</div>\n              <div>Exp per minute: {kFormatter(result?.expPerMinute)}</div>\n              <div>Exp per hour: {kFormatter(result?.expPerHour)}</div>\n              <div>Time to lv up: {result?.timeLeft}</div>\n            </div> : null}\n          </div>\n        </div>\n        <CountdownCircleTimer key={start} isPlaying={isPlaying} duration={600} colors={[['#15aee1']]}>\n          {renderTime}\n        </CountdownCircleTimer>\n        <Box sx={{\n        width: 200\n      }}>\n          <Typography variant={'caption'}>* Start a 10-minute timer. After the timer ends, you will receive a result\n            indicating the progress you've made towards reaching your goal level</Typography>\n        </Box>\n      </Stack> : null}\n    </ActiveXpCalculatorStyle>;\n};\nconst StyledTextField = styled(TextField)`\n  && {\n    width: 230px;\n\n    .MuiSelect-select {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n    }\n\n    label.Mui-focused {\n      color: rgba(255, 255, 255, 0.7);\n    }\n  }\n`;\nconst StyledMenuItem = styled(MenuItem)`\n  && {\n    display: flex;\n    gap: 15px\n  }\n`;\nconst ActiveXpCalculatorStyle = styled.div`\n  .selection {\n    display: flex;\n    align-items: baseline;\n    gap: 15px;\n  }\n\n\n  .wrapper {\n    display: flex;\n    gap: 50px;\n  }\n\n  .character-wrapper {\n    margin-top: 30px;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n\n  .timer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n  }\n\n  .text {\n    color: white;\n  }\n\n  .value {\n    font-size: 40px;\n  }\n\n  .info {\n    max-width: 360px;\n    margin: 40px auto 0;\n    text-align: center;\n    font-size: 16px;\n  }\n`;\nexport default ActiveXpCalculator;"],"names":["window","__NEXT_P","push","__webpack_require__","PlayCircleOutline","createSvgIcon","Z","jsx_runtime","jsx","d","v","react","useEffect","useLayoutEffect","I","isPlaying","o","duration","t","startAt","n","updateInterval","e","onComplete","s","onUpdate","r","i","m","useState","l","useRef","p","u","c","w","h","f","a","current","requestAnimationFrame","R","g","k","D","B","y","cancelAnimationFrame","clearTimeout","b","useCallback","shouldRepeat","delay","newStartAt","setTimeout","elapsedTime","reset","A","path","pathLength","Math","PI","$","T","position","width","height","P","display","justifyContent","alignItems","left","top","G","F","replace","substring","match","map","parseInt","j","colors","colorsTime","isSmoothColorTransition","findIndex","join","x","initialRemainingTime","size","strokeWidth","trailStrokeWidth","rotation","max","ceil","newInitialRemainingTime","remainingTime","stroke","strokeDashoffset","W","children","strokeLinecap","trailColor","createElement","style","xmlns","fill","strokeDasharray","color","displayName","getExpToLevel","character","targetLevel","exp","level","pow","min","StyledTextField","styled","TextField","StyledMenuItem","MenuItem","ActiveXpCalculatorStyle","div","_templateObject2","active_exp_calculator","state","useContext","AppContext","charactersList","setCharactersList","selectedChar","setSelectedChar","endExp","setEndExp","startExp","setStartExp","goalLevel","setGoalLevel","targetExp","setTargetExp","setIsPlaying","start","setStart","result","setResult","chars","characters","name","skillsInfo","classIndex","param","selected","expReq","toFixed","calcTimeToLevelUp","endPercentage","rawStartExp","parseFloat","currentExp","expFarmed","expPerMinute","timeLeft","expNeeded","expPerHour","splitTime","onEndPercentageChange","value","res","onStartPercentageChange","jsxs","data-sentry-element","data-sentry-component","data-sentry-source-file","NextSeo","title","description","Stack","gap","flexWrap","sx","flexDirection","xs","sm","className","direction","id","label","onChange","target","select","index","img","src","concat","prefix","alt","IconButton","aria-label","onClick","PlayCircleOutlineIcon","type","helperText","kFormatter","inputProps","h3","CountdownCircleTimer","Box","Typography","variant"],"sourceRoot":""}