{"version":3,"file":"static/chunks/pages/tools/guaranteed-drop-calculator-1e1d9d299fb3222a.js","mappings":"0aACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,oCACA,WACA,OAAeC,EAAQ,MACvB,EACA,wKCDA,IAAMC,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAoB,CACxCC,KAAM,GACNC,MAAO,GACT,EAyGAC,CAAAA,EAAA,QAxGiC,KAC/B,GAAM,CAACC,EAAOC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,MAC7BC,EAAQC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAAMC,OAAOC,MAAM,CAACC,EAAAA,YAAYA,EAAEC,IAAI,GAAGC,MAAM,CAACC,QAA2CA,QAAhCA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASC,OAAO,IAAK,QAAU,CAACD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAASC,OAAO,GAAhBD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBE,QAAQ,CAAC,iBAAkBF,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASG,MAAM,EAAG,IAAI,EAAE,EAChL,CAACP,EAAQQ,EAAU,CAAGZ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CACnCa,SAAU,GACVC,mBAAoB,GACpBC,eAAgB,EAClB,GACM,CAACC,EAAQC,EAAU,CAAGjB,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CAAC,GAChC,CAACkB,EAASC,EAAW,CAAGnB,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,EAAE,EACnCoB,aAAe,OAAC,CACpBC,OAAAA,CAAM,CACP,CAAAC,EACO,CACJC,KAAAA,CAAI,CACJzB,MAAAA,CAAK,CACN,CAAGuB,EACEG,EAAO1B,EAAM2B,OAAO,CAAC,KAAM,IACjCR,EAAUS,GAAS,EACjB,GAAGA,CAAI,CACP,CAACH,EAAK,CAAE,EACV,IACAX,EAAUc,GAAS,EACjB,GAAGA,CAAI,CACP,CAACH,EAAK,CAAEI,CAAAA,EAAAA,EAAAA,gBAAAA,EAAiBH,EAC3B,GACF,EAiCA,MAAO,GAAAI,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACL,GAAAF,EAAAC,IAAA,EAACE,EAAAA,CAAKA,CAAAA,CAACC,UAAW,MAAOC,IAAK,EAAGC,SAAU,OAAQC,WAAY,SAAUC,sBAAoB,QAAQC,0BAAwB,2CAC3H,GAAAT,EAAAU,GAAA,EAACC,EAAAA,CAAYA,CAAAA,CAACC,GAAG,YAAY1C,MAAOA,EAAO2C,SAAU,CAACC,EAAOC,KAC3D5C,EAAS4C,GACT1B,EAAU,CACR,GAAGD,CAAM,CACT4B,SAAU,EACZ,EACF,EAAGC,QAAS,IAAI5C,EAAM,CAAE6C,sBAAqB,GAACrD,cAAeA,EAAesD,eAAgBC,QAC7DA,EAA7B,MAAOA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQC,WAAW,EAAGD,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQC,WAAW,GAAnBD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBvB,OAAO,CAAC,KAAM,KAAO,EACzE,EAAGyB,GAAI,CACLC,MAAO,GACT,EAAGC,WAAY,CAACC,EAAKC,IACZD,EAAIE,GAAG,CAAC,CAACP,EAAQQ,SAA+HR,QAArH,GAAApB,EAAAU,GAAA,EAACmB,EAAAA,CAAIA,CAAAA,CAAaC,KAAM,GAAA9B,EAAAU,GAAA,EAACqB,MAAAA,CAAIR,MAAO,GAAIS,OAAQ,GAAIC,IAAK,GAAAC,MAAA,CAAGC,EAAAA,MAAMA,CAAC,SAAuBD,MAAA,CAAhBd,MAAAA,EAAAA,KAAAA,EAAAA,EAAQvC,OAAO,CAAC,QAAOuD,IAAK,KAAQC,MAAOjB,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQC,WAAW,GAAnBD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBvB,OAAO,CAAC,KAAM,KAAO,GAAG6B,EAAY,CAC9ME,MAAAA,CACF,EAAE,EAF2CA,KAG5CU,aAAc,CAACC,EAAOnB,SAOuBA,SAN9C,EACO,GAAAoB,EAAAC,aAAA,EAACtC,EAAAA,CAAKA,CAAAA,CAAE,GAAGoC,CAAK,CAAEG,IAAKH,EAAM3B,EAAE,CAAEU,GAAI,CAC1Cf,WAAY,uBACd,YACM,GAAAP,EAAAC,IAAA,EAACE,EAAAA,CAAKA,CAAAA,CAACC,UAAW,MAAOC,IAAK,YAC5B,GAAAL,EAAAU,GAAA,EAACqB,MAAAA,CAA4BR,MAAO,GAAIS,OAAQ,GAAIC,IAAK,GAAAC,MAAA,CAAGC,EAAAA,MAAMA,CAAC,SAAuBD,MAAA,CAAhBd,MAAAA,EAAAA,KAAAA,EAAAA,EAAQvC,OAAO,CAAC,QAAOuD,IAAI,IAA3F,OAAgBF,MAAA,CAATK,EAAM3B,EAAE,GACzB,GAAAZ,EAAAC,IAAA,EAAC0C,EAAAA,CAAUA,CAAAA,WAA2BvB,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQC,WAAW,GAAnBD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBvB,OAAO,CAAC,KAAM,KAAK,SACzE+C,KAAKC,IAAI,CAAC,EAAIzB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQrC,MAAM,GAAE,MADlB,QAAiBmD,MAAA,CAATK,EAAM3B,EAAE,MAGnC,GAAAZ,EAAAU,GAAA,EAACiC,EAAAA,CAAUA,CAAAA,CAACG,QAAS,mBAAYC,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB3B,MAAAA,EAAAA,KAAAA,EAAAA,EAAQ4B,kBAAkB,OAT7D,IAWtB,EAAGC,YAAaC,GAAU,GAAAlD,EAAAU,GAAA,EAACyC,EAAAA,CAASA,CAAAA,CAAE,GAAGD,CAAM,CAAEE,MAAOhE,MAAAA,EAAAA,KAAAA,EAAAA,EAAQ4B,QAAQ,CAAEqB,MAAM,gBAAgBS,QAAQ,aAAetC,sBAAoB,eAAeC,0BAAwB,mCAClL,GAAAT,EAAAU,GAAA,EAACyC,EAAAA,CAASA,CAAAA,CAACC,MAAOhE,MAAAA,EAAAA,KAAAA,EAAAA,EAAQH,QAAQ,CAAE4B,SAAUrB,aAAcG,KAAM,WAAYzB,MAAOM,EAAOS,QAAQ,CAAEoD,MAAO,YAAa7B,sBAAoB,YAAYC,0BAAwB,mCAClL,GAAAT,EAAAU,GAAA,EAACyC,EAAAA,CAASA,CAAAA,CAACC,MAAOhE,MAAAA,EAAAA,KAAAA,EAAAA,EAAQF,kBAAkB,CAAE2B,SAAUrB,aAAcG,KAAM,qBAAsBzB,MAAOM,EAAOU,kBAAkB,CAAEmD,MAAO,wBAAyB7B,sBAAoB,YAAYC,0BAAwB,mCAC5N,GAAAT,EAAAU,GAAA,EAACyC,EAAAA,CAASA,CAAAA,CAACC,MAAOhE,MAAAA,EAAAA,KAAAA,EAAAA,EAAQD,cAAc,CAAE0B,SAAUrB,aAAcG,KAAM,iBAAkBzB,MAAOM,EAAOW,cAAc,CAAEkD,MAAO,oBAAqB7B,sBAAoB,YAAYC,0BAAwB,mCAC5M,GAAAT,EAAAU,GAAA,EAAC2C,EAAAA,CAAMA,CAAAA,CAACP,QAAS,YAAaQ,QAhEf,SAKK9E,EACKA,EACAA,EAN3B,IAAM+E,EAAa,CAAC,EACfrF,GACHqF,CAAAA,EAAWvC,QAAQ,CAAG,IAExB,IAAMwC,EAAKC,WAAAA,OAAWjF,CAAAA,EAAAA,EAAOS,QAAQ,GAAfT,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBqB,OAAO,CAAC,KAAM,KAC/C6D,EAAUD,WAAAA,OAAWjF,CAAAA,EAAAA,EAAOU,kBAAkB,GAAzBV,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA2BqB,OAAO,CAAC,KAAM,KAC9D8D,EAAUF,WAAAA,OAAWjF,CAAAA,EAAAA,EAAOW,cAAc,GAArBX,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBqB,OAAO,CAAC,KAAM,KAUhE,GATI+D,CAAAA,MAAMJ,IAAOhF,KAAAA,EAAOS,QAAQ,GAC9BsE,CAAAA,EAAWtE,QAAQ,CAAG,IAEpB2E,CAAAA,MAAMF,IAAYlF,KAAAA,EAAOU,kBAAkB,GAC7CqE,CAAAA,EAAWrE,kBAAkB,CAAG,IAE9B0E,CAAAA,MAAMD,IAAYnF,KAAAA,EAAOW,cAAc,GACzCoE,CAAAA,EAAWpE,cAAc,CAAG,IAE1BoE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAYvC,QAAQ,GAAIuC,EAAWtE,QAAQ,EAAIsE,EAAWrE,kBAAkB,EAAIqE,EAAWpE,cAAc,CAAE,CAC7GE,EAAUkE,GACV,MACF,CAEA,IAAMM,EAAWC,KADEC,KAAK,CAACL,EAAW,GAAIC,EAAU,MACzBF,WAAWvF,MAAAA,EAAAA,KAAAA,EAAAA,EAAOa,MAAM,EAAIyE,EACrD,GAAI,CAACI,MAAMC,GAAW,CAEpB,IAAMG,EAAU,CAAC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAK,CACnEzE,EAAW0E,CAFU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,CAEzBtC,GAAG,CAAC,CAACuC,EAAYtC,IAAW,EACjDsC,WAAAA,EACAC,MAAOH,CAAO,CAACpC,EAAM,CAAGiC,CAC1B,IACF,CACF,EAiCuDrD,sBAAoB,SAASC,0BAAwB,0CAAiC,WAE3I,GAAAT,EAAAU,GAAA,EAACiC,EAAAA,CAAUA,CAAAA,CAACG,QAAS,UAAWtC,sBAAoB,aAAaC,0BAAwB,0CAAiC,uLACzHnB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS8E,MAAM,EAAG,EAAI,GAAApE,EAAAC,IAAA,EAACE,EAAAA,CAAKA,CAAAA,CAACkE,GAAI,YAChC,GAAArE,EAAAU,GAAA,EAACiC,EAAAA,CAAUA,CAAAA,CAACG,QAAS,cAAM,YAC1BxD,EAAQqC,GAAG,CAAC,OAAC,CACZuC,WAAAA,CAAU,CACVC,MAAAA,CAAK,CACN,CAAAzE,QAAK,GAAAM,EAAAU,GAAA,EAACP,EAAAA,CAAKA,CAAAA,UACV,GAAAH,EAAAC,IAAA,EAAC0C,EAAAA,CAAUA,CAAAA,WAAC,IAAEuB,EAAW,YAAUI,CAAAA,EAAAA,EAAAA,YAAAA,EAAaH,EAAO,kBAAkB,aADzD,UAAYD,EAEvB,MACE,KAAK,SACpB","sources":["webpack://_N_E/?9602","webpack://_N_E/./pages/tools/guaranteed-drop-calculator.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tools/guaranteed-drop-calculator\",\n      function () {\n        return require(\"private-next-pages/tools/guaranteed-drop-calculator.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tools/guaranteed-drop-calculator\"])\n      });\n    }\n  ","import { Autocomplete, Button, Chip, createFilterOptions, Stack, TextField, Typography } from '@mui/material';\nimport { notateNumber, numberWithCommas, prefix } from '@utility/helpers';\nimport React, { useMemo, useState } from 'react';\nimport { monsterDrops } from '../../data/website-data';\nimport { cleanUnderscore } from '../../utility/helpers';\nconst filterOptions = createFilterOptions({\n  trim: true,\n  limit: 250\n});\nconst GuaranteedDropCalculator = () => {\n  const [value, setValue] = useState(null);\n  const items = useMemo(() => Object.values(monsterDrops).flat().filter(monster => monster?.rawName !== 'COIN' && !monster?.rawName?.includes('DungCredits') && monster?.chance > 0), []);\n  const [values, setValues] = useState({\n    dropRate: '',\n    killsWithMultikill: '',\n    multiKillBonus: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [results, setResults] = useState([]);\n  const handleChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    const temp = value.replace(/,/g, '');\n    setErrors(prev => ({\n      ...prev,\n      [name]: false\n    }));\n    setValues(prev => ({\n      ...prev,\n      [name]: numberWithCommas(temp)\n    }));\n  };\n  const handleCalc = () => {\n    const tempErrors = {};\n    if (!value) {\n      tempErrors.material = true;\n    }\n    const dr = parseFloat(values.dropRate?.replace(/,/g, ''));\n    const killsMK = parseFloat(values.killsWithMultikill?.replace(/,/g, ''));\n    const mkBonus = parseFloat(values.multiKillBonus?.replace(/,/g, ''));\n    if (isNaN(dr) || values.dropRate === '') {\n      tempErrors.dropRate = true;\n    }\n    if (isNaN(killsMK) || values.killsWithMultikill === '') {\n      tempErrors.killsWithMultikill = true;\n    }\n    if (isNaN(mkBonus) || values.multiKillBonus === '') {\n      tempErrors.multiKillBonus = true;\n    }\n    if (tempErrors?.material || tempErrors.dropRate || tempErrors.killsWithMultikill || tempErrors.multiKillBonus) {\n      setErrors(tempErrors);\n      return;\n    }\n    const kills = Math.round(killsMK / (1 + mkBonus / 100));\n    const variable = kills * parseFloat(value?.chance) * dr;\n    if (!isNaN(variable)) {\n      const breakpoints = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n      const chances = [2, 2.51, 3.51, 4.51, 5.51, 6.51, 7.51, 8.51, 9.51];\n      setResults(breakpoints.map((breakpoint, index) => ({\n        breakpoint,\n        hours: chances[index] / variable\n      })));\n    }\n  };\n  return <>\n    <Stack direction={'row'} gap={1} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-source-file=\"guaranteed-drop-calculator.jsx\">\n      <Autocomplete id=\"drop calc\" value={value} onChange={(event, newValue) => {\n        setValue(newValue);\n        setErrors({\n          ...errors,\n          material: false\n        });\n      }} options={[...items]} filterSelectedOptions filterOptions={filterOptions} getOptionLabel={option => {\n        return option?.displayName ? option?.displayName?.replace(/_/g, ' ') : '';\n      }} sx={{\n        width: 300\n      }} renderTags={(tag, getTagProps) => {\n        return tag.map((option, index) => <Chip key={index} icon={<img width={24} height={24} src={`${prefix}data/${option?.rawName}.png`} alt={''} />} label={option?.displayName?.replace(/_/g, ' ')} {...getTagProps({\n          index\n        })} />);\n      }} renderOption={(props, option) => {\n        if (!option) return null;\n        return <Stack {...props} key={props.id} sx={{\n          alignItems: 'flex-start !important'\n        }}>\n              <Stack direction={'row'} gap={2}>\n                <img key={`img-${props.id}`} width={24} height={24} src={`${prefix}data/${option?.rawName}.png`} alt=\"\" />\n                <Typography key={`text-${props.id}`}>{option?.displayName?.replace(/_/g, ' ')} (1\n                  / {Math.ceil(1 / option?.chance)})</Typography>\n              </Stack>\n              <Typography variant={'caption'}>{cleanUnderscore(option?.monsterDisplayName)}</Typography>\n            </Stack>;\n      }} renderInput={params => <TextField {...params} error={errors?.material} label=\"Material name\" variant=\"outlined\" />} data-sentry-element=\"Autocomplete\" data-sentry-source-file=\"guaranteed-drop-calculator.jsx\" />\n      <TextField error={errors?.dropRate} onChange={handleChange} name={'dropRate'} value={values.dropRate} label={'Drop rate'} data-sentry-element=\"TextField\" data-sentry-source-file=\"guaranteed-drop-calculator.jsx\" />\n      <TextField error={errors?.killsWithMultikill} onChange={handleChange} name={'killsWithMultikill'} value={values.killsWithMultikill} label={'Kills with multi kill'} data-sentry-element=\"TextField\" data-sentry-source-file=\"guaranteed-drop-calculator.jsx\" />\n      <TextField error={errors?.multiKillBonus} onChange={handleChange} name={'multiKillBonus'} value={values.multiKillBonus} label={'Multikill bonus %'} data-sentry-element=\"TextField\" data-sentry-source-file=\"guaranteed-drop-calculator.jsx\" />\n      <Button variant={'contained'} onClick={handleCalc} data-sentry-element=\"Button\" data-sentry-source-file=\"guaranteed-drop-calculator.jsx\">Run</Button>\n    </Stack>\n    <Typography variant={'caption'} data-sentry-element=\"Typography\" data-sentry-source-file=\"guaranteed-drop-calculator.jsx\">* This does not include values from the 2x kills lab bonus or the god bonus in W5 (divide the kills input by 4 if both bonuses apply), kill-per-kill talents, prayers, or bubbles.</Typography>\n    {results?.length > 0 ? <Stack mt={2}>\n      <Typography variant={'h6'}>Results</Typography>\n      {results.map(({\n        breakpoint,\n        hours\n      }) => <Stack key={'result-' + breakpoint}>\n        <Typography>x{breakpoint} drop in {notateNumber(hours, 'MultiplierInfo')} hours</Typography>\n      </Stack>)}\n    </Stack> : null}    </>;\n};\nexport default GuaranteedDropCalculator;"],"names":["window","__NEXT_P","push","__webpack_require__","filterOptions","createFilterOptions","trim","limit","__webpack_exports__","value","setValue","useState","items","useMemo","Object","values","monsterDrops","flat","filter","monster","rawName","includes","chance","setValues","dropRate","killsWithMultikill","multiKillBonus","errors","setErrors","results","setResults","handleChange","target","param","name","temp","replace","prev","numberWithCommas","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","Stack","direction","gap","flexWrap","alignItems","data-sentry-element","data-sentry-source-file","jsx","Autocomplete","id","onChange","event","newValue","material","options","filterSelectedOptions","getOptionLabel","option","displayName","sx","width","renderTags","tag","getTagProps","map","index","Chip","icon","img","height","src","concat","prefix","alt","label","renderOption","props","react__WEBPACK_IMPORTED_MODULE_1__","createElement","key","Typography","Math","ceil","variant","cleanUnderscore","monsterDisplayName","renderInput","params","TextField","error","Button","onClick","tempErrors","dr","parseFloat","killsMK","mkBonus","isNaN","variable","kills","round","chances","breakpoints","breakpoint","hours","length","mt","notateNumber"],"sourceRoot":""}