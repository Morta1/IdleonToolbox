{"version":3,"file":"static/chunks/pages/tools/builds-cdfb334d9c07c22d.js","mappings":"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","sources":["webpack://_N_E/?cdfa","webpack://_N_E/./pages/tools/builds.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tools/builds\",\n      function () {\n        return require(\"private-next-pages/tools/builds.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tools/builds\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\nimport { Box, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, InputBase, InputLabel, Select, Stack, TextField, Typography, useMediaQuery } from '@mui/material';\nimport { cleanUnderscore, growth, isProd, prefix } from '@utility/helpers';\nimport Tooltip from 'components/Tooltip';\nimport AddIcon from '@mui/icons-material/Add';\nimport { classes } from 'data/website-data';\nimport MenuItem from '@mui/material/MenuItem';\nimport allBuilds from 'data/builds.json';\nimport styled from '@emotion/styled';\nimport { useRouter } from 'next/router';\nimport { NextSeo } from 'next-seo';\nimport IconButton from '@mui/material/IconButton';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport debounce from 'lodash.debounce';\nimport Button from '@mui/material/Button';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport { Adsense } from '@ctrl/react-adsense';\nimport { CONTENT_PERCENT_SIZE } from '@utility/consts';\nconst allClasses = Object.keys(allBuilds);\nconst Builds = () => {\n  const router = useRouter();\n  const [build, setBuild] = useState({\n    index: 0,\n    className: allClasses[1],\n    list: allBuilds[allClasses[1]]\n  });\n  const [createMode, setCreateMode] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [customBuild, setCustomBuild] = useState();\n  const showWideSideBanner = useMediaQuery('(min-width: 1600px)', {\n    noSsr: true\n  });\n  const showNarrowSideBanner = useMediaQuery('(min-width: 850px)', {\n    noSsr: true\n  });\n  useEffect(() => {\n    if (router.query) {\n      let {\n        c,\n        b\n      } = router.query || {};\n      c = c?.capitalizeAll();\n      if (allClasses.includes(c)) {\n        let ind;\n        if (!isNaN(b) || Number(b) < allBuilds[c].length) {\n          ind = b;\n        } else {\n          ind = 0;\n        }\n        setBuild({\n          index: parseInt(ind),\n          className: c,\n          list: allBuilds[c]\n        });\n      }\n    }\n  }, []);\n  const handleClassChange = event => {\n    setBuild({\n      ...build,\n      index: 0,\n      className: event.target.value,\n      list: allBuilds[event.target.value]\n    });\n    setCustomBuild();\n    router.replace({\n      query: {\n        ...router.query,\n        c: event.target.value.toLowerCase(),\n        b: 0\n      }\n    });\n  };\n  const handleBuildChange = event => {\n    const buildIndex = event.target.value;\n    setBuild({\n      ...build,\n      index: parseInt(buildIndex)\n    });\n    router.replace({\n      query: {\n        ...router.query,\n        b: parseInt(buildIndex)\n      }\n    });\n  };\n  const handleCustomBuildChange = ({\n    tabIndex,\n    tabTalents,\n    tabNote\n  }) => {\n    let tempTabs = {};\n    const allTabs = !customBuild?.tabs ? build?.list?.[0]?.tabs?.toObjectByIndex() : {};\n    if (tabTalents) {\n      tempTabs = {\n        tabs: {\n          ...allTabs,\n          ...customBuild?.tabs,\n          [tabIndex]: {\n            ...(customBuild?.tabs?.[tabIndex] || allTabs?.[tabIndex]),\n            talents: tabTalents\n          }\n        }\n      };\n    }\n    if (tabNote) {\n      tempTabs = {\n        tabs: {\n          ...allTabs,\n          ...customBuild?.tabs,\n          [tabIndex]: {\n            ...(customBuild?.tabs?.[tabIndex] || allTabs?.[tabIndex]),\n            note: tabNote\n          }\n        }\n      };\n    }\n    setCustomBuild({\n      ...customBuild,\n      ...tempTabs\n    });\n  };\n  const handleShare = async () => {\n    try {\n      await navigator.clipboard.writeText(JSON.stringify({\n        ...customBuild,\n        class: build?.className,\n        tabs: Object.values(customBuild?.tabs)\n      }, null, 2));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const getSpecificList = index => {\n    return build?.list?.find((_, ind) => ind === index);\n  };\n  return <>\n    <NextSeo title=\"Builds | Idleon Toolbox\" description=\"Builds for all classes\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"builds.jsx\" />\n    <Stack direction={'row'} gap={2} justifyContent={'space-between'} data-sentry-element=\"Stack\" data-sentry-source-file=\"builds.jsx\">\n      <Stack sx={{\n        maxWidth: !showNarrowSideBanner && !showWideSideBanner ? '100%' : CONTENT_PERCENT_SIZE\n      }} data-sentry-element=\"Stack\" data-sentry-source-file=\"builds.jsx\">\n        <Typography mt={2} variant={\"h2\"} data-sentry-element=\"Typography\" data-sentry-source-file=\"builds.jsx\">Builds</Typography>\n        <Stack direction={'row'} my={3} gap={2} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-source-file=\"builds.jsx\">\n          <FormControl sx={{\n            width: 270\n          }} data-sentry-element=\"FormControl\" data-sentry-source-file=\"builds.jsx\">\n            <InputLabel id=\"class-select-label\" data-sentry-element=\"InputLabel\" data-sentry-source-file=\"builds.jsx\">Class</InputLabel>\n            <Select disabled={createMode} labelId=\"class-select-label\" id=\"class-select\" value={build?.className} label=\"Class\" onChange={handleClassChange} data-sentry-element=\"Select\" data-sentry-source-file=\"builds.jsx\">\n              {Object.keys(allBuilds).map((name, index) => {\n                return <MenuItem key={`${name}-${index}`} value={name}>\n                  <Stack direction={'row'} alignItems={'center'} gap={1}>\n                    <ClassIcon src={`${prefix}data/ClassIcons${classes.indexOf(name)}.png`} alt=\"\" />\n                    <Typography>{cleanUnderscore(name)}</Typography>\n                  </Stack>\n                </MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n          <FormControl sx={{\n            width: 350\n          }} data-sentry-element=\"FormControl\" data-sentry-source-file=\"builds.jsx\">\n            <InputLabel id=\"build-select-label\" data-sentry-element=\"InputLabel\" data-sentry-source-file=\"builds.jsx\">Build</InputLabel>\n            <Select disabled={createMode} placeholder={'Choose a build'} labelId=\"build-select-label\" id=\"build-select\" value={build?.index} label=\"Build\" onChange={handleBuildChange} data-sentry-element=\"Select\" data-sentry-source-file=\"builds.jsx\">\n              {build?.list?.map((build, index) => {\n                const {\n                  title\n                } = build;\n                return <MenuItem key={`${title}-${index}`} value={index}>{title || 'Press + to add the first build!'}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n          <FormControl data-sentry-element=\"FormControl\" data-sentry-source-file=\"builds.jsx\">\n            <IconButton onClick={() => setCreateMode(true)} data-sentry-element=\"IconButton\" data-sentry-source-file=\"builds.jsx\">\n              <AddIcon data-sentry-element=\"AddIcon\" data-sentry-source-file=\"builds.jsx\" />\n            </IconButton>\n          </FormControl>\n          {createMode ? <FormControl>\n            <Tooltip title={'Exit create mode'}>\n              <IconButton onClick={() => setOpenDialog(true)}>\n                <ClearIcon />\n              </IconButton>\n            </Tooltip>\n          </FormControl> : null}\n        </Stack>\n        <Stack data-sentry-element=\"Stack\" data-sentry-source-file=\"builds.jsx\">\n          {build?.list?.length > 0 ? <div>\n            <Stack direction={'row'} alignItems={'center'} gap={2}>\n              <Typography variant={'h4'}>{createMode ? 'Custom Build' : getSpecificList(build?.index)?.title}</Typography>\n              {createMode ? <Tooltip title={'Share custom build'}>\n                <IconButton onClick={handleShare}>\n                  <FileCopyIcon />\n                </IconButton>\n              </Tooltip> : null}\n            </Stack>\n            {createMode ? <Typography component={'div'} variant={'caption'} sx={{\n              mb: 3\n            }}>* If you want to share your custom\n                build, click on copy icon above and paste in <a style={{\n                textDecoration: 'underline'\n              }} href=\"https://github.com/Morta1/IdleonToolbox/discussions/categories/builds\">Builds Discussions</a> or\n                send it\n                in the discord Builds channel</Typography> : null}\n            <Grid container spacing={2}>\n              {getSpecificList(build?.index)?.tabs?.map((tab, index) => {\n                return <Grid item key={`${build?.index}-${build?.className}-${index}`}>\n                  <Tab {...tab} createMode={createMode} onCustomBuildChange={handleCustomBuildChange} tabIndex={index} />\n                </Grid>;\n              })}\n            </Grid>\n          </div> : <Typography variant={'h5'}>There are no builds for this class</Typography>}\n        </Stack>\n      </Stack>\n      {showWideSideBanner || showNarrowSideBanner ? <Box sx={{\n        backgroundColor: isProd ? '' : '#d73333',\n        width: showWideSideBanner ? 300 : showNarrowSideBanner ? 160 : 0,\n        height: 600\n      }}>\n        {isProd && showWideSideBanner ? <Adsense client=\"ca-pub-1842647313167572\" slot=\"7052896184\" /> : null}\n        {isProd && showNarrowSideBanner && !showWideSideBanner ? <Adsense client=\"ca-pub-1842647313167572\" slot=\"5548242827\" /> : null}\n      </Box> : null}\n    </Stack>\n\n    <Dialog open={openDialog} onClose={() => setOpenDialog(false)} data-sentry-element=\"Dialog\" data-sentry-source-file=\"builds.jsx\">\n      <DialogTitle data-sentry-element=\"DialogTitle\" data-sentry-source-file=\"builds.jsx\">Edit mode</DialogTitle>\n      <DialogContent data-sentry-element=\"DialogContent\" data-sentry-source-file=\"builds.jsx\">\n        Are you sure you want to exit edit mode?\n      </DialogContent>\n      <DialogActions data-sentry-element=\"DialogActions\" data-sentry-source-file=\"builds.jsx\">\n        <Button autoFocus onClick={() => {\n          setCreateMode(false);\n          setOpenDialog(false);\n        }} data-sentry-element=\"Button\" data-sentry-source-file=\"builds.jsx\">Yes</Button>\n        <Button onClick={() => setOpenDialog(false)} data-sentry-element=\"Button\" data-sentry-source-file=\"builds.jsx\">No</Button>\n      </DialogActions>\n    </Dialog>\n  </>;\n};\nconst ClassIcon = styled.img`\n  height: 25px;\n  width: 25px;\n  object-fit: contain;\n`;\nconst Tab = ({\n  note,\n  talents: talentList = [],\n  createMode,\n  onCustomBuildChange,\n  tabIndex\n}) => {\n  const [localTalents, setLocalTalents] = useState([]);\n  useEffect(() => {\n    setLocalTalents(!createMode ? talentList : talentList?.map(talent => ({\n      ...talent,\n      level: 0\n    })));\n  }, [createMode]);\n  const handleChange = debounce(({\n    target\n  }, index) => {\n    const val = target?.value;\n    let tempTalents, tempNote;\n    if (target?.name === 'level') {\n      tempTalents = localTalents?.map((talent, ind) => ind === index ? {\n        ...talent,\n        level: val ? val : 0\n      } : talent);\n      setLocalTalents(tempTalents);\n    }\n    if (target?.name === 'note') {\n      tempNote = val;\n    }\n    typeof onCustomBuildChange === 'function' && onCustomBuildChange({\n      tabIndex,\n      tabTalents: tempTalents,\n      tabNote: tempNote\n    });\n  }, 200);\n  return <>\n    <Stack gap={1} direction={'row'} flexWrap={'wrap'} sx={{\n      width: 320,\n      minHeight: 255.95\n    }} data-sentry-element=\"Stack\" data-sentry-source-file=\"builds.jsx\">\n      {localTalents.map((skill, index) => {\n        const {\n          name,\n          skillIndex,\n          level\n        } = skill;\n        return <Stack alignItems={'center'} key={skillIndex} sx={{\n          width: 56,\n          height: 56\n        }}>\n          <Tooltip title={<TalentTooltip name={name} level={level} skill={skill} />}>\n            <img style={{\n              opacity: createMode ? 1 : level === 0 ? .3 : 1\n            }} src={`${prefix}data/UISkillIcon${skillIndex}.png`} alt=\"\" />\n          </Tooltip>\n          {createMode ? <CustomInput name={'level'} onChange={e => handleChange(e, index)} /> : <Typography variant={'body1'}>{level || <span>&nbsp;</span>}</Typography>}\n        </Stack>;\n      })}\n    </Stack>\n    <Card sx={{\n      width: 320,\n      my: 2\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"builds.jsx\">\n      <CardContent data-sentry-element=\"CardContent\" data-sentry-source-file=\"builds.jsx\">\n        {createMode ? <CustomMultiline name={'note'} minRows={2} multiline placeholder={`Tab ${tabIndex} note`} onChange={e => handleChange(e)} /> : <Typography>{note}</Typography>}\n      </CardContent>\n    </Card>\n  </>;\n};\nconst TalentTooltip = ({\n  name,\n  skill,\n  level\n}) => {\n  const {\n    description,\n    funcX,\n    x1,\n    x2,\n    funcY,\n    y1,\n    y2\n  } = skill;\n  const realLevel = isNaN(parseInt(level)) ? 100 : parseInt(level);\n  const mainStat = realLevel > 0 ? growth(funcX, realLevel, x1, x2) : 0;\n  const secondaryStat = realLevel > 0 ? growth(funcY, realLevel, y1, y2) : 0;\n  return <>\n    <Typography variant={'h5'} data-sentry-element=\"Typography\" data-sentry-source-file=\"builds.jsx\">{cleanUnderscore(name)}</Typography>\n    <Typography variant={'body1'} data-sentry-element=\"Typography\" data-sentry-source-file=\"builds.jsx\">{cleanUnderscore(cleanUnderscore(description).replace('{', mainStat).replace('}', secondaryStat))}</Typography>\n  </>;\n};\nconst CustomInput = styled(InputBase)`\n  & .MuiInputBase-input {\n    border: 1px solid #7e7e7e;\n    border-radius: 5px;\n    padding: 3px;\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      /* display: none; <- Crashes Chrome on hover */\n      -webkit-appearance: none;\n      margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n    }\n\n    &[type=number] {\n      -moz-appearance: textfield; /* Firefox */\n    }\n  }\n`;\nconst CustomMultiline = styled(TextField)`\n  & {\n    width: 100%;\n  }\n`;\nexport default Builds;"],"names":["window","__NEXT_P","push","__webpack_require__","allClasses","Object","keys","allBuilds","ClassIcon","styled","img","_templateObject","Tab","note","talents","talentList","createMode","onCustomBuildChange","tabIndex","param","localTalents","setLocalTalents","useState","useEffect","map","talent","level","handleChange","debounce","index","tempTalents","tempNote","target","val","value","name","ind","tabTalents","tabNote","jsx_runtime","jsxs","Fragment","jsx","Stack","gap","direction","flexWrap","sx","width","minHeight","data-sentry-element","data-sentry-source-file","skill","skillIndex","alignItems","height","Tooltip","title","TalentTooltip","style","opacity","src","prefix","concat","alt","CustomInput","onChange","e","Typography","variant","span","Card","my","CardContent","CustomMultiline","minRows","multiline","placeholder","description","funcX","x1","x2","funcY","y1","y2","realLevel","isNaN","parseInt","mainStat","growth","secondaryStat","cleanUnderscore","replace","InputBase","TextField","builds","build","getSpecificList","router","useRouter","setBuild","className","list","setCreateMode","openDialog","setOpenDialog","customBuild","setCustomBuild","showWideSideBanner","useMediaQuery","noSsr","showNarrowSideBanner","query","c","b","capitalizeAll","includes","Number","length","handleCustomBuildChange","tempTabs","allTabs","tabs","toObjectByIndex","handleShare","navigator","clipboard","writeText","JSON","stringify","class","values","err","console","error","find","_","NextSeo","justifyContent","maxWidth","CONTENT_PERCENT_SIZE","mt","FormControl","InputLabel","id","Select","disabled","labelId","label","event","toLowerCase","MenuItem","classes","indexOf","buildIndex","IconButton","onClick","AddIcon","ClearIcon","div","FileCopyIcon","component","mb","a","textDecoration","href","Grid","container","spacing","tab","item","Box","backgroundColor","isProd","Adsense","client","slot","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus"],"sourceRoot":""}